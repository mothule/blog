<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="ja-JP"><generator uri="https://jekyllrb.com/" version="3.9.0">Jekyll</generator><link href="https://blog.mothule.com/feed.xml" rel="self" type="application/atom+xml" /><link href="https://blog.mothule.com/" rel="alternate" type="text/html" hreflang="ja-JP" /><updated>2023-03-07T11:06:23+09:00</updated><id>https://blog.mothule.com/feed.xml</id><title type="html">もちゅろぐ</title><subtitle>iOSやSwift,RubyやRailsなどiPhoneアプリ開発とサーバーサイド開発を中心に綴っている技術ブログ</subtitle><entry><title type="html">getoptによるオプション対応をiOSエンジニアでも分かるCrashlyticsへdSYMアップを使って説明する</title><link href="https://blog.mothule.com/tools/shellscript/shellscript-upload-symbols-script-using-getopt" rel="alternate" type="text/html" title="getoptによるオプション対応をiOSエンジニアでも分かるCrashlyticsへdSYMアップを使って説明する" /><published>2021-03-14T00:00:00+09:00</published><updated>2023-03-07T09:59:55+09:00</updated><id>https://blog.mothule.com/tools/shellscript/shellscript-upload-symbols-script-using-getopt</id><content type="html" xml:base="https://blog.mothule.com/tools/shellscript/shellscript-upload-symbols-script-using-getopt">&lt;p&gt;iOSエンジニアいえど、避けては通れないシェルスクリプト。でもちょっと凝ろうとするとその慣れない構文やスタイルにすぐ折れます。&lt;/p&gt;

&lt;p&gt;今回はシェルスクリプトでgetoptを使ったオプション対応する方法について、実際に動くコードを使って説明します。
また、処理自体もiOSエンジニアには馴染みのあるFirebase Crashlyticsの&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;upload-symbols&lt;/code&gt;コマンドを使うので読みやすいと思います。&lt;/p&gt;

&lt;h2 id=&quot;概要&quot;&gt;概要&lt;/h2&gt;

&lt;h3 id=&quot;背景&quot;&gt;背景&lt;/h3&gt;
&lt;p&gt;今回スクリプト書いた経緯は、シェルスクリプトには必ずと言っていいほどオプション機能が備わっています。
Rubyではgemを使えばパースをいい感じにやってくれますが、シェルスクリプトではどのように実現しているのか仕組みを知っておこうと思いました。&lt;/p&gt;

&lt;h3 id=&quot;読者対象&quot;&gt;読者対象&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;iOSやAndroidエンジニアなどシェルスクリプトと正面から向かい合う機会が少ない人&lt;/li&gt;
  &lt;li&gt;ちょっと凝ったシェルスクリプトを書きたい人&lt;/li&gt;
  &lt;li&gt;念の為シェルスクリプトの読むスキルを向上させときたい人&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;この記事で得られる内容&quot;&gt;この記事で得られる内容&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;getoptの使い方やMacの標準搭載したgetoptの注意点&lt;/li&gt;
  &lt;li&gt;getoptを使ったオプション対応&lt;/li&gt;
  &lt;li&gt;シェルのcase文の使い方&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;作ったスクリプトの使い方&quot;&gt;作ったスクリプトの使い方&lt;/h2&gt;
&lt;p&gt;説明するスクリプトの動作について説明します。&lt;/p&gt;

&lt;p&gt;Firebase Crashlyticsに入っている&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;upload-symbols&lt;/code&gt;コマンドを使う機能のみです。
これにコマンドに必要な引数をオプションで変更可能にしてあります。&lt;/p&gt;

&lt;p&gt;アップロードしたいdSYMを次の方法で指定できます。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;アーカイブされた&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;*.dSYM&lt;/code&gt;ファイル&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;*.dSYM&lt;/code&gt;ファイルの入ったディレクトリ&lt;/li&gt;
  &lt;li&gt;直接&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;*.dSYM&lt;/code&gt;ファイル指定&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;./dsyms-uploade.sh ~/Downloads/hogehoge-1.2.3.zip
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;./dsyms-uploade.sh ~/Downloads/hogehoge-1.2.3/
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;./dsyms-uploade.sh ~/Downloads/hogehoge-1.2.3/hogehoge.dSYM
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;オプションを渡して処理に使うパス先を変更できます。&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;./dsyms-uploade.sh ~/Downloads/hogehoge-1.2.3.zip &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; ~/workspace/hogehoge/Pods/FirebaseCrashlytics/upload-symbols &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; ~/workspace/hogehoge/GoogleService-Info-release.plist
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;ロングオプションにも対応します。&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;./dsyms-uploade.sh ~/Downloads/hogehoge-1.2.3.zip &lt;span class=&quot;nt&quot;&gt;--dry-run&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;ヘルプを出すとそれっぽいヘルププリントが出力されます。&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ ./dsyms-uploade.sh --help
Usage: ./dsyms-uploade.sh &amp;lt;dSYM&amp;gt; [-c, --upload-symbols-command-path path] [-p, --google-service-plist-path path] [-d, --dry-run] [-h, --help]


  dSYM			dSYMファイルまたはアーカイブされた複数のdSYM、dSYMファイルが含まれたディレクトリを指定します。
			ディレクトリの場合は *.dSYM で一致するファイルが対象となります。

Options:
  --upload-symbols-command-path &amp;lt;path&amp;gt;
			upload-symbolsコマンドのパスを指定します。
  -c			--upload-symbols-command-pathのエイリアス
  --google-service-plist-path &amp;lt;path&amp;gt;
			GoogleService-Info.plistのパスを指定します。
  -p			--google-service-plist-pathのエイリアス
  --help		このヘルプ画面を表示します
  -h			--helpのエイリアス
  -d,--dry-run		実行の代わりに実行するコマンドラインを表示します。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;getoptとは&quot;&gt;getoptとは&lt;/h2&gt;
&lt;p&gt;getoptの役割はとても単純で、コマンドオプションをパースするシェルコマンドです。&lt;/p&gt;

&lt;h3 id=&quot;getoptsとの違い&quot;&gt;getoptsとの違い&lt;/h3&gt;
&lt;p&gt;こちらも同様にコマンドオプションですが、bashのビルドインコマンドの一つとなります。
getoptsではロングオプションの対応が少し面倒そうだったためgetoptにしました。&lt;/p&gt;

&lt;h3 id=&quot;getoptにはgnu版とbsd版がある&quot;&gt;getoptにはGNU版とBSD版がある&lt;/h3&gt;
&lt;p&gt;getoptには出どころが複数あり、出どころによって挙動が異なります。
大きく分けるとGNU版とBSD版になります。&lt;/p&gt;

&lt;h2 id=&quot;gnu版getoptを使う理由&quot;&gt;GNU版getoptを使う理由&lt;/h2&gt;
&lt;p&gt;今回使うgetoptはGNU版を使います。理由は次の通りです。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;ロングオプション&lt;/strong&gt;が使える&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Bitrise&lt;/strong&gt;がgnu版をインストールしてた&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ロングオプションを使いたい理由は、スクリプト利用時の可読性もありますが、単純によく見かけるよくできたオプションにはロングオプションが使われているからです。&lt;/p&gt;

&lt;p&gt;また、このスクリプトの処理内容はFirebase CrashlyticsへdSYMをアップロードすることです。
アーカイブしてApp Store Connectでそのビルドを使うなら、そのビルドのdSYMをアップロードする必要があります。
そのためCIサービスからアーカイブするようなことも考慮します。&lt;/p&gt;

&lt;p&gt;自分がよく使っているCIサービスはBitriseで、&lt;a href=&quot;https://github.com/bitrise-io/bitrise.io/blob/master/system_reports/osx-xcode-12.5.x.log&quot;&gt;BitriseのシステムレポートでGNU版getoptがインストールされていた&lt;/a&gt;という理由もあります。&lt;/p&gt;

&lt;h3 id=&quot;gnu版getoptをmacにインストール&quot;&gt;GNU版getoptをMacにインストール&lt;/h3&gt;
&lt;p&gt;MacでGNU版getoptを使うには、Homebrewからインストールします。&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;brew &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;gnu-getopt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;インストールは&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;keg-only&lt;/code&gt;となっていので、インストール後に&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gnu-getopt&lt;/code&gt;が優先して使われるようにパス変更します。&lt;/p&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'export PATH=&quot;/usr/local/opt/gnu-getopt/bin:$PATH&quot;'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; ~/.zshrc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;コード全容&quot;&gt;コード全容&lt;/h2&gt;
&lt;p&gt;コードはGistに上げてあります。このコードから抜粋して説明します。&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/mothule/391e64e936bfc9593a17e57803a74c12.js&quot;&gt;&lt;/script&gt;

&lt;h3 id=&quot;コードの流れ&quot;&gt;コードの流れ&lt;/h3&gt;
&lt;p&gt;スクリプトは1ファイルで構成されてます。
この1ファイルを上から見たとき次の順序で処理構成してます。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;関数定義&lt;/li&gt;
  &lt;li&gt;スクリプト前提条件の検証&lt;/li&gt;
  &lt;li&gt;引数で受け取る変数宣言&lt;/li&gt;
  &lt;li&gt;getoptで引数からオプションへ変換&lt;/li&gt;
  &lt;li&gt;オプション毎のハンドリング&lt;/li&gt;
  &lt;li&gt;受け取った変数の検証&lt;/li&gt;
  &lt;li&gt;upload-symbolsコマンドの実行&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;関数定義&quot;&gt;関数定義&lt;/h2&gt;
&lt;p&gt;ヘルプ用表示関数(&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;usage()&lt;/code&gt;)と引数を検証する関数(&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;validate_arg&lt;/code&gt;)の2つが定義されてます。&lt;/p&gt;

&lt;h3 id=&quot;引数を検証する関数&quot;&gt;引数を検証する関数&lt;/h3&gt;

&lt;p&gt;オプションには値も一緒に渡すタイプもあります。
その場合に値が正しいか検証する関数です。&lt;/p&gt;

&lt;p&gt;渡された引数が「文字列としての長さが0」または「文字先頭がハイフン(&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-&lt;/code&gt;)から始まる場合は、ヘルプを表示します。
ヘルプは最後に&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;exit 1&lt;/code&gt;を出しているのでそのままスクリプトは終了します。&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;validate_arg&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;local &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;# valueの長さが0 or valueがとマッチ&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[[&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-z&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[[&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;~ ^-+ &lt;span class=&quot;o&quot;&gt;]]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then
    &lt;/span&gt;usage
  &lt;span class=&quot;k&quot;&gt;fi&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;この関数は値やオプション値の検証時に呼ばれています。&lt;/p&gt;

&lt;h2 id=&quot;スクリプト前提条件の検証&quot;&gt;スクリプト前提条件の検証&lt;/h2&gt;
&lt;p&gt;先程までは関数でしたので処理としてはここが最初に実行されます。
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;getopt&lt;/code&gt;がBSD版ではなくGNU版を使っているかを検証します。
ここでBSD版だと後のgetoptの処理が正しくされず変な挙動となるためです。&lt;/p&gt;

&lt;p&gt;なぜ、GNU版かどうかをこの方法で判断してるのかは、実際に双方のコマンドを見比べて決めました。&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[[&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;getopt &lt;span class=&quot;nt&quot;&gt;--version&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;grep &lt;/span&gt;linux&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then
  &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;利用にはgnu-getoptが必要です。&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&amp;amp;2
  &lt;span class=&quot;nb&quot;&gt;exit &lt;/span&gt;1
&lt;span class=&quot;k&quot;&gt;elif&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[[&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$# &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; 0 &lt;span class=&quot;o&quot;&gt;]]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then
  &lt;/span&gt;usage
&lt;span class=&quot;k&quot;&gt;fi&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;引数で受け取る変数宣言&quot;&gt;引数で受け取る変数宣言&lt;/h2&gt;

&lt;p&gt;上から順番に次の役割を持っています。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;upload_command&lt;/code&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;upload-symbols&lt;/code&gt;コマンドのパス&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;google_service_plist&lt;/code&gt;: Firebaseで受け取るplistのパス&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dsym_path&lt;/code&gt;: dSYMのパス&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dry_run&lt;/code&gt;: Dry実行するかどうか&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;upload_command&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Pods/FirebaseCrashlytics/upload-symbols
&lt;span class=&quot;nv&quot;&gt;google_service_plist&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;./GoogleService-Info.plist
&lt;span class=&quot;nv&quot;&gt;dsym_path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;dry_run&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;getoptで引数からオプションへ変換&quot;&gt;getoptで引数からオプションへ変換&lt;/h2&gt;

&lt;p&gt;getoptコマンドを使って渡された引数から有効なオプションを&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;opt&lt;/code&gt;へ抜き出します。
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-o&lt;/code&gt;でオプションで使う文字列で、値付きはコロンを文字後ろにつけます。
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-l&lt;/code&gt;でロングオプションで使う文字列で値付きはコロンを文字列後ろにつけます。カンマで区切ります。
最後の &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;eval set&lt;/code&gt;で位置パラメータを再構成します。&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;opt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;getopt &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;c:p:hd&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-l&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;upload-symbols-command-path:,google-service-plist-path:,help,dry-run&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$@&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[[&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$?&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; 0 &lt;span class=&quot;o&quot;&gt;]]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then
  &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;getopt実行にエラーが発生しました。&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&amp;amp;2
  &lt;span class=&quot;nb&quot;&gt;exit &lt;/span&gt;1
&lt;span class=&quot;k&quot;&gt;fi
&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;eval set&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$opt&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;オプション毎のハンドリング&quot;&gt;オプション毎のハンドリング&lt;/h2&gt;

&lt;p&gt;シェルスクリプトのオプションのハンドリングは、引数を先頭からキューのように取り出して破棄しながら進めます。
そのためオプションを1つハンドリングすると&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;shift&lt;/code&gt;して次の引数を&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$1&lt;/code&gt;として取り出します。
オプションに値があるオプションの場合は、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$2&lt;/code&gt;も値として使い、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;shift 2&lt;/code&gt;でオプション名とオプション値2つを履きします。&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;while &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;true
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;do
  case&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--upload-symbols-command-path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    validate_arg &lt;span class=&quot;nv&quot;&gt;$2&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;upload_command&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$2&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;shift &lt;/span&gt;2 &lt;span class=&quot;c&quot;&gt;# 値付きなので2つ分ずらす&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--google-service-plist-path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    validate_arg &lt;span class=&quot;nv&quot;&gt;$2&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;google_service_plist&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$2&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;shift &lt;/span&gt;2
    &lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--help&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# -h または --help&lt;/span&gt;
    usage
    &lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--dry-run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;dry_run&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;true
    shift&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# -- の場合何もしない&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;shift
    break&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# それ以外&lt;/span&gt;
    usage
    &lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;esac&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;受け取った変数の検証&quot;&gt;受け取った変数の検証&lt;/h2&gt;
&lt;p&gt;オプションのハンドリングが済んだら、
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;upload-symbols&lt;/code&gt;コマンドを使う前に関係する変数が有効か検証します。&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[[&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$upload_command&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;]]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then
  &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;upload_command_pathが有効なパスではありません。&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;upload_command&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&amp;amp;2
  &lt;span class=&quot;nb&quot;&gt;exit &lt;/span&gt;1
&lt;span class=&quot;k&quot;&gt;fi

if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[[&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$google_service_plist&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then
  &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;google_service_plistが有効なパスではありません。&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;google_service_plist&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&amp;amp;2
  &lt;span class=&quot;nb&quot;&gt;exit &lt;/span&gt;1
&lt;span class=&quot;k&quot;&gt;fi

if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[[&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$dsym_path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then
  &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;dsym_pathが有効なパスではありません。&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;dsym_path&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&amp;amp;2
  &lt;span class=&quot;nb&quot;&gt;exit &lt;/span&gt;1
&lt;span class=&quot;k&quot;&gt;fi&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;upload-symbolsコマンドの実行&quot;&gt;upload-symbolsコマンドの実行&lt;/h2&gt;

&lt;p&gt;最後に&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;upload-symbols&lt;/code&gt;コマンドを実行します。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--dry-run&lt;/code&gt;や&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-d&lt;/code&gt;でドライランが有効な場合は、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;upload-symbols&lt;/code&gt;コマンドは実行せずに
echoコマンドで実行予定のコマンドを文字列として表示して終了します。&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[[&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$dsym_path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# path is file.&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[[&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$dry_run&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then
    &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$upload_command&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; -gsp &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$google_service_plist&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; -p ios &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$dsym_path&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;$upload_command&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-gsp&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$google_service_plist&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; ios &lt;span class=&quot;nv&quot;&gt;$dsym_path&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;fi

elif&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[[&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$dsym_path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# path is directory&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[[&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$dry_run&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then
    &lt;/span&gt;find &lt;span class=&quot;nv&quot;&gt;$dsym_path&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-name&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;*.dSYM&quot;&lt;/span&gt; | xargs &lt;span class=&quot;nt&quot;&gt;-I&lt;/span&gt; FILE &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$upload_command&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-gsp&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$google_service_plist&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; ios FILE
  &lt;span class=&quot;k&quot;&gt;else
    &lt;/span&gt;find &lt;span class=&quot;nv&quot;&gt;$dsym_path&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-name&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;*.dSYM&quot;&lt;/span&gt; | xargs &lt;span class=&quot;nt&quot;&gt;-I&lt;/span&gt; FILE &lt;span class=&quot;nv&quot;&gt;$upload_command&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-gsp&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$google_service_plist&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; ios FILE
  &lt;span class=&quot;k&quot;&gt;fi

else
  &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;dsym_pathはファイルかディレクトリのみ有効です。&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;dsym_path&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&amp;amp;2
  &lt;span class=&quot;nb&quot;&gt;exit &lt;/span&gt;1
&lt;span class=&quot;k&quot;&gt;fi&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;ディレクトリ指定の動きについて&quot;&gt;ディレクトリ指定の動きについて&lt;/h3&gt;
&lt;p&gt;ファイル指定の場合は挙動はシンプルなため説明なく読み取れると思います。
ディレクトリ指定の場合は、指定ディレクトリ内を&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;*.dSYM&lt;/code&gt;で検索し、一致するパス全部に対し、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;upload-symbols&lt;/code&gt;コマンドを実行します。&lt;/p&gt;

&lt;h4 id=&quot;dsymをファイルを探す&quot;&gt;.dSYMをファイルを探す&lt;/h4&gt;
&lt;p&gt;コマンドライン前半の&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;find $dsym_path -name &quot;*.dSYM&quot;&lt;/code&gt;では、指定ディレクトリ内から&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;*.dSYM&lt;/code&gt;を探します。
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;find&lt;/code&gt;コマンドの結果を次の&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;xargs&lt;/code&gt;コマンドへパイプで渡します。&lt;/p&gt;

&lt;p&gt;コマンドライン後半の&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;xargs -I FILE $upload_command -gsp $google_service_plist -p ios FILE&lt;/code&gt;では、
前半から受け取った文字列を指定位置に配置して、実行します。この場合&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;FILE&lt;/code&gt;が前半から受け取った文字列、つまり&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.dSYM&lt;/code&gt;のパスになります。&lt;/p&gt;

&lt;h2 id=&quot;このスクリプトの使い所&quot;&gt;このスクリプトの使い所&lt;/h2&gt;
&lt;p&gt;今回はgetoptを使ってオプション対応する方法がメインですが、このスクリプト自体にも一応活用ケースはあります。&lt;/p&gt;

&lt;p&gt;元々これを書こうと思った理由として、「使用頻度高いのに毎回ネットからアップロードシェルコマンド確認するのが面倒」が一番でした。他にもdSYMが必ずしも手元PCにあるとは限らない環境だったりです。&lt;/p&gt;</content><author><name></name></author><category term="tools" /><category term="shellscript" /><category term="ios" /><category term="firebase" /><category term="crashlytics" /><summary type="html">iOSエンジニアいえど、避けては通れないシェルスクリプト。でもちょっと凝ろうとするとその慣れない構文やスタイルにすぐ折れます。</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://blog.mothule.com/assets/images/2021-03-14-shellscript-upload-symbols-script-using-getopt/eyecathc.png" /><media:content medium="image" url="https://blog.mothule.com/assets/images/2021-03-14-shellscript-upload-symbols-script-using-getopt/eyecathc.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">bundler(1.17.2)で–path=vendor/bundleつけたら警告出た話</title><link href="https://blog.mothule.com/ruby/bundler/ruby-bundler-warning-path-option" rel="alternate" type="text/html" title="bundler(1.17.2)で--path=vendor/bundleつけたら警告出た話" /><published>2021-02-22T00:00:00+09:00</published><updated>2023-03-07T09:59:55+09:00</updated><id>https://blog.mothule.com/ruby/bundler/ruby-bundler-warning-path-option</id><content type="html" xml:base="https://blog.mothule.com/ruby/bundler/ruby-bundler-warning-path-option">&lt;p&gt;Railsの空アプリを作りたくて、bundler(&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;1.17.2&lt;/code&gt;)で&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--path&lt;/code&gt;をつけてインストール実行したら、警告が表示されるようになってた。&lt;/p&gt;

&lt;h2 id=&quot;--pathvendorbundleで表示された警告&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--path=vendor/bundle&lt;/code&gt;で表示された警告&lt;/h2&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;DEPRECATED] The &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;--path&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; flag is deprecated because it relies on being remembered across bundler invocations, which bundler will no longer &lt;span class=&quot;k&quot;&gt;do in &lt;/span&gt;future versions. Instead please use &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;bundle config &lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--local&lt;/span&gt; path &lt;span class=&quot;s1&quot;&gt;'vendor/bundle'&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;, and stop using this flag
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;簡単に訳すと、&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--path&lt;/code&gt;フラグは全体に依存してるため、非推奨となりました。将来的に無視します。
代わりに&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bundle config set —-local path 'vendor/bundle'&lt;/code&gt;でセットしてください。&lt;/p&gt;

&lt;p&gt;とのこと。&lt;/p&gt;

&lt;p&gt;今後は、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--path&lt;/code&gt;オプションではなく、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bundle config&lt;/code&gt;として設定してほしいということですね。
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bundle config set —-local path 'vendor/bundle'&lt;/code&gt;を実行することで、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--path&lt;/code&gt;と同様に&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.bundle/config&lt;/code&gt;に&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;BUNDLE_PATH&lt;/code&gt;が追記されます。&lt;/p&gt;

&lt;h2 id=&quot;localとなってるがglobalでも設定される&quot;&gt;localとなってるがglobalでも設定される&lt;/h2&gt;
&lt;p&gt;警告文には&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;local&lt;/code&gt;になっていますが、これはglobalで設定してしまえば、毎回初回実行時に&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--path&lt;/code&gt;フラグの指定が不要になるようです。&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;bundle config path &lt;span class=&quot;s2&quot;&gt;&quot;vendor/bundle&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;ホームディレクトリの&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.bundle/config&lt;/code&gt;を見たところ&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;BUNDLE_PATH&lt;/code&gt;が追加されていました。&lt;/p&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cat&lt;/span&gt; ~/.bundle/config
&lt;span class=&quot;nt&quot;&gt;---&lt;/span&gt;
BUNDLE_PATH: &lt;span class=&quot;s2&quot;&gt;&quot;vendor/bundle&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;個人的には &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-j4&lt;/code&gt; フラグなどジョブ数指定も同様の扱いになってくれたほうが楽だったりする。&lt;/p&gt;</content><author><name></name></author><category term="ruby" /><category term="gem" /><category term="bundler" /><summary type="html">Railsの空アプリを作りたくて、bundler(1.17.2)で--pathをつけてインストール実行したら、警告が表示されるようになってた。</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://blog.mothule.com/assets/images/2021-02-22-ruby-bundler-warning-path-option/eyecatch.png" /><media:content medium="image" url="https://blog.mothule.com/assets/images/2021-02-22-ruby-bundler-warning-path-option/eyecatch.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">CentOS8上にnginxとpumaとRailsを手作業で構築した後に手動でデプロイする</title><link href="https://blog.mothule.com/ruby/rails/ruby-rails-build-nginx-puma-rails-on-centos" rel="alternate" type="text/html" title="CentOS8上にnginxとpumaとRailsを手作業で構築した後に手動でデプロイする" /><published>2021-02-19T00:00:00+09:00</published><updated>2023-03-07T09:59:55+09:00</updated><id>https://blog.mothule.com/ruby/rails/ruby-rails-build-nginx-puma-rails-on-centos</id><content type="html" xml:base="https://blog.mothule.com/ruby/rails/ruby-rails-build-nginx-puma-rails-on-centos">&lt;p&gt;Ansibleでインフラ構築したり、Capistranoでデプロイが自動化したり、内部のフローがイメージつかないので、それらを使わずに手動で構築してデプロイを試してみました。&lt;/p&gt;

&lt;h2 id=&quot;サーバー構築やアプリのデプロイの内部イメージついてますか&quot;&gt;サーバー構築やアプリのデプロイの内部イメージついてますか？&lt;/h2&gt;
&lt;p&gt;インフラ構築はAnsible、RailsアプリのデプロイはCapistranoを使うのが定番です。
しかし、内部を知らずにそれら使うと、実際のインフラ構築やデプロイのオペレーションがイメージできず頭がついてこれません。
自身の中でフローをイメージできることは、AnsibleやCapistranoを使うときに最適な処理を構築には必須です。&lt;/p&gt;

&lt;p&gt;そのため、この記事ではAnsibleやCapistranoを使わない方法でインフラ構築やデプロイ作業を行いました。
具体的にはそれぞれ次の方法で実現します。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Ansibleを使わずnginx × Puma × Rails環境を手作業で構築&lt;/li&gt;
  &lt;li&gt;Capistranoを使わずgitやSSHを使ってデプロイ&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;対象読者&quot;&gt;対象読者&lt;/h3&gt;
&lt;p&gt;Mac上でrbenvでRuby環境を構築し、Railsアプリを作ったことがあるが、
Linuxサーバにデプロイをしたことがない、またはデプロイはあるがイマイチ腹落ちできていない。&lt;/p&gt;

&lt;h3 id=&quot;この記事のゴール&quot;&gt;この記事のゴール&lt;/h3&gt;
&lt;p&gt;Macで作ったRailsアプリをCentOS8上に展開、起動できるようにする。
コード更新を手作業で行えるようにする。&lt;/p&gt;

&lt;h3 id=&quot;この記事でやらないこと&quot;&gt;この記事でやらないこと&lt;/h3&gt;
&lt;p&gt;インフラ構築とデプロイがテーマなので、HTTPS対応とpuma_worker_killerは対応していません。&lt;/p&gt;

&lt;h2 id=&quot;linuxcentosサーバの構築は省略&quot;&gt;Linux(CentOS)サーバの構築は省略&lt;/h2&gt;
&lt;p&gt;この記事ではVPS上にCentOS8をインストールした後の内容となっています。
CentOS8のセットアップについては「&lt;span&gt;&lt;a href=&quot;/linux/centos/linux-centos-centos8-setup-secure-server&quot;&gt;CentOS8で不正SSHログイン対策したLinuxサーバ構築する&lt;/a&gt;&lt;/span&gt;
」にまとめてあります。
またCnetOS上のRuby環境については「&lt;span&gt;&lt;a href=&quot;/linux/centos/linux-centos-build-ruby-env-on-centos&quot;&gt;MacユーザがCentOS8にRuby環境を構築する&lt;/a&gt;&lt;/span&gt;
」にまとめてあります。&lt;/p&gt;

&lt;p&gt;なお、今回はMySQLサーバは別サーバ上に立てていますが、記事内容には直接関わらないため、同一サーバにインストールしても問題ないはずです。
ちなみにCentOS上にMySQLサーバ構築については「&lt;span&gt;&lt;a href=&quot;/db/mysql/db-mysql-install-mysql8-on-centos8&quot;&gt;CentOS8にMySQL8をインストールして構築する&lt;/a&gt;&lt;/span&gt;
」にまとめてあります。&lt;/p&gt;

&lt;h2 id=&quot;構築するサーバ構成&quot;&gt;構築するサーバ構成&lt;/h2&gt;
&lt;p&gt;今回構築するサーバ構成を簡単に表すとこうなります。&lt;/p&gt;

&lt;p&gt;nginx → puma → rails → mysql&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;nginxはリバースプロキシとして動かす&lt;/li&gt;
  &lt;li&gt;nginx と puma間はUNIXドメインソケットで通信する&lt;/li&gt;
  &lt;li&gt;rails と mysql間はTCP/IPで通信する&lt;/li&gt;
  &lt;li&gt;railsアプリのデプロイはサーバにSSHで接続して作業する&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;大まかなフロー&quot;&gt;大まかなフロー&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;Railsアプリ用意&lt;/li&gt;
  &lt;li&gt;サーバにGit環境用意&lt;/li&gt;
  &lt;li&gt;サーバにPuma×Railsをデプロイ&lt;/li&gt;
  &lt;li&gt;nginxのリバースプロキシ設定&lt;/li&gt;
  &lt;li&gt;Pumaのデーモン化&lt;/li&gt;
  &lt;li&gt;コードデプロイ&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;railsアプリを用意する&quot;&gt;Railsアプリを用意する&lt;/h2&gt;
&lt;p&gt;まずはMac上に機能は何でもいいのでRailsアプリを用意します。
あまり凝ったアプリだと躓いたときに原因特定に時間がかかるので、トップページ1つあるだけの簡単なアプリがおすすめです。&lt;/p&gt;

&lt;p&gt;用意したらGitHubにプッシュします。
publicレポジトリでも構わないですが、万が一セキュアな情報を誤ってpushするとリスクもありますし、実際の運用を考えるとprivateレポジトリにします。&lt;/p&gt;

&lt;h2 id=&quot;サーバにgit環境用意&quot;&gt;サーバにGit環境用意&lt;/h2&gt;
&lt;p&gt;最初はサーバとGitHub間のssh通信ができるようにSSH用のキーを作成します。
普段MacからGitHub上のprivateレポジトリをクローンしてるように、サーバにも同等の機能をもたせます。&lt;/p&gt;

&lt;p&gt;まずサーバにSSH接続したら&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ssh-keygen&lt;/code&gt;で公開鍵と秘密鍵を作成します。
作成したら公開鍵をコピーして、&lt;a href=&quot;[https://github.com/settings/keys](https://github.com/settings/keys)&quot;&gt;GitHubのSSH keys&lt;/a&gt;に追加します。&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ssh-keygen
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cat&lt;/span&gt; ~/.ssh/id_rsa.pub
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;最近のバージョンであれば鍵長はデフォルト値でも十分だと思いますが、そこは自己責任でお願いします。&lt;/p&gt;

&lt;p&gt;GitHubに公開鍵の登録が終わったら疎通確認としてSSH接続をテストします。
正しくできていれば接続成功の表示がされます。&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ssh&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;T&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;git&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@github&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;com&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;Hi&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hogehoge!&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;You&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;have&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;successfully&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;authenticated&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;but&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;GitHub&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;does&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;provide&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;shell&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;access&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;サーバにpumarailsをデプロイ&quot;&gt;サーバにPuma×Railsをデプロイ&lt;/h2&gt;
&lt;p&gt;サーバ上にGit環境が整ったら、GitHubからPrivateレポジトリのコードをダウンロードできるようになります。
事前にプッシュしておいたRailsアプリをダウンロードして、サーバー起動していきます。&lt;/p&gt;

&lt;h3 id=&quot;githubのコードをサーバへcloneクローン&quot;&gt;GitHubのコードをサーバへClone(クローン)&lt;/h3&gt;
&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git clone&lt;/code&gt;でコードをダウンロードします。なお、コードの展開場所ですがネット記事だと&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/var/www/&lt;/code&gt;をよく見かけますが、現場ではユーザのホームディレクトリ上に展開してたりとマチマチです。&lt;/p&gt;

&lt;p&gt;今回はホームディレクトリ上に&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;app&lt;/code&gt;フォルダ作ってそこの中に展開します。
下記コードのGitHubアカウント名やレポジトリ名は適宜差し替えてください。&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;mkdir&lt;/span&gt; ~/app
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ~/app
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git clone git@github.com:your_github_name/repo_name.git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;bundle-installでgemをインストール&quot;&gt;bundle installでgemをインストール&lt;/h3&gt;
&lt;p&gt;ダウンロード完了したら、ローカル同様&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bundle install&lt;/code&gt;でgemを取得します。&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;bundle config &lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--local&lt;/span&gt; path &lt;span class=&quot;s2&quot;&gt;&quot;vendor/bundle&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;bundle &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-j4&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;mysql2エラーが起きた場合&quot;&gt;mysql2エラーが起きた場合&lt;/h4&gt;
&lt;p&gt;もしこのときmysql2 gemでエラーが出た場合は、サーバー上にMySQLに関するヘッダーファイルがないのかもしれません。&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mysql-devel&lt;/code&gt;をインストールして再実行してみてください。&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;yum &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt; mysql-devel
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;ローカルのrailsアプリからmasterkeyをサーバーへコピー&quot;&gt;ローカルのRailsアプリからmaster.keyをサーバーへコピー&lt;/h3&gt;
&lt;p&gt;ローカル環境でproduction環境を実行しても気づきにくいかと思いますが、production環境では&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;master.key&lt;/code&gt;が必要です。しかし&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;master.key&lt;/code&gt;はGitHubにプッシュされないようになっています。なのでサーバに&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;master.key&lt;/code&gt;を渡す必要があります。この情報が渡っていないとRailsは暗号ファイルを復号できずproduction環境を実行できません。&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;scp master.key user_name@server_address:~/app/myapp/config/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;アセットのプリコンパイル実行&quot;&gt;アセットのプリコンパイル実行&lt;/h3&gt;
&lt;p&gt;production環境では&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;assets&lt;/code&gt;フォルダ内のリソースは&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;public/assets&lt;/code&gt;へ事前コンパイルが必要です。&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ RAILS_ENV&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;production bundle &lt;span class=&quot;nb&quot;&gt;exec &lt;/span&gt;rake assets:precompile
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;centos8--puma--rails間のアクセス疎通確認&quot;&gt;CentOS8 → Puma → Rails間のアクセス疎通確認&lt;/h3&gt;
&lt;p&gt;PumaはRackサーバ機能も兼ねているため、nginxなしでもアクセス可能です。
なのでnginxを立てる前にPuma×Railsだけでアプリを立ち上げて問題なく疎通できるか確認をとっておきます。&lt;/p&gt;

&lt;p&gt;ここをおろそかにしてnginxの構築へ進むと、もし動かない場合どの部分が原因で動かないのか原因特定範囲が広くなります。&lt;/p&gt;

&lt;p&gt;なお、単純に&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rails s&lt;/code&gt;だと外部からのアクセスできない状態なので、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-b 0.0.0.0&lt;/code&gt;も一緒に渡します。&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;bundle &lt;span class=&quot;nb&quot;&gt;exec &lt;/span&gt;rails s &lt;span class=&quot;nt&quot;&gt;-b&lt;/span&gt; 0.0.0.0 &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; production
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Railsアプリが起動したら、ブラウザでルートページにアクセスして正常にページが表示されるか確認します。
URLは&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;サーバのIPアドレス:Pumaで設定してるポート番号&lt;/code&gt;になります。
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;routes.rb&lt;/code&gt;でroot設定していない場合は、存在するエンドポイントにアクセスして疎通確認してください。&lt;/p&gt;

&lt;h4 id=&quot;pumaで設定してるポート番号&quot;&gt;Pumaで設定してるポート番号&lt;/h4&gt;
&lt;p&gt;Pumaで設定してるポート番号は、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;~/app/myapp/config/puma.rb&lt;/code&gt;に定義されています。
デフォルトのままであれば次のように定義されているはずです。&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# Specifies the `port` that Puma will listen on to receive requests; default is 3000.&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;port&lt;/span&gt;        &lt;span class=&quot;no&quot;&gt;ENV&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;fetch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;PORT&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3000&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;nginxのリバースプロキシ設定&quot;&gt;nginxのリバースプロキシ設定&lt;/h2&gt;
&lt;p&gt;Puma × Railsが無事動くことが確認できたら、次はnginxを前段に配置します。
具体的にはPumaのlistenをポートからUNIXドメインソケットに変更して、PumaのlistenをポートからUNIXドメインソケットに変更します。
こうすれば、nginxのリクエストをPumaのソケットに流れるようになります。
まずはPuma側から対応します。&lt;/p&gt;

&lt;h3 id=&quot;configpumarbのlistenをポートからunixドメインソケットに変更&quot;&gt;config/puma.rbのlistenをポートからUNIXドメインソケットに変更&lt;/h3&gt;
&lt;p&gt;前述したPumaの設定ファイル(&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;~/app/myapp/config/puma.rb&lt;/code&gt;)では、ポート番号でlistenする設定になっています。&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;port&lt;/span&gt;        &lt;span class=&quot;no&quot;&gt;ENV&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;fetch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;PORT&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3000&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;これをUNIXドメインソケットに変更します。
&lt;strong&gt;このときポート設定は必ずコメントアウトか削除してください。&lt;/strong&gt;
ポート設定が残ったままUNIXドメインソケット設定を追記してもポート設定が優先されます。&lt;/p&gt;

&lt;p&gt;bindでUNIXドメインソケットのファイル場所を設定します。
Pumaが起動するとこのパス先にソケットファイルが作成されます。&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# port        ENV.fetch(&quot;PORT&quot;) { 3000 }&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;bind&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;unix://&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Rails&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/tmp/sockets/puma.sock&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;この状態でRailsアプリを実行すると、listen先がpuma.sockに変わります。
またソケットファイルも作成されます。&lt;/p&gt;

&lt;h3 id=&quot;nginxのリクエストをpumaのunixドメインソケットに流す&quot;&gt;nginxのリクエストをPumaのUNIXドメインソケットに流す&lt;/h3&gt;
&lt;p&gt;次はnginx側を変更します。
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/nginx/nginx.conf&lt;/code&gt;の&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;http&lt;/code&gt;コンテキスト内に次のコードを追記します。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nginx.conf&lt;/code&gt;に直接アプリ固有の設定を記入せず&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;include&lt;/code&gt;ディレクティブを使ってアプリ毎に設定ファイルを分離して管理する方法がありますが、今回は省略します。&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;http&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# ここから&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;upstream&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;puma&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;server&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;unix&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:/&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/home/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;your_user_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;your_app_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sockets&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;puma&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;sock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;server&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;listen&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3000&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;default_server&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;server_name&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;puma&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;location&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;proxy_read_timeout&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;300&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;proxy_connect_timeout&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;300&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;proxy_redirect&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;off&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;proxy_set_header&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Host&lt;/span&gt; &lt;span class=&quot;vg&quot;&gt;$host&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;proxy_set_header&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Forwarded&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Proto&lt;/span&gt; &lt;span class=&quot;vg&quot;&gt;$scheme&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;proxy_set_header&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Forwarded&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;For&lt;/span&gt; &lt;span class=&quot;vg&quot;&gt;$proxy_add_x_forwarded_for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;proxy_pass&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:/&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;puma&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# ここまでを追加する&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;server&lt;/code&gt;ディレクティブに渡すパスは、Pumaのsocketファイルのパスを指定してください。&lt;/p&gt;

&lt;p&gt;nginxが起動中なら変更を反映させます。&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;systemctl reload nginx
もしくは
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;nginx &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; reload
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;nginxの基礎に関しては「&lt;span&gt;&lt;a href=&quot;/web/nginx/web-nginx-getting-started-step1-on-mac&quot;&gt;Macでnginxをインストールして起動する&lt;/a&gt;&lt;/span&gt;
」にまとめてあります。&lt;/p&gt;

&lt;h3 id=&quot;nginx起動&quot;&gt;nginx起動&lt;/h3&gt;
&lt;p&gt;nginxを立ち上げます。
2行目で自動起動を有効化します。&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;systemctl start nginx
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;systemctl &lt;span class=&quot;nb&quot;&gt;enable &lt;/span&gt;nginx
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;nginx--puma--rails間のアクセス疎通確認&quot;&gt;nginx → Puma → Rails間のアクセス疎通確認&lt;/h3&gt;
&lt;p&gt;ここまで設定すれば、ポート3000にアクセスしたらnginxがPumaにリクエストを上流しRailsアプリへ到達するようになっています。
それを確かめるために疎通確認します。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;http://your-server-ip-address:3000&lt;/code&gt;へアクセスしてRailsアプリのルートページが表示されれば疎通成功です。&lt;/p&gt;

&lt;p&gt;もしうまく行かない場合はログを確認することで原因追求に役立ちます。ログは&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/var/log/nginx/&lt;/code&gt; にアクセスログとエラーログがあります。&lt;/p&gt;

&lt;h3 id=&quot;ログにconnect-to-pumasockでpermission-deniedが出る場合&quot;&gt;ログにconnect() to puma.sockでPermission deniedが出る場合&lt;/h3&gt;

&lt;p&gt;502 Bad Gatewayが出る場合は、nginxからPumaへのつなぎでエラーが出ている可能性があります。&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;connect&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; to unix:///home/mothule/app/rails_sample/tmp/sockets/puma.sock failed &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;13: Permission denied&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;nginxからpuma.socketへの権限がない場合このエラーが出ます。
nginxを誰が実行してるか確認します。&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ps aux | &lt;span class=&quot;nb&quot;&gt;grep &lt;/span&gt;nginx
root       22126  0.0  2.1 120088 10276 ?        Ss   15:49   0:00 nginx: master process nginx
nginx      22131  0.0  1.9 152720  9088 ?        S    15:49   0:00 nginx: worker process
root       22170  0.0  0.2  10284  1056 pts/1    R+   15:53   0:00 &lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;auto nginx
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nginx&lt;/code&gt;ユーザーで動いています。実行ユーザーがRailsアプリを動かしているユーザーと同じでないとファイルの編集権限が足りず権限エラーになります。
なのでnginxの実行ユーザーをRailsアプリを動かしているユーザーに変更します。&lt;/p&gt;

&lt;p&gt;nginxの実行ユーザーの変更は&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/nginx/nginx.conf&lt;/code&gt;の&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;user&lt;/code&gt;を変更します。&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# user nginx
user your_user_name
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;リロードも忘れずに行います。&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;nginx &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; reload
または
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;systemctl reload nginx
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;railsアプリのデーモン化&quot;&gt;Railsアプリのデーモン化&lt;/h2&gt;
&lt;p&gt;CentOS上にnginx/puma/railsが動くようにはなりました。
しかし、サーバにはSSH接続しており、この状態でRailsを実行してるので、SSHが終了すると、Railsアプリも終了してしまいます。&lt;/p&gt;

&lt;p&gt;本番環境でそれだと困るので、SSHが終了しても動くようにPumaをデーモン化する必要があります。
puma.rbをいじってデーモン化します。また本番のみUNIXドメインソケット通信にし、それ以外ではnginxを介さずPuma単体でポートを開いて処理できるようにします。&lt;/p&gt;

&lt;p&gt;次のコード&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;puma.rb&lt;/code&gt;の全容です。
デフォルトコードから余計なコメント等を削除し、本番時のみデーモン化させるコードを追加したものです。&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;threads_count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ENV&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;fetch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;RAILS_MAX_THREADS&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;threads&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;threads_count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;threads_count&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;rails_env&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ENV&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;fetch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'RAILS_ENV'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'development'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rails_env&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'production'&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# socket&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;bind&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;unix://&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Rails&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/tmp/sockets/puma.sock&quot;&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;rails_root&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Rails&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;root&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;state_path&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rails_root&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'tmp'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'pids'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'puma.state'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;stdout_redirect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rails_root&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'log'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'puma.log'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rails_root&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'log'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'puma-error.log'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;daemonize&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# Specifies the `port` that Puma will listen on to receive requests; default is 3000.&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;port&lt;/span&gt;        &lt;span class=&quot;no&quot;&gt;ENV&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;fetch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;PORT&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3000&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# Specifies the `environment` that Puma will run in.&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;environment&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rails_env&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# Specifies the `pidfile` that Puma will use.&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pidfile&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ENV&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;fetch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;PIDFILE&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;tmp/pids/server.pid&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# Allow puma to be restarted by `rails restart` command.&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plugin&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:tmp_restart&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;state_path
    &lt;ul&gt;
      &lt;li&gt;pumaの状態を表したファイルで、pumactlが使います。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;stdout_redirect
    &lt;ul&gt;
      &lt;li&gt;STDOUTとSTDERRを指定ファイルにリダイレクトします。&lt;/li&gt;
      &lt;li&gt;最後のBoolean型は出力を追加するかどうかです。デフォルトはfalseです。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;daemonize
    &lt;ul&gt;
      &lt;li&gt;pumaをデーモン実行するかどうか&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;コードデプロイ&quot;&gt;コードデプロイ&lt;/h2&gt;
&lt;p&gt;最後にコード変更を反映させる方法です。
nginx/puma/railsが既に動いている状態からコードを反映させます。&lt;/p&gt;

&lt;p&gt;変更後のコードはGitHubに上がっているので、git pullでとってくることでサーバ上のコードを変更します。
その後の反映ですが、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bundle exec pumactl restart&lt;/code&gt; をすることでpumaが再起動してくれて、コードが反映されます。&lt;/p&gt;

&lt;h3 id=&quot;pumaにおけるrailsアプリの起動方法&quot;&gt;PumaにおけるRailsアプリの起動方法&lt;/h3&gt;
&lt;p&gt;PumaをRackサーバに使う場合Railsアプリを起動する方法が3つあります。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rails server&lt;/code&gt;コマンドを使う
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;RAILS_ENV&lt;/code&gt;または&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-e&lt;/code&gt;で環境と一致するファイルをロード&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;production&lt;/code&gt;であれば&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;config/puma/production.rb&lt;/code&gt;をロード試行&lt;/li&gt;
      &lt;li&gt;ファイルなければ&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;config/puma.rb&lt;/code&gt;をロードします。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;puma&lt;/code&gt;コマンドを使う
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;RACK_ENV&lt;/code&gt;で環境と一致するファイルをロード&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pumactl&lt;/code&gt;コマンドを使う
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-F&lt;/code&gt;で指定されたファイルをロード&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Rails&lt;/code&gt;をロードしないため設定ファイルに&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Rails.root&lt;/code&gt;などが使われていると例外エラーが発生する。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;起動と再起動はrails-s-と-rails-restart&quot;&gt;起動と再起動はrails s と rails restart&lt;/h3&gt;
&lt;p&gt;この記事では最初の&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rails server&lt;/code&gt;(&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rails s&lt;/code&gt;)で起動しています。
そしてリロードは&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rails restart&lt;/code&gt;を使っています。
これはpumaのプラグイン&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tmp_restart&lt;/code&gt;を入れることで、
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rails_ restart&lt;/code&gt;か&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;touch tmp/restart.txt&lt;/code&gt;することで&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;restart&lt;/code&gt;を呼べるようになります。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;puma.rb&lt;/code&gt;に次のコードを入れることで使えるようになり、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rails new&lt;/code&gt;で作成される&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;puma.rb&lt;/code&gt;にはデフォルトで記入されてあります。&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# Allow puma to be restarted by `rails restart` command.&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plugin&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:tmp_restart&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;手作業でcentos8上にnginxとpumaとrailsを構築は良い経験&quot;&gt;手作業でCentOS8上にnginxとpumaとRailsを構築は良い経験&lt;/h2&gt;
&lt;p&gt;リンク先も含め記事を順当に進めばCentOS8上にゼロからRailsアプリが動くまでを経験できて、普段コーディングしてるRailsアプリの土台がどのようになっているのかイメージできるようになると思います。&lt;/p&gt;</content><author><name></name></author><category term="ruby" /><category term="rails" /><category term="web" /><category term="nginx" /><category term="linux" /><category term="centos" /><summary type="html">Ansibleでインフラ構築したり、Capistranoでデプロイが自動化したり、内部のフローがイメージつかないので、それらを使わずに手動で構築してデプロイを試してみました。</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://blog.mothule.com/assets/images/2021-02-19-ruby-rails-build-nginx-puma-rails-on-centos/eyecatch.png" /><media:content medium="image" url="https://blog.mothule.com/assets/images/2021-02-19-ruby-rails-build-nginx-puma-rails-on-centos/eyecatch.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Linuxサーバのホスト名をhostnamectlで変更する</title><link href="https://blog.mothule.com/linux/linux-hostnamectl" rel="alternate" type="text/html" title="Linuxサーバのホスト名をhostnamectlで変更する" /><published>2021-02-19T00:00:00+09:00</published><updated>2023-03-07T09:59:55+09:00</updated><id>https://blog.mothule.com/linux/linux-hostnamectl</id><content type="html" xml:base="https://blog.mothule.com/linux/linux-hostnamectl">&lt;p&gt;CentOSやUbuntuなどLinuxサーバーのホスト名を変更するには、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;hostnamectl&lt;/code&gt;を使います。
なおこの動作確認はCentOS8で検証しましたが、Ubuntuでも同様のようです。&lt;/p&gt;

&lt;p&gt;bashやzshなどのシェルを使ってターミナルでサーバにSSH接続すると、
プロンプトは&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[user_name@hoge-123-12345.vs.sakura.ne.jp ~]$&lt;/code&gt;みたいになっており、
今どのサーバに接続してるのか分かりにくいです。
これを例えば、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[user_name@backend-api ~]$&lt;/code&gt;みたいに分かりやすくします。&lt;/p&gt;

&lt;h2 id=&quot;初期ホスト名は覚えにくい&quot;&gt;初期ホスト名は覚えにくい&lt;/h2&gt;
&lt;p&gt;VPSなどサーバ立てると、ホスト名は適当な名前が設定されます。&lt;/p&gt;

&lt;p&gt;例えばさくらVPSだと、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;hoge-123-12345.vs.sakura.ne.jp&lt;/code&gt;みたいなURLだとしたら、ホスト名は&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;hoge-123-12345&lt;/code&gt;という名前になっています。&lt;/p&gt;

&lt;p&gt;このままでも作業に支障はありませんが、ホスト名を自分が分かりやすい名前にしておくと、複数サーバに接続しててもどのサーバに接続してるターミナルなのかすぐに見分けられるようになります。&lt;/p&gt;

&lt;h2 id=&quot;ホスト名を変更する&quot;&gt;ホスト名を変更する&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;hostnamectl set-hostname&lt;/code&gt;を使うことで簡単にホスト名を変更できます。
変更後に再接続すると名前が反映されています。&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;hostnamectl set-hostname &amp;lt;HOSTNAME&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;現在のホスト名を確認する&quot;&gt;現在のホスト名を確認する&lt;/h2&gt;
&lt;p&gt;なお、現在設定されているホスト名を確認する方法は&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;hostnamectl&lt;/code&gt;を使うことで確認できます。&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;hostnamectl | &lt;span class=&quot;nb&quot;&gt;grep hostname
   &lt;/span&gt;Static &lt;span class=&quot;nb&quot;&gt;hostname&lt;/span&gt;: your_cool_host_name
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;直接ファイルを変更する方法もありますが、まずは&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;hostnamectl&lt;/code&gt;が使えるならこれを使ったほうが楽です。&lt;/p&gt;</content><author><name></name></author><category term="linux" /><summary type="html">CentOSやUbuntuなどLinuxサーバーのホスト名を変更するには、hostnamectlを使います。 なおこの動作確認はCentOS8で検証しましたが、Ubuntuでも同様のようです。</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://blog.mothule.com/assets/images/2021-02-19-linux-hostnamectl/eyecatch.png" /><media:content medium="image" url="https://blog.mothule.com/assets/images/2021-02-19-linux-hostnamectl/eyecatch.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Linuxのグループ操作をすぐ忘れる</title><link href="https://blog.mothule.com/linux/linux-edit-group" rel="alternate" type="text/html" title="Linuxのグループ操作をすぐ忘れる" /><published>2021-02-19T00:00:00+09:00</published><updated>2023-03-07T09:59:55+09:00</updated><id>https://blog.mothule.com/linux/linux-edit-group</id><content type="html" xml:base="https://blog.mothule.com/linux/linux-edit-group">&lt;p&gt;CentOSやUbuntuなどLinxuのグループ編集作業時に忘れてしまっているので、備忘録としてまとめます。&lt;/p&gt;

&lt;h2 id=&quot;linuxユーザーの所属グループ確認&quot;&gt;Linuxユーザーの所属グループ確認&lt;/h2&gt;
&lt;p&gt;user_nameにユーザー名を指定すればそのユーザー名のグループを確認します。
複数ユーザーの場合はスペース区切りで指名します。
無指定だとログイン中のユーザーを確認します。&lt;/p&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;groups&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;user_name][user_name]...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;linuxユーザーに新たなグループを追加&quot;&gt;Linuxユーザーに新たなグループを追加&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-a&lt;/code&gt;&lt;/strong&gt;をつけ忘れると追加ではなく上書きになります。&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-a&lt;/code&gt;の指定がなく「追加」と書いてるネット記事多いので注意。&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;usermod &lt;span class=&quot;nt&quot;&gt;-aG&lt;/span&gt; group_name user_name
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;linuxユーザーをグループから削除&quot;&gt;Linuxユーザーをグループから削除&lt;/h2&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;gpasswd &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; user_name group_name
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;linuxに新しくグループ作成&quot;&gt;Linuxに新しくグループ作成&lt;/h2&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;groupadd group_name
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;linuxのグループの削除&quot;&gt;Linuxのグループの削除&lt;/h2&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;groupdel group_name
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;linuxのグループ一覧の確認&quot;&gt;Linuxのグループ一覧の確認&lt;/h2&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;less /etc/group
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;etcgroupの見方&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/group&lt;/code&gt;の見方&lt;/h3&gt;
&lt;p&gt;グループ一覧が確認できたとしても、グループ名が列挙されてるだけでなく変わった書き方がされていて意味が気になります。&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;tail&lt;/span&gt; /etc/group
stapsys:x:157:
stapdev:x:158:
sshd:x:74:
pesign:x:992:
chrony:x:991:
mothule:x:1000:mothule
slocate:x:21:
rngd:x:990:
wheel:x:1002:root,mothule
nginx:x:989:
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;例えば&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sshd:x:74:&lt;/code&gt;は左から順番にグループ名、パスワード、グループIDになります。
コロン「:」区切りになります。
パスワードは暗号化されたパスワードもしくは、「x」はシャドウパスワードを使用してることを表します。&lt;/p&gt;

&lt;p&gt;次に&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;wheel:x:1002:root,main&lt;/code&gt;の最後&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;root,main&lt;/code&gt;はこのグループをサブグループとして登録しているユーザー一覧です。
サブグループとは&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;usermod -aG&lt;/code&gt;とかでユーザー作成後追加したグループです。&lt;/p&gt;

&lt;p&gt;これは&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;groups&lt;/code&gt;コマンドと一致しています。&lt;/p&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;groups &lt;/span&gt;root
root : root wheel
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name></name></author><category term="linux" /><summary type="html">CentOSやUbuntuなどLinxuのグループ編集作業時に忘れてしまっているので、備忘録としてまとめます。</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://blog.mothule.com/assets/images/2021-02-19-linux-edit-group/eyecatch.png" /><media:content medium="image" url="https://blog.mothule.com/assets/images/2021-02-19-linux-edit-group/eyecatch.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">CentOS8のfirewalldが未起動のままポート許可やサービス登録する</title><link href="https://blog.mothule.com/linux/centos/linux-centos-firewalld-edit-firewalld-in-inactive" rel="alternate" type="text/html" title="CentOS8のfirewalldが未起動のままポート許可やサービス登録する" /><published>2021-02-19T00:00:00+09:00</published><updated>2023-03-07T09:59:55+09:00</updated><id>https://blog.mothule.com/linux/centos/linux-centos-firewalld-edit-firewalld-in-inactive</id><content type="html" xml:base="https://blog.mothule.com/linux/centos/linux-centos-firewalld-edit-firewalld-in-inactive">&lt;p&gt;&lt;strong&gt;SSHの使用ポートをデフォルトの22番から別番号に変更&lt;/strong&gt;はセキュリティを改善できます。
しかし、そのあと&lt;strong&gt;何の対応もせずfirewalldを起動するとアクセスが遮断&lt;/strong&gt;されます。
そしてそれ以降SSHでのアクセス手段が詰みます。
しかも、&lt;strong&gt;firewalldのポート登録は起動していないと登録できません。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;この記事は&lt;strong&gt;firewalldが未起動のままポート登録する方法&lt;/strong&gt;を説明します。&lt;/p&gt;

&lt;h2 id=&quot;注意-自己責任です&quot;&gt;注意: 自己責任です&lt;/h2&gt;
&lt;p&gt;今回説明する方法は自己責任でお願いします。この方法がどの環境やバージョンでも適用できるとは限らないためです。&lt;/p&gt;

&lt;p&gt;もし試す場合は、必ず回復が可能な状態にしてください。もしfirewalldに追い出されてsshでログインできなくなっても責任は持てません。&lt;/p&gt;

&lt;h2 id=&quot;firewalldとは&quot;&gt;firewalldとは&lt;/h2&gt;
&lt;p&gt;Linux用ファイアウォール管理ツールです。指定したポートをサービス単位で指定できたり直接ポート番号指定し、ポートへのアクセス制限を管理できます。以前のバージョンでは&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;iptables&lt;/code&gt;がその役割でしたが、最近のバージョンではこちらに変わりました。&lt;/p&gt;

&lt;h2 id=&quot;sshを先にセットアップしたい&quot;&gt;SSHを先にセットアップしたい&lt;/h2&gt;
&lt;p&gt;CentOSでLinuxサーバーをセットアップすると、まず最初はrootアクセス制限や公開鍵認証など、firewalldよりもSSH周りのセキュリティ強化を進めるかと思います。その流れでSSHのポート番号を変更もしてしまいたいです。
でもポート番号が変わってしまうと、firewalldでは許可していないポート番号となるため、起動した瞬間にアクセス遮断されます。&lt;/p&gt;

&lt;p&gt;「起動する前にポート許可をすれば？」と思うかもしれませんが、firewalldは起動していないとポート許可ができません。&lt;br /&gt;
未起動のまま登録を試しても次のようにエラーとなってしまいます。&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;firewall-cmd &lt;span class=&quot;nt&quot;&gt;--permanent&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--add-port&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;22444/tcp
FirewallD is not running
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;そのため通常であれば、一度SSHのポート番号を元の22に戻した後firewalldを起動し、ポート番号を登録するといった手間が発生します。&lt;/p&gt;

&lt;h2 id=&quot;firewalldの設定情報を直接変更する&quot;&gt;firewalldの設定情報を直接変更する&lt;/h2&gt;
&lt;p&gt;通常大抵のサービスは永続性のある情報は何らかの形で再起動しても残ります。firewalldも永続性のある情報をファイルとしてサーバー内に保存しています。&lt;/p&gt;

&lt;h3 id=&quot;firewalldの設定情報ファイルを確認する&quot;&gt;firewalldの設定情報ファイルを確認する&lt;/h3&gt;
&lt;p&gt;CentOS8だと&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/firewalld/zones&lt;/code&gt;にzone毎に&lt;strong&gt;xmlファイル&lt;/strong&gt;で保存されてます。
例えばpublic zoneのxmlファイルだと次のように構造です。&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;su -
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cat&lt;/span&gt; /etc/firewalld/zones/public.xml
&amp;lt;?xml &lt;span class=&quot;nv&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;1.0&quot;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;encoding&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;utf-8&quot;&lt;/span&gt;?&amp;gt;
&amp;lt;zone&amp;gt;
  &amp;lt;short&amp;gt;Public&amp;lt;/short&amp;gt;
  &amp;lt;description&amp;gt;For use &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;public areas. You &lt;span class=&quot;k&quot;&gt;do &lt;/span&gt;not trust the other computers on networks to not harm your computer. Only selected incoming connections are accepted.&amp;lt;/description&amp;gt;
  &amp;lt;service &lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ssh&quot;&lt;/span&gt;/&amp;gt;
  &amp;lt;service &lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;dhcpv6-client&quot;&lt;/span&gt;/&amp;gt;
  &amp;lt;service &lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;cockpit&quot;&lt;/span&gt;/&amp;gt;
&amp;lt;/zone&amp;gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;xmlファイルに直接許可ポートを追加する&quot;&gt;xmlファイルに直接許可ポートを追加する&lt;/h3&gt;
&lt;p&gt;このxmlを直接編集すればfirewalldを起動せずポートやサービスを追加できます。例えば22444/TCPを許可する場合は、次の1行を追加します。&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;port&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;port=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;22444&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;protocol=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;tcp&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;追加はzoneタグ内であれば問題ありません。&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;zone&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;short&amp;gt;&lt;/span&gt;Public&lt;span class=&quot;nt&quot;&gt;&amp;lt;/short&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;description&amp;gt;&lt;/span&gt;For use in public areas. You do not trust the other computers on networks to not harm your computer. Only selected incoming connections are accepted.&lt;span class=&quot;nt&quot;&gt;&amp;lt;/description&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;service&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ssh&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;service&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;dhcpv6-client&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;service&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;cockpit&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;port&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;port=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;22444&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;protocol=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;tcp&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/zone&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;これでfirewalldを起動するとポート22444/tcpが追加された状態で起動します。&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;firewall-cmd &lt;span class=&quot;nt&quot;&gt;--list-all&lt;/span&gt;
public &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;active&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  target: default
  icmp-block-inversion: no
  interfaces: ens3
  sources:
  services: cockpit dhcpv6-client ssh
  ports: 22444/tcp
  protocols:
  masquerade: no
  forward-ports:
  source-ports:
  icmp-blocks:
  rich rules:
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;もちろんポートだけでなくサービスも事前に登録は可能です。
ポート番号がデフォルト22ではないSSHサービスを用意して、xmlに追加するとポートのときと同じように追加したサービスを許可します。&lt;/p&gt;

&lt;p&gt;なお、ポート番号の異なるSSHサービスを用意する方法は「 &lt;span&gt;&lt;a href=&quot;/linux/centos/linux-centos-firewalld-create-new-service&quot;&gt;CentOSのfirewalldにポート番号変更したSSHのサービスを自作して登録する&lt;/a&gt;&lt;/span&gt;
 」にまとめてあります。&lt;/p&gt;</content><author><name></name></author><category term="linux" /><category term="centos" /><category term="firewalld" /><summary type="html">SSHの使用ポートをデフォルトの22番から別番号に変更はセキュリティを改善できます。 しかし、そのあと何の対応もせずfirewalldを起動するとアクセスが遮断されます。 そしてそれ以降SSHでのアクセス手段が詰みます。 しかも、firewalldのポート登録は起動していないと登録できません。</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://blog.mothule.com/assets/images/2021-02-19-linux-centos-firewalld-edit-firewalld-in-inactive/eyecatch.png" /><media:content medium="image" url="https://blog.mothule.com/assets/images/2021-02-19-linux-centos-firewalld-edit-firewalld-in-inactive/eyecatch.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">CentOSのfirewalldにポート番号変更したSSHのサービスを自作して登録する</title><link href="https://blog.mothule.com/linux/centos/linux-centos-firewalld-create-new-service" rel="alternate" type="text/html" title="CentOSのfirewalldにポート番号変更したSSHのサービスを自作して登録する" /><published>2021-02-19T00:00:00+09:00</published><updated>2023-03-07T09:59:55+09:00</updated><id>https://blog.mothule.com/linux/centos/linux-centos-firewalld-create-new-service</id><content type="html" xml:base="https://blog.mothule.com/linux/centos/linux-centos-firewalld-create-new-service">&lt;p&gt;CentOSのインストールセットアップでセキュリティ対策のためSSHのポート番号を変えたいけど、firewalldのsshサービスは22番になってる。これを新しいポート番号に対応したい。&lt;/p&gt;

&lt;p&gt;この記事は、CentOSのfirewalldのサービスを自作する方法と、ポート番号を変更したSSHサービスを登録する方法を説明します。&lt;/p&gt;

&lt;h2 id=&quot;ポートではくサービスとして登録するメリット&quot;&gt;ポートではくサービスとして登録するメリット&lt;/h2&gt;
&lt;p&gt;firewalldが稼働中にSSHサービスのポート番号をデフォルトの22番以外の番号に変更する場合は、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;firewall-cmd —permanent —add-port=22444/tcp&lt;/code&gt;と直接ポート番号指定する方法が簡単です。&lt;/p&gt;

&lt;p&gt;例えば、ポート番号22444番のTCPを許可します。&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;firewall-cmd —permanent —add-port&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;22444/tcp
success
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;firewall-cmd &lt;span class=&quot;nt&quot;&gt;--reload&lt;/span&gt;
success
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;これで許可状態を確認すると、次のように表示されます。&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;firewall-cmd &lt;span class=&quot;nt&quot;&gt;--list-all&lt;/span&gt;
public &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;active&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  target: default
  icmp-block-inversion: no
  interfaces: ens3
  sources:
  services: cockpit dhcpv6-client http https
  ports: 22444/tcp
  protocols:
  masquerade: no
  forward-ports:
  source-ports:
  icmp-blocks:
  rich rules:
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ports&lt;/code&gt;のところに先程許可したポートが並びます。
追加したばかりなので、この番号はSSHのポート番号だと判断できます。&lt;/p&gt;

&lt;p&gt;しかし、これが次のケースだとどうでしょうか？&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;許可ポートが大量にある&lt;/li&gt;
  &lt;li&gt;次firewalldを見るのが半年後〜数年後になる&lt;/li&gt;
  &lt;li&gt;次firewalldを見るのが自分ではない&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;firewalldのポート開放は、数字と意味がセットにならないと情報が欠落します。
この問題をサービスとして登録することで解決します。&lt;/p&gt;

&lt;h2 id=&quot;firewalldのサービスの実態はxmlファイル&quot;&gt;firewalldのサービスの実態はxmlファイル&lt;/h2&gt;
&lt;p&gt;firewalldで扱っているサービス一覧は&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;firewall-cmd --get-services&lt;/code&gt;コマンドで確認できます。&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;firewall-cmd &lt;span class=&quot;nt&quot;&gt;--get-services&lt;/span&gt;
RH-Satellite-6 amanda-client amanda-k5-client amqp amqps apcupsd audit bacula bacula-client bb bgp bitcoin bitcoin-rpc bitcoin-testnet bitcoin-testnet-rpc bittorrent-lsd ceph ceph-mon cfengine cockpit condor-collector ctdb dhcp dhcpv6 dhcpv6-client distcc dns dns-over-tls docker-registry docker-swarm dropbox-lansync elasticsearch etcd-client etcd-server finger freeipa-4 freeipa-ldap freeipa-ldaps freeipa-replication freeipa-trust ftp ganglia-client ganglia-master git grafana gre high-availability http https imap imaps ipp ipp-client ipsec irc ircs iscsi-target isns jenkins kadmin kdeconnect kerberos kibana klogin kpasswd kprop kshell kube-apiserver ldap ldaps libvirt libvirt-tls lightning-network llmnr managesieve matrix mdns memcache minidlna mongodb mosh mountd mqtt mqtt-tls ms-wbt mssql murmur mysql nfs nfs3 nmea-0183 nrpe ntp nut openvpn ovirt-imageio ovirt-storageconsole ovirt-vmconsole plex pmcd pmproxy pmwebapi pmwebapis pop3 pop3s postgresql privoxy prometheus proxy-dhcp ptp pulseaudio puppetmaster quassel radius rdp redis redis-sentinel rpc-bind rsh rsyncd rtsp salt-master samba samba-client samba-dc sane sip sips slp smtp smtp-submission smtps snmp snmptrap spideroak-lansync spotify-sync squid ssdp ssh ssh-22444 steam-streaming svdrp svn syncthing syncthing-gui synergy syslog syslog-tls telnet tentacle tftp tftp-client tile38 tinc tor-socks transmission-client upnp-client vdsm vnc-server wbem-http wbem-https wsman wsmans xdmcp xmpp-bosh xmpp-client xmpp-local xmpp-server zabbix-agent zabbix-server
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;これらはxmlファイルとして定義されており、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/usr/lib/firewalld/services&lt;/code&gt;に配置されてます。&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt; /usr/lib/firewalld/services/
RH-Satellite-6.xml       cockpit.xml           freeipa-replication.xml  isns.xml               mdns.xml       ovirt-imageio.xml         rdp.xml              snmptrap.xml           tinc.xml
amanda-client.xml        condor-collector.xml  freeipa-trust.xml        jenkins.xml            memcache.xml   ovirt-storageconsole.xml  redis-sentinel.xml   spideroak-lansync.xml  tor-socks.xml
amanda-k5-client.xml     ctdb.xml              ftp.xml                  kadmin.xml             minidlna.xml   ovirt-vmconsole.xml       redis.xml            spotify-sync.xml       transmission-client.xml
amqp.xml                 dhcp.xml              ganglia-client.xml       kdeconnect.xml         mongodb.xml    plex.xml                  rpc-bind.xml         squid.xml              upnp-client.xml
amqps.xml                dhcpv6-client.xml     ganglia-master.xml       kerberos.xml           mosh.xml       pmcd.xml                  rsh.xml              ssdp.xml               vdsm.xml
apcupsd.xml              dhcpv6.xml            git.xml                  kibana.xml             mountd.xml     pmproxy.xml               rsyncd.xml           ssh.xml                vnc-server.xml
audit.xml                distcc.xml            grafana.xml              klogin.xml             mqtt-tls.xml   pmwebapi.xml              rtsp.xml             steam-streaming.xml    wbem-http.xml
bacula-client.xml        dns-over-tls.xml      gre.xml                  kpasswd.xml            mqtt.xml       pmwebapis.xml             salt-master.xml      svdrp.xml              wbem-https.xml
bacula.xml               dns.xml               high-availability.xml    kprop.xml              ms-wbt.xml     pop3.xml                  samba-client.xml     svn.xml                wsman.xml
bb.xml                   docker-registry.xml   http.xml                 kshell.xml             mssql.xml      pop3s.xml                 samba-dc.xml         syncthing-gui.xml      wsmans.xml
bgp.xml                  docker-swarm.xml      https.xml                kube-apiserver.xml     murmur.xml     postgresql.xml            samba.xml            syncthing.xml          xdmcp.xml
bitcoin-rpc.xml          dropbox-lansync.xml   imap.xml                 ldap.xml               mysql.xml      privoxy.xml               sane.xml             synergy.xml            xmpp-bosh.xml
bitcoin-testnet-rpc.xml  elasticsearch.xml     imaps.xml                ldaps.xml              nfs.xml        prometheus.xml            sip.xml              syslog-tls.xml         xmpp-client.xml
bitcoin-testnet.xml      etcd-client.xml       ipp-client.xml           libvirt-tls.xml        nfs3.xml       proxy-dhcp.xml            sips.xml             syslog.xml             xmpp-local.xml
bitcoin.xml              etcd-server.xml       ipp.xml                  libvirt.xml            nmea-0183.xml  ptp.xml                   slp.xml              telnet.xml             xmpp-server.xml
bittorrent-lsd.xml       finger.xml            ipsec.xml                lightning-network.xml  nrpe.xml       pulseaudio.xml            smtp-submission.xml  tentacle.xml           zabbix-agent.xml
ceph-mon.xml             freeipa-4.xml         irc.xml                  llmnr.xml              ntp.xml        puppetmaster.xml          smtp.xml             tftp-client.xml        zabbix-server.xml
ceph.xml                 freeipa-ldap.xml      ircs.xml                 managesieve.xml        nut.xml        quassel.xml               smtps.xml            tftp.xml
cfengine.xml             freeipa-ldaps.xml     iscsi-target.xml         matrix.xml             openvpn.xml    radius.xml                snmp.xml             tile38.xml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;内部では使用するポート番号などが定義されてます。
例えばsshでは次のように定義されてます。&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cat&lt;/span&gt; /usr/lib/firewalld/services/ssh.xml
&amp;lt;?xml &lt;span class=&quot;nv&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;1.0&quot;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;encoding&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;utf-8&quot;&lt;/span&gt;?&amp;gt;
&amp;lt;service&amp;gt;
  &amp;lt;short&amp;gt;SSH&amp;lt;/short&amp;gt;
  &amp;lt;description&amp;gt;Secure Shell &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;SSH&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; is a protocol &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;logging into and executing commands on remote machines. It provides secure encrypted communications. If you plan on accessing your machine remotely via SSH over a firewalled interface, &lt;span class=&quot;nb&quot;&gt;enable &lt;/span&gt;this option. You need the openssh-server package installed &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;this option to be useful.&amp;lt;/description&amp;gt;
  &amp;lt;port &lt;span class=&quot;nv&quot;&gt;protocol&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;tcp&quot;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;22&quot;&lt;/span&gt;/&amp;gt;
&amp;lt;/service&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;sshxmlのコピーでポート番号変更版sshサービスを作る&quot;&gt;ssh.xmlのコピーでポート番号変更版sshサービスを作る&lt;/h2&gt;
&lt;p&gt;サービスの実態が分かれば後は単純な話です。&lt;/p&gt;

&lt;p&gt;例えばポート番号を22から22444に変更したsshサービスを用意したい場合は、
既存サービスをコピーしてxml(&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ssh-22444.xml&lt;/code&gt;)内に記載された&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;port protocol=&quot;tcp&quot; port=&quot;22&quot;/&amp;gt;&lt;/code&gt;の22を22444に変更します。&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cp&lt;/span&gt; /usr/lib/firewalld/services/ssh.xml /usr/lib/firewalld/services/ssh-22444.xml
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;vim /usr/lib/firewalld/services/ssh-22444.xml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;これだけでfirewalldに新しいサービス(&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ssh-22444&lt;/code&gt;)が追加されました。
詳細を見るとポートが22444になっていることが確認できます。&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;firewall-cmd &lt;span class=&quot;nt&quot;&gt;--get-services&lt;/span&gt; | xargs &lt;span class=&quot;nt&quot;&gt;-n1&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;grep &lt;/span&gt;ssh
ssh
ssh-22444

&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;firewall-cmd &lt;span class=&quot;nt&quot;&gt;--info-service&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;ssh-22444
ssh-22444
  ports: 22444/tcp
  protocols:
  source-ports:
  modules:
  destination:
  includes:
  helpers:
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;ssh-22444サービスをfirewalldに追加登録する&quot;&gt;ssh-22444サービスをfirewalldに追加登録する&lt;/h2&gt;
&lt;p&gt;作成したポート22444版SSHサービス(&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ssh-22444)&lt;/code&gt;をfirewalldに登録します。&lt;/p&gt;

&lt;p&gt;登録前は次の状態です。&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;firewall-cmd &lt;span class=&quot;nt&quot;&gt;--list-all&lt;/span&gt;
public &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;active&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  target: default
  icmp-block-inversion: no
  interfaces: ens3
  sources:
  services: cockpit dhcpv6-client http https ssh
  ports:
  protocols:
  masquerade: no
  forward-ports:
  source-ports:
  icmp-blocks:
  rich rules:
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;firewalldに作成したサービスを登録します。&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;—-permanent&lt;/code&gt;オプションを忘れずに。
これでfirewalldにssh-22444というサービスが登録されます。
登録すると&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;services&lt;/code&gt;に追加されます。&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--reload&lt;/code&gt;しないと反映されません。&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;firewall-cmd &lt;span class=&quot;nt&quot;&gt;--permanent&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--add-service&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;ssh-22444
success
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;firewall-cmd &lt;span class=&quot;nt&quot;&gt;--reload&lt;/span&gt;
success
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;firewall-cmd &lt;span class=&quot;nt&quot;&gt;--list-all&lt;/span&gt;
public &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;active&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  target: default
  icmp-block-inversion: no
  interfaces: ens3
  sources:
  services: cockpit dhcpv6-client http https ssh ssh-22444
  ports:
  protocols:
  masquerade: no
  forward-ports:
  source-ports:
  icmp-blocks:
  rich rules:
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;これでSSHのポート番号を22444に変更してもfirewalldに拒否されず接続できるようになります。&lt;/p&gt;

&lt;h2 id=&quot;不要になった通常のsshサービスを外す&quot;&gt;不要になった通常のsshサービスを外す&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sshd_config&lt;/code&gt;でPortの番号を22444に変更したら、ポート22番は使わなくなります。不要にポートは空けたままにしないため通ポート22番のsshサービスをfirewalldから外します。&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;firewall-cmd &lt;span class=&quot;nt&quot;&gt;--permanent&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--remove-service&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;ssh
success
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;firewall-cmd &lt;span class=&quot;nt&quot;&gt;--reload&lt;/span&gt;
success
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;firewall-cmd &lt;span class=&quot;nt&quot;&gt;--list-all&lt;/span&gt;
public &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;active&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  target: default
  icmp-block-inversion: no
  interfaces: ens3
  sources:
  services: cockpit dhcpv6-client http https ssh-22444
  ports:
  protocols:
  masquerade: no
  forward-ports:
  source-ports:
  icmp-blocks:
  rich rules:
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;なお、くれぐれも変更したポートで接続できたのを確認してから外してください。確認を怠りSSHログインができないまま外してしまうと締め出されてしまいます。&lt;/p&gt;

&lt;h2 id=&quot;firewalldが未起動でポートやサービスを登録する&quot;&gt;firewalldが未起動でポートやサービスを登録する&lt;/h2&gt;
&lt;p&gt;通常はfirewalldに許可するポートやサービスを登録したり削除したり編集するにはfirewalldが起動していることが必須となります。
しかしファイルを直接編集することで、firewalldが未起動でも登録や削除が可能です。詳しくは「&lt;span&gt;&lt;a href=&quot;/linux/centos/linux-centos-firewalld-edit-firewalld-in-inactive&quot;&gt;CentOS8のfirewalldが未起動のままポート許可やサービス登録する&lt;/a&gt;&lt;/span&gt;
」にまとめてあります。&lt;/p&gt;</content><author><name></name></author><category term="linux" /><category term="centos" /><category term="firewalld" /><summary type="html">CentOSのインストールセットアップでセキュリティ対策のためSSHのポート番号を変えたいけど、firewalldのsshサービスは22番になってる。これを新しいポート番号に対応したい。</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://blog.mothule.com/assets/images/2021-02-19-linux-centos-firewalld-create-new-service/eyecatch.png" /><media:content medium="image" url="https://blog.mothule.com/assets/images/2021-02-19-linux-centos-firewalld-create-new-service/eyecatch.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">CentOS8で不正SSHログイン対策したLinuxサーバ構築する</title><link href="https://blog.mothule.com/linux/centos/linux-centos-centos8-setup-secure-server" rel="alternate" type="text/html" title="CentOS8で不正SSHログイン対策したLinuxサーバ構築する" /><published>2021-02-19T00:00:00+09:00</published><updated>2023-03-07T09:59:55+09:00</updated><id>https://blog.mothule.com/linux/centos/linux-centos-centos8-setup-secure-server</id><content type="html" xml:base="https://blog.mothule.com/linux/centos/linux-centos-centos8-setup-secure-server">&lt;p&gt;VPSなどでサーバ立てて無対策だと、ログに結構な量のSSHを狙った不正アクセス試行ログが残ります。&lt;br /&gt;
パスワードが強固であればそう簡単に不正ログインされませんが、ログに残ると心がそわそわ落ち着きません。&lt;/p&gt;

&lt;p&gt;今回はこのログに残らない程度、つまり不正SSHログイン試行されない程度にセキュリティ対策したLinuxサーバを構築します。&lt;/p&gt;

&lt;p&gt;対策は大きく分けて5つです。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;rootログイン禁止&lt;/li&gt;
  &lt;li&gt;パスワード認証から公開鍵認証へ変更&lt;/li&gt;
  &lt;li&gt;パスワード認証禁止&lt;/li&gt;
  &lt;li&gt;firewalld起動&lt;/li&gt;
  &lt;li&gt;SSHのポート番号変更&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;さくらVPSでサーバを立てた状態から基本的なセットアップをしつつセキュリティ対策を施します。&lt;br /&gt;
今回はLinuxのディストリビューションはCentOS8を使います。&lt;/p&gt;

&lt;h2 id=&quot;注意事項&quot;&gt;注意事項&lt;/h2&gt;
&lt;p&gt;セキュリティは水物で時代とともにその方法や驚異は変わり続けるものです。
また全てを万全にするといった対策はできないものです。（ゼロデイ攻撃、リバースエンジニアリング、ソーシャルエンジニアリングなど）
そのためここに記載するセキュリティに関するセットアップを行ったからといって万全でないことは覚えておいてください。
なお、慣例ですが&lt;strong&gt;何かあっても自己責任です。&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;sshでrootログインする&quot;&gt;SSHでrootログインする&lt;/h2&gt;
&lt;p&gt;CentOSのインストールが完了したら、まず最初にSSHを使ってrootアカウントにログインします。&lt;br /&gt;
ホスト(IPアドレス)はWebのダッシュボード等から確認できると思います。&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ssh root@ip_address
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;centos8上に作業用ユーザー作成する&quot;&gt;CentOS8上に作業用ユーザー作成する&lt;/h2&gt;
&lt;p&gt;rootアカウントで作業せず、root権限持ったユーザーで操作するために、作業用ユーザーを作成します。  &lt;br /&gt;
ユーザー名はなるべく推測されにくい名前が好ましいです。例えばadminとかは避けたほうがいいです。&lt;/p&gt;

&lt;p&gt;今回は&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;main&lt;/code&gt;というユーザーを作ります。&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;useradd&lt;/code&gt;でユーザーを作成し、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;passwd&lt;/code&gt;でパスワードを設定します。&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;useradd main
passwd main
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;作業用ユーザーをroot権限持ちグループに追加する&quot;&gt;作業用ユーザーをroot権限持ちグループに追加する&lt;/h2&gt;
&lt;p&gt;ユーザーを新しく作成してもroot権限を持ってなくて不便なので、作成したユーザーを&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;wheel&lt;/code&gt;グループに追加してroot権限を付与します。&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;usermod &lt;span class=&quot;nt&quot;&gt;-aG&lt;/span&gt; wheel main
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;なお&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-a&lt;/code&gt;オプションをつけない記事を見かけますが、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-a&lt;/code&gt;がないとグループへの追加ではなく上書きとなり、既に入ってたグループから抜けてしまうので&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-a&lt;/code&gt;オプションは忘れずに。&lt;/p&gt;

&lt;h3 id=&quot;root権限をwheelグループに付与する&quot;&gt;root権限をwheelグループに付与する&lt;/h3&gt;
&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;wheel&lt;/code&gt;グループにroot権限が付与されていない場合は、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;visudo&lt;/code&gt;を開いて次の行を追記して、権限付与します。&lt;br /&gt;
コメントアウトされている場合はコメント解除するだけでいいです。&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;%wheel ALL=(ALL) ALL
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;sshからのrootログインを禁止する&quot;&gt;SSHからのrootログインを禁止する&lt;/h2&gt;
&lt;p&gt;作業用ユーザでSSHログインできて、root権限が使えることが確認できたら、SSHでのrootログインを禁止させます。&lt;br /&gt;
rootアカウントは全権限を持っていながら、アカウント名がバレているので不特定多数からアクセスできる状態に晒すことはリスクが高いためです。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/ssh/sshd_config&lt;/code&gt;を開いて、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PermitRootLogin&lt;/code&gt;を検索すると&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;yes&lt;/code&gt;になっているので、これを&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;no&lt;/code&gt;にします。&lt;/p&gt;

&lt;p&gt;保存したら、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sshd&lt;/code&gt;を再起動します。&lt;/p&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;systemctl reload sshd
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;正しく設定できていれば、rootアカウントでSSHログインしようとしても失敗するようになります。&lt;/p&gt;

&lt;p&gt;これでまずrootアカウントを狙った不正アクセスから身を守れます。&lt;br /&gt;
ただ、ログには変わらず試行ログが蓄積され続けます。&lt;/p&gt;

&lt;h2 id=&quot;sshログインの認証方式をパスワード認証方式から公開鍵認証方式にする&quot;&gt;SSHログインの認証方式をパスワード認証方式から公開鍵認証方式にする&lt;/h2&gt;
&lt;p&gt;SSHのログイン認証をパスワードよりもセキュアな公開鍵認証に変更します。&lt;br /&gt;
パスワード認証はユーザー名とパスワードが一致すれば誰でもログインできます。&lt;br /&gt;
よりセキュアにするために公開鍵認証にして秘密鍵保持したPCからのみSSHログインできるようにします。&lt;/p&gt;

&lt;h3 id=&quot;sshauthorized_keysを用意する&quot;&gt;~/.ssh/authorized_keysを用意する&lt;/h3&gt;
&lt;p&gt;サーバ上に&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;~/.ssh&lt;/code&gt;フォルダを作成し、パーミッションを&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;700&lt;/code&gt;に設定します。&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;authorized_keys&lt;/code&gt;は一旦空ファイルとして作成し、パーミッションを&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;600&lt;/code&gt;に設定します。&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;mkdir&lt;/span&gt; ~/.ssh
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;chmod &lt;/span&gt;700 ~/.ssh
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;touch&lt;/span&gt; ~/.ssh/authorized_keys
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;chmod &lt;/span&gt;600 ~/.ssh/authorized_keys
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;ssh-keygenで公開鍵秘密鍵を生成する&quot;&gt;ssh-keygenで公開鍵・秘密鍵を生成する&lt;/h3&gt;
&lt;p&gt;Mac上で&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ssh-keygen&lt;/code&gt;を使って公開鍵・秘密鍵を生成します。&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ssh-keygen &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; ~/.ssh/main_rsa &lt;span class=&quot;nt&quot;&gt;-N&lt;/span&gt; your-pass-phrase
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;ssh-keygenの使い方については、「&lt;span&gt;&lt;a href=&quot;/tools/ssh/tools-ssh-keygen-basic&quot;&gt;SSH公開鍵認証で必要なssh-keygenの使い方を理解する&lt;/a&gt;&lt;/span&gt;
」にまとめてあります。&lt;/p&gt;

&lt;h3 id=&quot;公開鍵をサーバに配置する&quot;&gt;公開鍵をサーバに配置する&lt;/h3&gt;
&lt;p&gt;鍵作ったら、公開鍵をサーバに転送します。&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;scp your-pub-key-path user_name@ip_address:~/.ssh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;公開鍵をauthorized_keysに追加&quot;&gt;公開鍵をauthorized_keysに追加&lt;/h3&gt;
&lt;p&gt;サーバは公開鍵を受け取ったら、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;~/.ssh/authorized_keys&lt;/code&gt;に追記します。&lt;/p&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cat&lt;/span&gt; ~/.ssh/your-pub-key &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; ~/.ssh/authorized_keys
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;公開鍵認証を有効にする&quot;&gt;公開鍵認証を有効にする&lt;/h3&gt;
&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/ssh/sshd_config&lt;/code&gt;の&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PubkeyAuthentication&lt;/code&gt;を&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;yes&lt;/code&gt;にします。&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;PubkeyAuthentication yes
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;有効化したら反映します。&lt;/p&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;systemctl reload sshd
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;公開鍵認証の設定に問題ないか接続確認する&quot;&gt;公開鍵認証の設定に問題ないか接続確認する&lt;/h3&gt;
&lt;p&gt;公開鍵認証方式を有効にしたら、問題ないか接続確認します。&lt;br /&gt;
接続確認は重要な工程です。公開鍵やフォルダのパーミッションの設定が間違っていたり、間違えて秘密鍵を配置してたりして接続失敗するポイントがいくつかあるためです。&lt;br /&gt;
ここで接続確認せずにパスワード認証方式を無効化すると、もし公開鍵認証で接続できなかった場合に二度とそのサーバにssh接続できなくなります。&lt;br /&gt;
なので、公開鍵認証の設定が完了したらパスワードログインはそのままで、公開鍵認証方式でログインできるか確認しましょう。&lt;/p&gt;

&lt;p&gt;公開鍵認証の秘密鍵が&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;~/.ssh/vps/rsa.key&lt;/code&gt;だとしたら、ssh接続では&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-i&lt;/code&gt;オプションでファイルを指定することで、認証方式が公開鍵認証となり接続試行します。&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ssh user_name@ip_address &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; ~/.ssh/vps/rsa.key.pub
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;sshログインでパスワード認証を禁止する&quot;&gt;SSHログインでパスワード認証を禁止する&lt;/h2&gt;
&lt;p&gt;公開鍵認証方式でのログインが成功したら、パスワード認証を無効化します。
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/ssh/sshd_config&lt;/code&gt;の&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PasswordAuthentication&lt;/code&gt;を&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;no&lt;/code&gt;にします。&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;PasswordAuthentication no
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;保存したら、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sshd&lt;/code&gt;をリロードします。&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;systemctl reload sshd
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;最低限必要なパッケージをインストールする&quot;&gt;最低限必要なパッケージをインストールする&lt;/h2&gt;
&lt;p&gt;ここでサーバ作業において必要なパッケージをインストールします。&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# Bash completion&lt;/span&gt;
yum &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;bash-completion

&lt;span class=&quot;c&quot;&gt;# Vim&lt;/span&gt;
yum &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;vim-enhanced

&lt;span class=&quot;c&quot;&gt;# mlocate(ファイル一覧DB)&lt;/span&gt;
yum &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;mlocate
updatedb

&lt;span class=&quot;c&quot;&gt;# 日本語環境&lt;/span&gt;
yum &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;langpacks-ja
localedef &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; UTF-8 &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; ja_JP ja_JP
localectl set-locale &lt;span class=&quot;nv&quot;&gt;LANG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;ja_JP.utf8
&lt;span class=&quot;nb&quot;&gt;source&lt;/span&gt; /etc/locale.conf

timedatectl set-timezone Asia/Tokyo

yum clean all
yum &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt; upgrade
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;firewalldを起動する&quot;&gt;firewalldを起動する&lt;/h2&gt;
&lt;p&gt;今度はファイアウォールとなるfirewalldを起動させて、許可したサービスやポートのみを使えるようにします。&lt;br /&gt;
既に起動中の場合もあるかもしれませんが、さくらVPSだとfirewalldは未起動で自動起動は無効になっています。&lt;/p&gt;

&lt;h3 id=&quot;注意sshポート番号を変更してる場合&quot;&gt;注意：SSHポート番号を変更してる場合&lt;/h3&gt;
&lt;p&gt;もし先にSSHのポート番号をデフォルト22から別の値に変更している場合は、一度ポートをデフォルトに戻してください。&lt;br /&gt;
firewalldはデフォルトでSSHサービスは許可されていますが、ポートはデフォルト22となっており、それ以外のポート番号は許可されてません。&lt;br /&gt;
そのため、firewalldを有効にした途端SSH接続が途絶えて、サーバへの接続手段がロストします。&lt;/p&gt;

&lt;h3 id=&quot;firewalldの状態確認&quot;&gt;firewalldの状態確認&lt;/h3&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;systemctl status firewalld
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Active: active(running)&lt;/code&gt;となっていれば稼働中です。&lt;/p&gt;

&lt;h3 id=&quot;firewalldを起動する-1&quot;&gt;firewalldを起動する&lt;/h3&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;systemctl start firewalld
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;firewalldを起動することで許可したポートやサービス以外のアクセスは拒否されます。
しかしsshのデフォルトポートは22番で、これは不正アクセスする側も知っている情報なのでこのポートに対してsshログインが試行され続けます。&lt;/p&gt;

&lt;h2 id=&quot;sshのポート番号を変更する&quot;&gt;SSHのポート番号を変更する&lt;/h2&gt;
&lt;p&gt;SSHのポート番号は22番と決まっているため、そのポートに対してSSH接続攻撃を仕掛けられます。
SSHからのrootログインは無効化し、SSHの認証方式は公開鍵認証にしているため、だいぶ不正ログインされるリスクは減っていると思います。
しかし、ポート番号はバレているため、もともと解決したいSSHログイン失敗ログはたまり続けます。&lt;/p&gt;

&lt;p&gt;これをポート番号を変更することで攻撃者に分からないようにします。&lt;/p&gt;

&lt;h3 id=&quot;firewalldが未稼働の場合&quot;&gt;firewalldが未稼働の場合&lt;/h3&gt;
&lt;p&gt;firewalldを起動しないとポート許可ができないため先に起動させます。&lt;/p&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;systemctl start firewalld
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;firewalldに変更先ポートを許可させる&quot;&gt;firewalldに変更先ポートを許可させる&lt;/h3&gt;
&lt;p&gt;既にfirewalldが稼働中の場合、デフォルトでSSHサービス(TCP/22)が許可されています。
しかし、先にポート番号を変更してしまうと、firewalldからアクセス拒否されて接続できなくなってしまいます。
そのため、SSH利用ポートを変更する前にfirewalldで変更先ポートを許可します。
次の例はポート番号22444番のTCPを許可しています。&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;firewall-cmd &lt;span class=&quot;nt&quot;&gt;--permanent&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--add-port&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;22444/tcp
success
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;firewall-cmd &lt;span class=&quot;nt&quot;&gt;--reload&lt;/span&gt;
success
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;サービスとして登録・管理する方法もあります。そちらに関しては「&lt;span&gt;&lt;a href=&quot;/linux/centos/linux-centos-firewalld-create-new-service&quot;&gt;CentOSのfirewalldにポート番号変更したSSHのサービスを自作して登録する&lt;/a&gt;&lt;/span&gt;
」にまとめてあります。&lt;/p&gt;

&lt;h3 id=&quot;firewalldが未起動でポートやサービスを登録する&quot;&gt;firewalldが未起動でポートやサービスを登録する&lt;/h3&gt;
&lt;p&gt;通常はfirewalldに許可するポートやサービスを登録したり削除したり編集するにはfirewalldが起動していることが必須となります。
しかしファイルを直接編集することで、firewalldが未起動でも登録や削除が可能です。詳しくは「&lt;span&gt;&lt;a href=&quot;/linux/centos/linux-centos-firewalld-edit-firewalld-in-inactive&quot;&gt;CentOS8のfirewalldが未起動のままポート許可やサービス登録する&lt;/a&gt;&lt;/span&gt;
」にまとめてあります。&lt;/p&gt;

&lt;h3 id=&quot;sshd_configのportを変更&quot;&gt;sshd_configのPortを変更&lt;/h3&gt;
&lt;p&gt;SSHのポート番号は&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/ssh/sshd_config&lt;/code&gt;の&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Port&lt;/code&gt;の数字で定義されています。
この数字を22ではない別の番号にすることでSSHで使うポート番号を変更できます。&lt;/p&gt;

&lt;p&gt;ただし、0~1023番は&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WELL KNOWN PORT NUMBERS&lt;/code&gt;と呼ばれる予め決められた範囲なため、それ以外の番号を選びます。
またポート番号を65535以上にすると接続できなくなるので、それ未満にします。&lt;/p&gt;

&lt;p&gt;最後にsshdを再起動します。&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;systemctl reload sshd
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;ssh接続でポート番号を指定する&quot;&gt;SSH接続でポート番号を指定する&lt;/h3&gt;
&lt;p&gt;ポート番号は&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-p&lt;/code&gt;オプションで指定します。認証方式がパスワードではなく公開鍵の場合は&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-i&lt;/code&gt;オプションの指定も忘れずに。&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ssh main@ip_address &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; new_port_number
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;これにより不正ログイン試行によるログがなくなるかと思います。
なおログはCentOSでは&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/var/log/secure&lt;/code&gt;に蓄積されています。次のシェルで抽出できます。&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo cat&lt;/span&gt; /var/log/secure | &lt;span class=&quot;nb&quot;&gt;grep &lt;/span&gt;sshd | &lt;span class=&quot;nb&quot;&gt;grep &lt;/span&gt;Failed
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;完璧万全ではない&quot;&gt;完璧・万全ではない&lt;/h2&gt;
&lt;p&gt;冒頭の注意でも説明したように今回のセットアップを実施してもあらゆるケースをカバーできるわけではありません。
今回のセキュリティ対策は私自身が納得できる強度となります。
この納得できる度合いは人それぞれであるため、不足を感じたのであれば別途記事や書籍を参照することをおすすめします。&lt;/p&gt;</content><author><name></name></author><category term="linux" /><category term="centos" /><summary type="html">VPSなどでサーバ立てて無対策だと、ログに結構な量のSSHを狙った不正アクセス試行ログが残ります。 パスワードが強固であればそう簡単に不正ログインされませんが、ログに残ると心がそわそわ落ち着きません。</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://blog.mothule.com/assets/images/2021-02-19-linux-centos-centos8-setup-secure-server/eyecatch.png" /><media:content medium="image" url="https://blog.mothule.com/assets/images/2021-02-19-linux-centos-centos8-setup-secure-server/eyecatch.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">MacユーザがCentOS8にRuby環境を構築する</title><link href="https://blog.mothule.com/linux/centos/linux-centos-build-ruby-env-on-centos" rel="alternate" type="text/html" title="MacユーザがCentOS8にRuby環境を構築する" /><published>2021-02-19T00:00:00+09:00</published><updated>2023-03-07T09:59:55+09:00</updated><id>https://blog.mothule.com/linux/centos/linux-centos-build-ruby-env-on-centos</id><content type="html" xml:base="https://blog.mothule.com/linux/centos/linux-centos-build-ruby-env-on-centos">&lt;p&gt;Mac上にrbenvによるRuby環境を構築したりRailsアプリを作ったことあるが、Linux(CentOS8)ではまだの人向けに記事を書きました。&lt;/p&gt;

&lt;h2 id=&quot;linux自体の初期セットアップは済ませておく&quot;&gt;Linux自体の初期セットアップは済ませておく&lt;/h2&gt;
&lt;p&gt;ローカルPCであれば問題はないですが、VPSなど外部にLinuxサーバを立てた場合は、Ruby環境の前にLinux自体のセキュリティセットアップを実施することをおすすめします。&lt;/p&gt;

&lt;p&gt;セットアップに関しては、「&lt;span&gt;&lt;a href=&quot;/linux/centos/linux-centos-centos8-setup-secure-server&quot;&gt;CentOS8で不正SSHログイン対策したLinuxサーバ構築する&lt;/a&gt;&lt;/span&gt;
」にまとめてあります。&lt;/p&gt;

&lt;h2 id=&quot;macと違ってhomebrewがない&quot;&gt;Macと違ってHomebrewがない&lt;/h2&gt;
&lt;p&gt;Mac環境下ではrbenvはHomebrewを使ってインストールします。
しかし、CentOSではHomebrewがありません。
しかもCentOS用パッケージ管理ソフトウェアであるyumにもrbenvがありません。&lt;/p&gt;

&lt;h3 id=&quot;githubからrbenvを直接ダウンロードする&quot;&gt;GitHubからrbenvを直接ダウンロードする&lt;/h3&gt;
&lt;p&gt;CentOS8ではgitを使いGitHubから直接rbenvやrbenv用プラグインをインストールします。
rbenvのプラグインにあたるruby-buildも同様です。&lt;/p&gt;

&lt;h2 id=&quot;ruby環境構築の流れ&quot;&gt;Ruby環境構築の流れ&lt;/h2&gt;
&lt;p&gt;gitのインストールから始まり、rbenvとRubyのインストールするまでの流れになります。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;yumでgitをインストール&lt;/li&gt;
  &lt;li&gt;GitHubからrbenvとruby-buildをインストール&lt;/li&gt;
  &lt;li&gt;yumで依存パッケージをインストール&lt;/li&gt;
  &lt;li&gt;rbenvでRubyをインストール&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;centos8にyumでgitをインストール&quot;&gt;CentOS8にyumでgitをインストール&lt;/h2&gt;
&lt;p&gt;最初にGitHubからダウンロードに必要なgitをyumからインストールします。yumでなくともdnfでも問題ありません。&lt;/p&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;yum &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;git
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git &lt;span class=&quot;nt&quot;&gt;--version&lt;/span&gt;
git version 2.27.0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;githubからrbenvをインストール&quot;&gt;GitHubからrbenvをインストール&lt;/h2&gt;
&lt;p&gt;gitが使えるようになったら、GitHubからrbenvとプラグインとなるruby-buildをダウンロード(クローン)します。
ダウンロード先はrbenv、Rubyを実行したいユーザーのhomeディレクトリ(~)にします。&lt;/p&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git clone https://github.com/rbenv/rbenv.git ~/.rbenv
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git clone https://github.com/rbenv/ruby-build.git ~/.rbenv/plugins/ruby-build
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;rbenvとsstephensonの違い&quot;&gt;rbenvとsstephensonの違い&lt;/h3&gt;
&lt;p&gt;ネット記事ではURLが&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;https://github.com/sstephenson/rbenv.git&lt;/code&gt;となっている記事を多数見かけますが、ブラウザでアクセスすると分かりますが、rbenvにリダイレクトされています。なのでどちらも同じものと見て良いです。
個人的には&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sstephenson&lt;/code&gt;よりも&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rbenv&lt;/code&gt;のほうが覚えやすいです。&lt;/p&gt;

&lt;h3 id=&quot;rbenvを初期化&quot;&gt;rbenvを初期化&lt;/h3&gt;
&lt;p&gt;rbenv, ruby-buildをダウンロードしたら、普段Macで叩いてるrbenvが、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;~/.rbenv/bin/rbenv&lt;/code&gt;に配置されています。
これに&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;init&lt;/code&gt;を渡して実行するとセットアップ方法が表示されます。&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;.rbenv/bin/rbenv init
&lt;span class=&quot;c&quot;&gt;# Load rbenv automatically by appending&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# the following to ~/.bash_profile:&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;eval&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;rbenv init -&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;指示に従って&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;~/.bash_profile&lt;/code&gt;に&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;eval &quot;$(rbenv init -)&quot;&lt;/code&gt;を記入して&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.bash_profile&lt;/code&gt;をリロードするとエラーが発生します。&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;source&lt;/span&gt; .bash_profile
&lt;span class=&quot;nt&quot;&gt;-bash&lt;/span&gt;: rbenv: コマンドが見つかりません
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;理由は&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rbenv&lt;/code&gt;にパスが通っていないためです。&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;eval &quot;$(rbenv init -)&quot;&lt;/code&gt; を動かすには rbenvにパスを通す必要があります。パス設定を&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;eval &quot;$(rbenv init -)&quot;&lt;/code&gt;の手前に追加して、rbenvにパスを通します。
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.bash_profile&lt;/code&gt;の末尾に次の2行がある状態です。&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;~/.rbenv/bin:&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$PATH&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;eval&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;rbenv init -&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;この状態でもう一度&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.bash_profile&lt;/code&gt;をリロードすれば今度はエラーは発生しないはずです。
Linux上のログインシェルをzshにしてる方は適宜置き換えてください。&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.bash_profile&lt;/code&gt; → &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.zshrc&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.zprofile&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;これでCentOS上にrbenvのインストールが完了しました。
MacではHomebrewがパス周りをいい感じにやってくれてるし、インストール後のセットアップ処理もbrewのインストール完了したら表示してくれるので優しいし楽ですね。&lt;/p&gt;

&lt;h2 id=&quot;yumで依存パッケージをインストール&quot;&gt;yumで依存パッケージをインストール&lt;/h2&gt;
&lt;p&gt;rbenvがインストールできたら後はMac同様にrbenvを使ってRubyをインストールするだけ…って感じではなさそうです。
Rubyをビルドするために必要なパッケージをyumからインストールが必要です。&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;yum &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;bzip2 gcc openssl-devel readline-devel zlib-devel
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;なおいくつかのパッケージ名の後ろについている&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-devel&lt;/code&gt;とはデビル(devil)ではなくdevelopの短縮文字です。
通常と比べて開発に必要なヘッダーファイル等が含まれます。&lt;/p&gt;

&lt;h2 id=&quot;rbenvからrubyをインストール&quot;&gt;rbenvからRubyをインストール&lt;/h2&gt;
&lt;p&gt;準備が整ったらrbenvを使ってRubyをインストールします。
MacでもCentOS(Linux)でもrbenvのコマンドの使い方に違いはありません。(全部確認はしていませんが)&lt;/p&gt;

&lt;h3 id=&quot;インストール可能なバージョンを確認&quot;&gt;インストール可能なバージョンを確認&lt;/h3&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;rbenv &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--list&lt;/span&gt;
2.5.8
2.6.6
2.7.2
3.0.0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;rubyバージョン指定してインストール&quot;&gt;Rubyバージョン指定してインストール&lt;/h3&gt;
&lt;p&gt;今回は&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;2.7.2&lt;/code&gt;をインストールします。
Mac同様Rubyのインストールには時間がかかります。&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;rbenv &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;2.7.2
Downloading ruby-2.7.2.tar.bz2...
-&amp;gt; https://cache.ruby-lang.org/pub/ruby/2.7/ruby-2.7.2.tar.bz2
Installing ruby-2.7.2...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;デフォルトのバージョンを設定&quot;&gt;デフォルトのバージョンを設定&lt;/h3&gt;
&lt;p&gt;インストールされたRubyバージョンをglobalを設定しておきます。&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;rbenv versions
  2.7.2
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;rbenv global 2.7.2
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ruby &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt;
ruby 2.7.2p137 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;2020-10-01 revision 5445e04352&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;x86_64-linux]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;local(&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.ruby-version&lt;/code&gt;)で上書きされない限りはこのバージョンが使われます。&lt;/p&gt;

&lt;h3 id=&quot;rubygemsを更新する&quot;&gt;rubygemsを更新する&lt;/h3&gt;
&lt;p&gt;Rubyに付属するRuby用パッケージマネージャーRubygemsを更新します。&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;gem update &lt;span class=&quot;nt&quot;&gt;--system&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;ruby動作確認する&quot;&gt;Ruby動作確認する&lt;/h2&gt;
&lt;p&gt;Rubyのインストールが完了したら、最後にねんのためコード実行して動作確認します。&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;mkdir test&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'puts &quot;hello world&quot;'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;/helloworld.rb
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ruby &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;/helloworld.rb
hello world
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;ここまで通ればCentOSにrbenvとRubyのインストールは完了です。&lt;/p&gt;

&lt;h2 id=&quot;centos8上にnginxとpumaとrailsアプリを構築する&quot;&gt;CentOS8上にnginxとPumaとRailsアプリを構築する&lt;/h2&gt;
&lt;p&gt;Ruby環境が整ったら、次のステップとしてはRailsアプリをCentOS8上にデプロイして動かしてみることです。
また実際のアプリではPumaがWebサーバとして動くのではなくnginxを前段においてリバースプロキシが一般的です。
それらをAnsibleやCapistranoを使わずgitとSSHなど手作業で構築することは体系的な知識構築に大いに貢献できます。&lt;/p&gt;

&lt;p&gt;それらに関する記事を「&lt;span&gt;&lt;a href=&quot;/ruby/rails/ruby-rails-build-nginx-puma-rails-on-centos&quot;&gt;CentOS8上にnginxとpumaとRailsを手作業で構築した後に手動でデプロイする&lt;/a&gt;&lt;/span&gt;
」にまとめてあります。&lt;/p&gt;</content><author><name></name></author><category term="linux" /><category term="centos" /><category term="ruby" /><summary type="html">Mac上にrbenvによるRuby環境を構築したりRailsアプリを作ったことあるが、Linux(CentOS8)ではまだの人向けに記事を書きました。</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://blog.mothule.com/assets/images/2021-02-19-linux-centos-build-ruby-env-on-centos/eyecatch.png" /><media:content medium="image" url="https://blog.mothule.com/assets/images/2021-02-19-linux-centos-build-ruby-env-on-centos/eyecatch.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">CentOS8にMySQL8をインストールして構築する</title><link href="https://blog.mothule.com/db/mysql/db-mysql-install-mysql8-on-centos8" rel="alternate" type="text/html" title="CentOS8にMySQL8をインストールして構築する" /><published>2021-02-19T00:00:00+09:00</published><updated>2023-03-07T09:59:55+09:00</updated><id>https://blog.mothule.com/db/mysql/db-mysql-install-mysql8-on-centos8</id><content type="html" xml:base="https://blog.mothule.com/db/mysql/db-mysql-install-mysql8-on-centos8">&lt;p&gt;CentOS8にMySQLをインストールします。なお当時のバージョンは8です。
公式からインストールする方法もありますが、ここではyumにあるバージョンを使います。&lt;/p&gt;

&lt;h2 id=&quot;linux自体の初期セットアップは済ませておく&quot;&gt;Linux自体の初期セットアップは済ませておく&lt;/h2&gt;
&lt;p&gt;ローカルPCであれば問題はないですが、VPSなど外部にLinuxサーバを立てた場合は、MySQL環境の前にLinux自体のセキュリティセットアップを実施することをおすすめします。&lt;/p&gt;

&lt;p&gt;セットアップに関しては、「&lt;span&gt;&lt;a href=&quot;/linux/centos/linux-centos-centos8-setup-secure-server&quot;&gt;CentOS8で不正SSHログイン対策したLinuxサーバ構築する&lt;/a&gt;&lt;/span&gt;
」にまとめてあります。&lt;/p&gt;

&lt;h2 id=&quot;mysql-serverをインストールする&quot;&gt;MySQL Serverをインストールする&lt;/h2&gt;
&lt;p&gt;yumパッケージを更新したのちにMySQLをインストールします。&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;yum &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt; upgrade
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;yum &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;mysql mysql.server
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;mysql &lt;span class=&quot;nt&quot;&gt;--version&lt;/span&gt;
mysql  Ver 8.0.21 &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;Linux on x86_64 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Source distribution&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;systemctl status mysqld.service
● mysqld.service - MySQL 8.0 database server
   Loaded: loaded &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;/usr/lib/systemd/system/mysqld.service&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; disabled&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; vendor preset: disabled&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
   Active: inactive &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;dead&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;カーネル更新は避けたい人は&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;upgrade&lt;/code&gt;の代わりに&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;yum -y update --exclude=kernel*&lt;/code&gt;を実行します。&lt;/p&gt;

&lt;p&gt;OSパッケージによってはMariaDBがインストール済みの可能性があります。
その場合は事前にアンインストールしてからMySQLをインストールしてください。&lt;/p&gt;

&lt;h2 id=&quot;mysqlの起動と自動起動を有効化する&quot;&gt;MySQLの起動と自動起動を有効化する&lt;/h2&gt;

&lt;p&gt;インストール完了したら起動します。
起動が確認できたら自動起動を有効化します。&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;systemctl start mysqld.service
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;systemctl &lt;span class=&quot;nb&quot;&gt;enable &lt;/span&gt;mysqld
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;なお起動の確認方法は、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$ mysql -uroot -p&lt;/code&gt;でlocalhostからrootに接続できれば起動しています。&lt;/p&gt;

&lt;h2 id=&quot;mysql_secure_installationでセキュリティ改善する&quot;&gt;mysql_secure_installationでセキュリティ改善する&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mysql_secure_installation&lt;/code&gt;とはMySQLのセキュリティを改善させるスクリプトです。
MySQLのインストール後に実行します。&lt;/p&gt;

&lt;p&gt;英語でのウィザードになりますが、このスクリプトで実施するのは次の項目です。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;root&lt;/code&gt; のパスワード設定&lt;/li&gt;
  &lt;li&gt;localhost以外からの&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;root&lt;/code&gt;ログインを禁止&lt;/li&gt;
  &lt;li&gt;匿名ユーザーアカウントの削除&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;test&lt;/code&gt; DBの削除と&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;test_&lt;/code&gt;プリフィックスのDBへのアクセス権削除&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;セキュリティ強度の方向性が分からない場合は、本番運用想定し英数字記号大文字小文字混じりの超長いパスワードを設定して、localhost外からの&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;root&lt;/code&gt;ログイン禁止、匿名ユーザー削除、テストDBの削除にしておいたほうが無難です。&lt;/p&gt;

&lt;p&gt;実際の実行結果を質問別＆コメント付きで掲載します。&lt;/p&gt;

&lt;h3 id=&quot;要約-パスワード強化しますか&quot;&gt;要約: パスワード強化しますか？&lt;/h3&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;mysql_secure_installation

Securing the MySQL server deployment.

Connecting to MySQL using a blank password.

VALIDATE PASSWORD COMPONENT can be used to &lt;span class=&quot;nb&quot;&gt;test &lt;/span&gt;passwords
and improve security. It checks the strength of password
and allows the &lt;span class=&quot;nb&quot;&gt;users &lt;/span&gt;to &lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;only those passwords which are
secure enough. Would you like to setup VALIDATE PASSWORD component?

Press y|Y &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;Yes, any other key &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;No: y
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;要約-パスワード強度のポリシーを選んでください&quot;&gt;要約: パスワード強度のポリシーを選んでください&lt;/h3&gt;

&lt;p&gt;パスワードを設定する前にどのぐらいの強度にしたいのか強さをLOW, MEDIUM, STRONGから設定します。
設定したらそのまま希望するパスワードを入力します。&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;There are three levels of password validation policy:

LOW    Length &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; 8
MEDIUM Length &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; 8, numeric, mixed &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt;, and special characters
STRONG Length &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; 8, numeric, mixed &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt;, special characters and dictionary                  file

Please enter 0 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; LOW, 1 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; MEDIUM and 2 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; STRONG: 2
Please &lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;the password &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;root here.

New password:

Re-enter new password:

Estimated strength of the password: 100
Do you wish to &lt;span class=&quot;k&quot;&gt;continue &lt;/span&gt;with the password provided?&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Press y|Y &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;Yes, any other key &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;No&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; : y

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;もしパスワードがポリシーの定める強さより脆弱な場合&quot;&gt;もしパスワードがポリシーの定める強さより脆弱な場合&lt;/h3&gt;

&lt;p&gt;入力したパスワードが前に設定したパスワードポリシーが定める強さより脆弱な場合は、エラーとなり再入力となります。&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Estimated strength of the password: 50
Do you wish to &lt;span class=&quot;k&quot;&gt;continue &lt;/span&gt;with the password provided?&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Press y|Y &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;Yes, any other key &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;No&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; : y
 ... Failed! Error: Your password does not satisfy the current policy requirements

New password:

Re-enter new password:

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;要約-匿名ユーザーを削除しますか&quot;&gt;要約: 匿名ユーザーを削除しますか？&lt;/h3&gt;

&lt;p&gt;MySQLではテストやインストールを円滑にすすめるために簡易にMySQLにアクセスできる匿名ユーザーが作成されてあります。&lt;/p&gt;

&lt;p&gt;このユーザーは本番では当然不要なので削除します。&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;By default, a MySQL installation has an anonymous user,
allowing anyone to log into MySQL without having to have
a user account created &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;them. This is intended only &lt;span class=&quot;k&quot;&gt;for
&lt;/span&gt;testing, and to make the installation go a bit smoother.
You should remove them before moving into a production
environment.

Remove anonymous &lt;span class=&quot;nb&quot;&gt;users&lt;/span&gt;? &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Press y|Y &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;Yes, any other key &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;No&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; : y
Success.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;要約localhost外からのログインを禁止しますか&quot;&gt;要約：localhost外からのログインを禁止しますか？&lt;/h3&gt;

&lt;p&gt;デフォルトでは、外部環境からrootアカウントにログインできます。しかしこれは危険なため禁止します。&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Normally, root should only be allowed to connect from
&lt;span class=&quot;s1&quot;&gt;'localhost'&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; This ensures that someone cannot guess at
the root password from the network.

Disallow root login remotely? &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Press y|Y &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;Yes, any other key &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;No&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; : y
Success.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;要約テストdbを削除しますか&quot;&gt;要約：テストDBを削除しますか？&lt;/h3&gt;

&lt;p&gt;匿名ユーザー同様にテスト用途としてテストDBがあります。これも本番環境では不要なので削除します。&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;By default, MySQL comes with a database named &lt;span class=&quot;s1&quot;&gt;'test'&lt;/span&gt; that
anyone can access. This is also intended only &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;testing,
and should be removed before moving into a production
environment.

Remove &lt;span class=&quot;nb&quot;&gt;test &lt;/span&gt;database and access to it? &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Press y|Y &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;Yes, any other key &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;No&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; : y
 - Dropping &lt;span class=&quot;nb&quot;&gt;test &lt;/span&gt;database...
Success.

 - Removing privileges on &lt;span class=&quot;nb&quot;&gt;test &lt;/span&gt;database...
Success.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;要約-この結果を確定しますか&quot;&gt;要約: この結果を確定しますか？&lt;/h3&gt;

&lt;p&gt;最後にこのスクリプトでの変更を反映させるかの確認です。
特に問題なければ確定し反映させます。&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Reloading the privilege tables will ensure that all changes
made so far will take effect immediately.

Reload privilege tables now? &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Press y|Y &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;Yes, any other key &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;No&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; : y
Success.

All &lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;なお、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mysql_secure_installation&lt;/code&gt;に関しては公式リファに説明があります。
&lt;a href=&quot;[https://dev.mysql.com/doc/refman/5.6/ja/mysql-secure-installation.html](https://dev.mysql.com/doc/refman/5.6/ja/mysql-secure-installation.html)&quot;&gt;MySQL 5.6 リファレンスマニュアル - MySQL インストールのセキュリティー改善&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;mysqlユーザーを作成する&quot;&gt;MySQLユーザーを作成する&lt;/h2&gt;
&lt;p&gt;Linuxユーザー同様にMySQLでの操作にrootアカウントは使いません。
権限やアクセス領域を絞ったユーザーを作成します。&lt;/p&gt;

&lt;p&gt;なおIPアドレスは接続元のホスト情報です。
未指定だと&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;%&lt;/code&gt;となりどのホストからもアクセスできるユーザーとなります。&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;create&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'user'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'123.456.789.012'&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;identified&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;by&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'strong_password'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Query&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OK&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;rows&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;affected&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;01&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;host&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;------------------+-----------------+&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;user&lt;/span&gt;             &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;host&lt;/span&gt;            &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;------------------+-----------------+&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;user&lt;/span&gt;             &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;123&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;456&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;789&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;012&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;infoschema&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;localhost&lt;/span&gt;       &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;session&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;localhost&lt;/span&gt;       &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;        &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;localhost&lt;/span&gt;       &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;root&lt;/span&gt;             &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;localhost&lt;/span&gt;       &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;------------------+-----------------+&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;rows&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;00&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;ユーザーパスワードが脆弱な場合&quot;&gt;ユーザーパスワードが脆弱な場合&lt;/h3&gt;

&lt;p&gt;作成するユーザーのパスワードは、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mysql_secure_installation&lt;/code&gt;で定めたパスワードポリシーにジュンクする必要があります。そのため脆弱だとエラーとなります。&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mysql&amp;gt; create user &lt;span class=&quot;s1&quot;&gt;'user'&lt;/span&gt;@&lt;span class=&quot;s1&quot;&gt;'host'&lt;/span&gt; identified by &lt;span class=&quot;s1&quot;&gt;'hogehoge'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
ERROR 1819 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;HY000&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;: Your password does not satisfy the current policy requirements
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;mysqlユーザーに権限付与する&quot;&gt;MySQLユーザーに権限付与する&lt;/h2&gt;

&lt;p&gt;作成したMySQLユーザーに権限を付与します。
ユーザーを作成しただけでは権限を持っていないため、何もできません。&lt;/p&gt;

&lt;p&gt;構文：&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;grant 権限 on DB.テーブル to ユーザー&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;次の例は&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;your_db_name&lt;/code&gt; DBの全テーブルに対する全権限を&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;'user'@'123.456.789.012'&lt;/code&gt;に付与してます。ちなみに存在しないDB名でも権限付与できます。&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mysql&amp;gt; grant all on your_db_name.&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; to &lt;span class=&quot;s1&quot;&gt;'user'&lt;/span&gt;@&lt;span class=&quot;s1&quot;&gt;'123.456.789.012'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
Query OK, 0 rows affected &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.00 sec&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;なお構文を間違えてたり指定が無効だったりするとエラーが起きます。
ちなみに次のエラーは付与先のユーザー指定がミスってます。&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mysql&amp;gt; grant all on your_db_name.&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; to &lt;span class=&quot;s1&quot;&gt;'user@123.456.789.012'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
ERROR 1410 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;42000&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;: You are not allowed to create a user with GRANT
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;show grants&lt;/code&gt;を使えば権限を確認できます。
先程付与した権限とは別に&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;USAGE&lt;/code&gt;という権限があります。
これは「権限なし」という意味です。&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;show&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;grants&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;123&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;456&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;789&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;012&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;---------------------------------------------------------------------------------+&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Grants&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;123&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;456&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;789&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;012&lt;/span&gt;                                                 &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;---------------------------------------------------------------------------------+&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;GRANT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;USAGE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TO&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;`user@123.456.789.012`&lt;/span&gt;                                    &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;GRANT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ALL&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;PRIVILEGES&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;`your_db_name`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TO&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;`user@123.456.789.012`&lt;/span&gt;              &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;---------------------------------------------------------------------------------+&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;rows&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;00&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;を使えば権限を剥奪できます。
allを剥奪します。&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;revoke&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;all&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;on&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;your_db_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'user'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'123.456.789.012'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Query&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OK&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;rows&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;affected&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;00&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;show&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;grants&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;123&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;456&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;789&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;012&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;---------------------------------------------------+&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Grants&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;123&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;456&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;789&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;012&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;                  &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;---------------------------------------------------+&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;GRANT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;USAGE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TO&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;`user`&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;`123.456.789.012`&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;---------------------------------------------------+&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;row&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;00&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;権限設計をどうするか&quot;&gt;権限設計をどうするか？&lt;/h3&gt;

&lt;p&gt;権限が細かすぎてALLにしたくなる気持ちがありますが、Railsからアクセスなどシステムによるアクセスの場合は、Railsでよく使う権限を付与しておきシステム特性に合わせて随時追加する形が楽だと思います。&lt;/p&gt;

&lt;p&gt;またマーケティング部署など非エンジニアやDBスキルの低い人がSQLを叩く場合は、SELECTなど読み取り系の権限で構成になると思います。&lt;/p&gt;

&lt;p&gt;権限はたくさんあります。詳しくは&lt;a href=&quot;[https://dev.mysql.com/doc/refman/5.6/ja/grant.html#grant-privileges](https://dev.mysql.com/doc/refman/5.6/ja/grant.html#grant-privileges)&quot;&gt;公式のGRANT および REVOKE に対して許容可能な権限&lt;/a&gt;を確認してください。&lt;/p&gt;

&lt;h3 id=&quot;flush-privilegesの有無&quot;&gt;FLUSH PRIVILEGESの有無&lt;/h3&gt;

&lt;p&gt;ネット記事によっては、grantの後に&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;FLUSH PRIVILEGES;&lt;/code&gt; を実行してるのをよく見かけます。
ただ、&lt;a href=&quot;[https://dev.mysql.com/doc/refman/5.6/ja/privilege-changes.html](https://dev.mysql.com/doc/refman/5.6/ja/privilege-changes.html)&quot;&gt;公式&lt;/a&gt;の説明を見ると分かりますが、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GRANT、REVOKE、SET PASSWORD、RENAME USER&lt;/code&gt;などのアカウント管理ステートメントの場合は、自動でリロードするので不要です。&lt;/p&gt;

&lt;p&gt;必要なタイミングは、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;INSERT、UPDATE、DELETE&lt;/code&gt;ステートメントで直接権限テーブルを更新したときです。&lt;/p&gt;

&lt;h2 id=&quot;作成したmysqlユーザーで接続確認する&quot;&gt;作成したMySQLユーザーで接続確認する&lt;/h2&gt;

&lt;p&gt;MySQLユーザーを作成したら実際にアクセスして疎通確認します。
例えばMySQLサーバを立てたサーバのIPが&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;123.123.123.123&lt;/code&gt;だとします。&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;u&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;h&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;123&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;123&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;123&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;123&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;接続エラーは要因が多い&quot;&gt;接続エラーは要因が多い&lt;/h3&gt;

&lt;p&gt;MySQLの接続エラーは特定が困難です。何らかの原因で接続エラーが起きると接続失敗の旨のみ表示されます。&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ERROR 2003 (HY000): Can't connect to MySQL server on '123.123.123.123' (113)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;ここではすべてのパターンは掲載しませんが、一部掲載します。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;ユーザーが異なる
    &lt;ul&gt;
      &lt;li&gt;接続しようとしてるMySQLユーザーが間違っていないか？&lt;/li&gt;
      &lt;li&gt;ユーザー名は合っててもホストがあっているか？&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;ホスト(IPアドレス)が異なる
    &lt;ul&gt;
      &lt;li&gt;接続先DBサーバのホスト(IP)があっているか？&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;firewalldで許可されてない
    &lt;ul&gt;
      &lt;li&gt;MySQLサービスまたは使用ポートが許可されてるか？&lt;/li&gt;
      &lt;li&gt;firewalldの許可サービスに&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mysql&lt;/code&gt;またはポート(3306/tcp)が含まれているか？&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;ポート番号が異なる
    &lt;ul&gt;
      &lt;li&gt;デフォルト3306から変更してるなら&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-P&lt;/code&gt;オプションで指定してるか？&lt;/li&gt;
      &lt;li&gt;指定したポートが間違っていないか？&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;dbはインフラの中で比較的よく触る&quot;&gt;DBはインフラの中で比較的よく触る&lt;/h2&gt;
&lt;p&gt;これでCentOS上にMySQLをインストール、稼働させることが出来たと思います。
ただし、構築して終わりではなくWeb開発の現場では、MySQLなどのデータベースは他のインフラと比べて、比較的触る頻度が多いです。
理由としては、RailsなどWebアプリケーションの実装の影響を受けやすく、Webパフォーマンスに影響するため、スロークエリを調べたりEXPLAINでインデックスが効いているか確認したりと、チューニング作業が発生するためです。&lt;/p&gt;</content><author><name></name></author><category term="db" /><category term="mysql" /><category term="linux" /><category term="centos" /><summary type="html">CentOS8にMySQLをインストールします。なお当時のバージョンは8です。 公式からインストールする方法もありますが、ここではyumにあるバージョンを使います。</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://blog.mothule.com/assets/images/2021-02-19-db-mysql-install-mysql8-on-centos8/eyecatch.png" /><media:content medium="image" url="https://blog.mothule.com/assets/images/2021-02-19-db-mysql-install-mysql8-on-centos8/eyecatch.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry></feed>