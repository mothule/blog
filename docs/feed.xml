<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="ja-JP"><generator uri="https://jekyllrb.com/" version="3.9.0">Jekyll</generator><link href="https://blog.mothule.com/feed.xml" rel="self" type="application/atom+xml" /><link href="https://blog.mothule.com/" rel="alternate" type="text/html" hreflang="ja-JP" /><updated>2021-01-26T02:48:58+09:00</updated><id>https://blog.mothule.com/feed.xml</id><title type="html">もちゅろぐ</title><subtitle>iOSやSwift,RubyやRailsなどiPhoneアプリ開発とサーバーサイド開発を中心に綴っている技術ブログ</subtitle><entry><title type="html">MySQLユーザーの一覧や権限を表示して確認する</title><link href="https://blog.mothule.com/db/mysql/db-mysql-show-user-and-grants" rel="alternate" type="text/html" title="MySQLユーザーの一覧や権限を表示して確認する" /><published>2021-01-26T00:00:00+09:00</published><updated>2021-01-26T02:48:33+09:00</updated><id>https://blog.mothule.com/db/mysql/db-mysql-show-user-and-grants</id><content type="html" xml:base="https://blog.mothule.com/db/mysql/db-mysql-show-user-and-grants">&lt;p&gt;MySQLユーザーの一覧表示や、ユーザーが持つ権限を表示する方法について整理します。&lt;/p&gt;

&lt;h2 id=&quot;mysqlユーザー情報を一覧表示する&quot;&gt;MySQLユーザー情報を一覧表示する&lt;/h2&gt;
&lt;p&gt;MySQLのユーザー情報を表示するには、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mysql&lt;/code&gt;データベースの&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;user&lt;/code&gt;テーブルを表示します。&lt;br /&gt;
次のステートメントは、ユーザー名&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;main&lt;/code&gt;の&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Host&lt;/code&gt;と&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;User&lt;/code&gt;カラムを表示してます。&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mysql&amp;gt; select host, user from mysql.user;
+-----------+------+
| host      | user |
+-----------+------+
| localhost | main |
+-----------+------+
1 row in set (0.00 sec)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Host&lt;/code&gt;と&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;User&lt;/code&gt;にもカラムはありますが、量が多いので省略します。&lt;/p&gt;

&lt;h2 id=&quot;mysqlユーザーの権限を表示して確認する&quot;&gt;MySQLユーザーの権限を表示して確認する&lt;/h2&gt;
&lt;p&gt;MySQLのユーザー権限を表示するには、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SHOW GRANTS&lt;/code&gt;ステートメントを使います。&lt;br /&gt;
次のステートメントは&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;main@localhost&lt;/code&gt;の権限を表示してます。&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mysql&amp;gt; show grants &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;main@localhost&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
+------------------------------------------+
| Grants &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;main@localhost                |
+------------------------------------------+
| GRANT USAGE ON &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; TO &lt;span class=&quot;s1&quot;&gt;'main'&lt;/span&gt;@&lt;span class=&quot;s1&quot;&gt;'localhost'&lt;/span&gt; |
+------------------------------------------+
1 row &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.00 sec&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GRANT USAGE ON *.* TO 'main'@'localhost'&lt;/code&gt;とは権限がないことを表します。&lt;/p&gt;</content><author><name></name></author><category term="db" /><category term="mysql" /><summary type="html">MySQLユーザーの一覧表示や、ユーザーが持つ権限を表示する方法について整理します。</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://blog.mothule.com/assets/images/2021-01-26-db-mysql-show-user-and-grants/eyecatch.png" /><media:content medium="image" url="https://blog.mothule.com/assets/images/2021-01-26-db-mysql-show-user-and-grants/eyecatch.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">MySQLのINFORMATION_SCHEMA STATISTICSでインデックスを表示して確認する</title><link href="https://blog.mothule.com/db/mysql/db-mysql-information-schema" rel="alternate" type="text/html" title="MySQLのINFORMATION_SCHEMA STATISTICSでインデックスを表示して確認する" /><published>2021-01-25T00:00:00+09:00</published><updated>2021-01-25T22:45:22+09:00</updated><id>https://blog.mothule.com/db/mysql/db-mysql-information-schema</id><content type="html" xml:base="https://blog.mothule.com/db/mysql/db-mysql-information-schema">&lt;p&gt;MySQLのインデックスを確認する方法として、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SHOW INDEX&lt;/code&gt;ステートメントがありますが、&lt;br /&gt;
他にもMySQLのINFORMATION_SCHEMAデータベース内にあるSTATISTICSテーブルを表示して、インデックス情報を確認する方法があります。&lt;/p&gt;

&lt;h2 id=&quot;mysqlのinformation_schemaは情報データベース&quot;&gt;MySQLのINFORMATION_SCHEMAは情報データベース&lt;/h2&gt;

&lt;p&gt;INFORMATION_SCHEMAは、「MySQLサーバが保持する全てのデータベース」に関する情報を格納するデータベースです。
次のMySQLサーバに関する情報を提供します。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;データベースの名前&lt;/li&gt;
  &lt;li&gt;テーブルの名前&lt;/li&gt;
  &lt;li&gt;カラムのデータ型&lt;/li&gt;
  &lt;li&gt;アクセス権限&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;information_schemaのstatisticsはテーブルインデックスの情報を持つ&quot;&gt;INFORMATION_SCHEMAのSTATISTICSはテーブルインデックスの情報を持つ&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;STATISTICS&lt;/code&gt;テーブルの構造を見てみます。&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mysql&amp;gt; desc statistics&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
+---------------+---------------+------+-----+---------+-------+
| Field         | Type          | Null | Key | Default | Extra |
+---------------+---------------+------+-----+---------+-------+
| TABLE_CATALOG | varchar&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;512&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;  | NO   |     |         |       |
| TABLE_SCHEMA  | varchar&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;64&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;   | NO   |     |         |       |
| TABLE_NAME    | varchar&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;64&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;   | NO   |     |         |       |
| NON_UNIQUE    | bigint&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;     | NO   |     | 0       |       |
| INDEX_SCHEMA  | varchar&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;64&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;   | NO   |     |         |       |
| INDEX_NAME    | varchar&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;64&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;   | NO   |     |         |       |
| SEQ_IN_INDEX  | bigint&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;2&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;     | NO   |     | 0       |       |
| COLUMN_NAME   | varchar&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;64&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;   | NO   |     |         |       |
| COLLATION     | varchar&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;    | YES  |     | NULL    |       |
| CARDINALITY   | bigint&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;21&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;    | YES  |     | NULL    |       |
| SUB_PART      | bigint&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;3&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;     | YES  |     | NULL    |       |
| PACKED        | varchar&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;10&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;   | YES  |     | NULL    |       |
| NULLABLE      | varchar&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;3&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;    | NO   |     |         |       |
| INDEX_TYPE    | varchar&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;16&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;   | NO   |     |         |       |
| COMMENT       | varchar&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;16&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;   | YES  |     | NULL    |       |
| INDEX_COMMENT | varchar&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1024&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; | NO   |     |         |       |
+---------------+---------------+------+-----+---------+-------+
16 rows &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.00 sec&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;show-indexとほぼ結果は同じ&quot;&gt;SHOW INDEXとほぼ結果は同じ&lt;/h2&gt;
&lt;p&gt;下記は&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;hoge_development&lt;/code&gt;データベースの&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tokens&lt;/code&gt;テーブルのインデックス情報を表示した結果です。&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mysql&amp;gt; &lt;span class=&quot;k&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; from statistics where table_schema &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'hoge_development'&lt;/span&gt; and table_name &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'tokens'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
+---------------+-----------------------+------------+------------+-----------------------+-------------------------+--------------+-------------+-----------+-------------+----------+--------+----------+------------+---------+---------------+
| TABLE_CATALOG | TABLE_SCHEMA          | TABLE_NAME | NON_UNIQUE | INDEX_SCHEMA          | INDEX_NAME              | SEQ_IN_INDEX | COLUMN_NAME | COLLATION | CARDINALITY | SUB_PART | PACKED | NULLABLE | INDEX_TYPE | COMMENT | INDEX_COMMENT |
+---------------+-----------------------+------------+------------+-----------------------+-------------------------+--------------+-------------+-----------+-------------+----------+--------+----------+------------+---------+---------------+
| def           | hoge_development | tokens     |          0 | hoge_development | PRIMARY                 |            1 | &lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;          | A         |           3 |     NULL | NULL   |          | BTREE      |         |               |
| def           | hoge_development | tokens     |          1 | hoge_development | index_tokens_on_user_id |            1 | user_id     | A         |           3 |     NULL | NULL   | YES      | BTREE      |         |               |
+---------------+-----------------------+------------+------------+-----------------------+-------------------------+--------------+-------------+-----------+-------------+----------+--------+----------+------------+---------+---------------+
2 rows &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.00 sec&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;出力されるカラム名は異なりますが、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SHOW INDEX&lt;/code&gt;ステートメントと値は同じものになります。&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mysql&amp;gt; show index from tokens from hoge_development&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
+--------+------------+-------------------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+
| Table  | Non_unique | Key_name                | Seq_in_index | Column_name | Collation | Cardinality | Sub_part | Packed | Null | Index_type | Comment | Index_comment |
+--------+------------+-------------------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+
| tokens |          0 | PRIMARY                 |            1 | &lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;          | A         |           3 |     NULL | NULL   |      | BTREE      |         |               |
| tokens |          1 | index_tokens_on_user_id |            1 | user_id     | A         |           3 |     NULL | NULL   | YES  | BTREE      |         |               |
+--------+------------+-------------------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+
2 rows &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.00 sec&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;複数テーブルのインデックスを表示して確認できる&quot;&gt;複数テーブルのインデックスを表示して確認できる&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SHOW INDEX&lt;/code&gt;は一つのテーブルに対するインデックス情報を表示しますが、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;INFORMATION_SCHEMA STATISTICS&lt;/code&gt;を使うとデータベースを横断してアクセスするため、&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Where&lt;/code&gt;で絞り込むことで複数テーブルのインデックス情報を表示して確認できます。&lt;/p&gt;

&lt;h2 id=&quot;インデックス情報の確認は大抵はshow-indexで事足りる&quot;&gt;インデックス情報の確認は大抵はSHOW INDEXで事足りる&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;INFORMATION_SCHEMA STATISTICS&lt;/code&gt;テーブルを使えば多くの情報を得られますが、インデックスを調べるだけであれば、大抵は&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SHOW INDEX&lt;/code&gt;ステートメントで事足ります。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SHOW INDEX&lt;/code&gt;ステートメントの詳細は、「&lt;span&gt;&lt;a href=&quot;/db/mysql/db-mysql-show-index&quot;&gt;MySQLでテーブルのインデックスを表示して確認する&lt;/a&gt;&lt;/span&gt;
」にまとめてあります。&lt;/p&gt;</content><author><name></name></author><category term="db" /><category term="mysql" /><summary type="html">MySQLのインデックスを確認する方法として、SHOW INDEXステートメントがありますが、 他にもMySQLのINFORMATION_SCHEMAデータベース内にあるSTATISTICSテーブルを表示して、インデックス情報を確認する方法があります。</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://blog.mothule.com/assets/images/2021-01-25-db-mysql-information-schema/eyecatch.png" /><media:content medium="image" url="https://blog.mothule.com/assets/images/2021-01-25-db-mysql-information-schema/eyecatch.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">MySQLでテーブルのインデックスを表示して確認する</title><link href="https://blog.mothule.com/db/mysql/db-mysql-show-index" rel="alternate" type="text/html" title="MySQLでテーブルのインデックスを表示して確認する" /><published>2021-01-23T00:00:00+09:00</published><updated>2021-01-23T19:07:25+09:00</updated><id>https://blog.mothule.com/db/mysql/db-mysql-show-index</id><content type="html" xml:base="https://blog.mothule.com/db/mysql/db-mysql-show-index">&lt;p&gt;MySQLでテーブルのインデックスを表示するには、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SHOW INDEX&lt;/code&gt;ステートメントを使います。&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SHOW INDEX&lt;/code&gt;構文は指定したテーブル内のインデックス情報を表示します。&lt;/p&gt;

&lt;h2 id=&quot;mysqlのshow-indexステートメントの構文&quot;&gt;MySQLのSHOW INDEXステートメントの構文&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SHOW {INDEX | INDEXES | KEYS} {FROM | IN} tbl_name [{FROM | IN} db_name] [WHERE expr]&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[]&lt;/code&gt;は任意で、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;{|}&lt;/code&gt;はどちらかを選択になります。&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;{FROM | IN}&lt;/code&gt;であれば&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;FROM&lt;/code&gt;か&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;IN&lt;/code&gt;どちらかを使えます。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;INDEX&lt;/code&gt;と&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;INDEXES&lt;/code&gt;、そして&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;KEYS&lt;/code&gt;はどれを選んでも結果は同じです。&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;INDEXES&lt;/code&gt;と&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;KEYS&lt;/code&gt;は&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;INDEX&lt;/code&gt;のシノニム(代替名)です。&lt;/p&gt;

&lt;h2 id=&quot;show-indexの実行例&quot;&gt;SHOW INDEXの実行例&lt;/h2&gt;
&lt;p&gt;USEステートメントでDB&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;hoge_development&lt;/code&gt;を選択したのちに&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SHOW INDEX&lt;/code&gt;を実行してます。&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mysql&amp;gt; show index from tokens&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
+--------+------------+-------------------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+
| Table  | Non_unique | Key_name                | Seq_in_index | Column_name | Collation | Cardinality | Sub_part | Packed | Null | Index_type | Comment | Index_comment |
+--------+------------+-------------------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+
| tokens |          0 | PRIMARY                 |            1 | &lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;          | A         |           1 |     NULL | NULL   |      | BTREE      |         |               |
| tokens |          0 | index_tokens_on_value   |            1 | value       | A         |           1 |     NULL | NULL   | YES  | BTREE      |         |               |
| tokens |          1 | index_tokens_on_user_id |            1 | user_id     | A         |           1 |     NULL | NULL   | YES  | BTREE      |         |               |
+--------+------------+-------------------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+
3 rows &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.00 sec&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;db名とテーブル名のfrom句を結合する&quot;&gt;DB名とテーブル名のFROM句を結合する&lt;/h3&gt;
&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;db_name&lt;/code&gt;と&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tbl_name&lt;/code&gt;を&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.&lt;/code&gt;で繋ぐことができます。次の2つは同等です。&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mysql&amp;gt; show index from &lt;span class=&quot;nb&quot;&gt;users &lt;/span&gt;from hoge_development&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
mysql&amp;gt; show index from hoge_development.users&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;mysqlのshow-indexで表示される項目&quot;&gt;MySQLのSHOW INDEXで表示される項目&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;項目名&lt;/th&gt;
      &lt;th&gt;説明&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Table&lt;/td&gt;
      &lt;td&gt;テーブル名です。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Non_unique&lt;/td&gt;
      &lt;td&gt;重複許可を表します。重複可能:1, 重複不可:0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Key_name&lt;/td&gt;
      &lt;td&gt;インデックスの名前。このインデックスが主キーなら、常に PRIMARY です。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Seq_in_index&lt;/td&gt;
      &lt;td&gt;インデックス内のカラムシーケンス番号であり、1から始まります。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Column_name&lt;/td&gt;
      &lt;td&gt;カラム名です。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Collation&lt;/td&gt;
      &lt;td&gt;インデックス内カラムのソート方法。&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;A&lt;/code&gt;なら&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;昇順&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NULL&lt;/code&gt;なら&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ソートされない&lt;/code&gt;のどちらかです。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Cardinality&lt;/td&gt;
      &lt;td&gt;インデックス内のユニーク数の推定値。統計値なため必ずしも正確ではない。この値が高いほど結合時にこのインデックス利用可能性が高くなります。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Sub_part&lt;/td&gt;
      &lt;td&gt;カラムが部分的インデックス設定されてるときの文字の数。カラム全体がインデックス設定されている場合は NULLが入ります。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Packed&lt;/td&gt;
      &lt;td&gt;キーがパックされる方法を示します。パックされない場合は NULL。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Null&lt;/td&gt;
      &lt;td&gt;このカラムに&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NULL&lt;/code&gt;を含められるなら&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;YES&lt;/code&gt;、含められないなら空白が入ります。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Index_type&lt;/td&gt;
      &lt;td&gt;使用されるインデックス方法 (BTREE、FULLTEXT、HASH、RTREEのいずれかです)。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Comment&lt;/td&gt;
      &lt;td&gt;各カラムで説明されていないこのインデックスに関する情報&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Index_comment&lt;/td&gt;
      &lt;td&gt;このインデックスが作成されたときに COMMENT 属性で設定された任意のコメント。&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;この中でよく確認したりチューニング時に見る項目は次の項目が多いかと思います。&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Table&lt;/code&gt;、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Non_unique&lt;/code&gt;、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Key_name&lt;/code&gt;、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Column_name&lt;/code&gt;、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Cardinality&lt;/code&gt;、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Sub_part&lt;/code&gt;、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Null&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;インデックスの条件等を確認するなら、次の項目あたりになります。&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Table&lt;/li&gt;
  &lt;li&gt;Non_unique&lt;/li&gt;
  &lt;li&gt;Key_name&lt;/li&gt;
  &lt;li&gt;Column_name&lt;/li&gt;
  &lt;li&gt;Null&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;チューニングでインデックスの状態を確認するなら、次の項目あたりになります。&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Cardinality&lt;/li&gt;
  &lt;li&gt;Sub_part&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;show-indexをwhere句で表示テーブルを絞る&quot;&gt;SHOW INDEXをWHERE句で表示テーブルを絞る&lt;/h2&gt;

&lt;p&gt;構文内にある&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WHERE&lt;/code&gt;句を使うことで表示インデックスを選択できます。&lt;br /&gt;
テーブル&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tokens&lt;/code&gt;から&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Key_name&lt;/code&gt;カラムに対して照合すると次のようになります。&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mysql&amp;gt; show index from tokens where Key_name like &lt;span class=&quot;s1&quot;&gt;'index_%'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
+--------+------------+-------------------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+
| Table  | Non_unique | Key_name                | Seq_in_index | Column_name | Collation | Cardinality | Sub_part | Packed | Null | Index_type | Comment | Index_comment |
+--------+------------+-------------------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+
| tokens |          0 | index_tokens_on_value   |            1 | value       | A         |           1 |     NULL | NULL   | YES  | BTREE      |         |               |
| tokens |          1 | index_tokens_on_user_id |            1 | user_id     | A         |           1 |     NULL | NULL   | YES  | BTREE      |         |               |
+--------+------------+-------------------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+
2 rows &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.00 sec&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;注意-show-indexは権限がない場合は表示されない&quot;&gt;注意: SHOW INDEXは権限がない場合は表示されない&lt;/h2&gt;
&lt;p&gt;カラムに対する権限を持っていない場合は、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SHOW INDEX&lt;/code&gt;の結果に表示されません。&lt;/p&gt;

&lt;h2 id=&quot;mysqlのmysqlshowコマンドでも取得可能&quot;&gt;MySQLのmysqlshowコマンドでも取得可能&lt;/h2&gt;
&lt;p&gt;ターミナル上で&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mysqlshow -k db_name tbl_name&lt;/code&gt;コマンドを実行することで、テーブルのインデックスを一覧表示できます。&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;mysqlshow &lt;span class=&quot;nt&quot;&gt;-uroot&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-k&lt;/span&gt; hoge_test tokens
Database: hoge_test  Table: tokens
+------------+--------------+--------------------+------+-----+---------+----------------+---------------------------------+---------+
| Field      | Type         | Collation          | Null | Key | Default | Extra          | Privileges                      | Comment |
+------------+--------------+--------------------+------+-----+---------+----------------+---------------------------------+---------+
| &lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;         | bigint&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;20&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;   |                    | NO   | PRI |         | auto_increment | &lt;span class=&quot;k&quot;&gt;select&lt;/span&gt;,insert,update,references |         |
| value      | varchar&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;256&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; | utf8mb4_general_ci | YES  | UNI |         |                | &lt;span class=&quot;k&quot;&gt;select&lt;/span&gt;,insert,update,references |         |
| user_id    | bigint&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;20&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;   |                    | YES  | MUL |         |                | &lt;span class=&quot;k&quot;&gt;select&lt;/span&gt;,insert,update,references |         |
| created_at | datetime&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;6&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;  |                    | NO   |     |         |                | &lt;span class=&quot;k&quot;&gt;select&lt;/span&gt;,insert,update,references |         |
| updated_at | datetime&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;6&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;  |                    | NO   |     |         |                | &lt;span class=&quot;k&quot;&gt;select&lt;/span&gt;,insert,update,references |         |
+------------+--------------+--------------------+------+-----+---------+----------------+---------------------------------+---------+
+--------+------------+-------------------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+
| Table  | Non_unique | Key_name                | Seq_in_index | Column_name | Collation | Cardinality | Sub_part | Packed | Null | Index_type | Comment | Index_comment |
+--------+------------+-------------------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+
| tokens | 0          | PRIMARY                 | 1            | &lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;          | A         | 1           |          |        |      | BTREE      |         |               |
| tokens | 0          | index_tokens_on_value   | 1            | value       | A         | 1           |          |        | YES  | BTREE      |         |               |
| tokens | 1          | index_tokens_on_user_id | 1            | user_id     | A         | 1           |          |        | YES  | BTREE      |         |               |
+--------+------------+-------------------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name></name></author><category term="db" /><category term="mysql" /><summary type="html">MySQLでテーブルのインデックスを表示するには、SHOW INDEXステートメントを使います。 SHOW INDEX構文は指定したテーブル内のインデックス情報を表示します。</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://blog.mothule.com/assets/images/2021-01-23-db-mysql-show-index/eyecatch.png" /><media:content medium="image" url="https://blog.mothule.com/assets/images/2021-01-23-db-mysql-show-index/eyecatch.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">MySQLのテーブル一覧を表示して確認する</title><link href="https://blog.mothule.com/db/mysql/db-mysql-show-tables" rel="alternate" type="text/html" title="MySQLのテーブル一覧を表示して確認する" /><published>2021-01-22T00:00:00+09:00</published><updated>2021-01-22T19:01:50+09:00</updated><id>https://blog.mothule.com/db/mysql/db-mysql-show-tables</id><content type="html" xml:base="https://blog.mothule.com/db/mysql/db-mysql-show-tables">&lt;p&gt;MySQLのテーブル一覧を表示するには、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SHOW TABLES&lt;/code&gt;ステートメントを使います。&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SHOW TABLES&lt;/code&gt;ステートメントは特定データベース内の&lt;em&gt;TEMPORARY&lt;/em&gt;以外のテーブルを一覧表示します。&lt;br /&gt;
また、ビューも一覧表示します。&lt;/p&gt;

&lt;h2 id=&quot;mysqlのshow-tablesステートメントの構文&quot;&gt;MySQLのSHOW TABLESステートメントの構文&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SHOW [FULL] TABLES [{FROM | IN} db_name] [LIKE 'pattern' | WHERE expr]&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[]&lt;/code&gt;は任意で、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;{|}&lt;/code&gt;はどちらかを選択になります。&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;{FROM | IN}&lt;/code&gt;であれば&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;FROM&lt;/code&gt;か&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;IN&lt;/code&gt;どちらかを使えます。&lt;/p&gt;

&lt;h2 id=&quot;show-tablesの実行例&quot;&gt;SHOW TABLESの実行例&lt;/h2&gt;
&lt;p&gt;USEステートメントでDB&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;hoge_development&lt;/code&gt;を選択したのちに&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SHOW TABLES&lt;/code&gt;を実行してます。&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mysql&amp;gt; show tables&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
+---------------------------------+
| Tables_in_hoge_development      |
+---------------------------------+
| active_admin_comments           |
| active_storage_attachments      |
| active_storage_blobs            |
| ar_internal_metadata            |
| schema_migrations               |
| hoges                           |
| tokens                          |
| &lt;span class=&quot;nb&quot;&gt;users&lt;/span&gt;                           |
+---------------------------------+
8 rows &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.00 sec&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;show-tablesのlike句で表示テーブルを絞る&quot;&gt;SHOW TABLESのLIKE句で表示テーブルを絞る&lt;/h2&gt;

&lt;p&gt;構文内にある&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;LIKE&lt;/code&gt;句を使うことで表示テーブルを選択できます。&lt;br /&gt;
先程のテーブル名から先頭に&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;active&lt;/code&gt; と入るテーブル名を選択する場合は次のようになります。&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mysql&amp;gt; show tables like &lt;span class=&quot;s1&quot;&gt;'active_%'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
+--------------------------------------------+
| Tables_in_hoge_development &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;active_%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;      |
+--------------------------------------------+
| active_admin_comments                      |
| active_storage_attachments                 |
| active_storage_blobs                       |
+--------------------------------------------+
3 rows &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.00 sec&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;show-tablesのfull修飾子でテーブルタイプを追加表示する&quot;&gt;SHOW TABLESのFULL修飾子でテーブルタイプを追加表示する&lt;/h2&gt;

&lt;p&gt;構文内にあるFULL装飾子がついた&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SHOW FULL TABLES&lt;/code&gt;を使うことで出力カラムにテーブルタイプを表示します。&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mysql&amp;gt; show full tables&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
+---------------------------------+------------+
| Tables_in_hoge_development      | Table_type |
+---------------------------------+------------+
| active_admin_comments           | BASE TABLE |
| active_storage_attachments      | BASE TABLE |
| active_storage_blobs            | BASE TABLE |
| ar_internal_metadata            | BASE TABLE |
| schema_migrations               | BASE TABLE |
| hoges                           | BASE TABLE |
| tokens                          | BASE TABLE |
| &lt;span class=&quot;nb&quot;&gt;users&lt;/span&gt;                           | BASE TABLE |
+---------------------------------+------------+
8 rows &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.00 sec&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;テーブルタイプ(Table_type)の値は、テーブルかビューで変わります。&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;テーブルは&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;BASE TABLE&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;ビューは&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;VIEW&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;show-tablesをwhere句で表示テーブルを絞る&quot;&gt;SHOW TABLESをWHERE句で表示テーブルを絞る&lt;/h2&gt;

&lt;p&gt;構文内にある&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WHERE&lt;/code&gt;句を使うことで表示テーブルを選択できます。&lt;br /&gt;
先程のテーブル名から&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;users&lt;/code&gt;テーブルを選択する場合は次のようになります。&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mysql&amp;gt; show tables where Tables_in_hoge_development &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'users'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
+---------------------------------+
| Tables_in_hoge_development      |
+---------------------------------+
| &lt;span class=&quot;nb&quot;&gt;users&lt;/span&gt;                           |
+---------------------------------+
1 row &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.00 sec&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;また、FULL装飾子をつけてテーブルタイプ(Table_type)を追加すれば、同様に条件として使えます。&lt;/p&gt;

&lt;h2 id=&quot;注意-show-tablesは権限がない場合は表示されない&quot;&gt;注意: SHOW TABLESは権限がない場合は表示されない&lt;/h2&gt;
&lt;p&gt;テーブルやビューに対する権限を持っていない場合は、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SHOW TABLES&lt;/code&gt;の結果に表示されません。&lt;/p&gt;

&lt;h2 id=&quot;mysqlのmysqlshowコマンドでも取得可能&quot;&gt;MySQLのmysqlshowコマンドでも取得可能&lt;/h2&gt;
&lt;p&gt;ターミナル上で&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mysqlshow&lt;/code&gt;コマンドを実行することで、同様にMySQLのテーブル一覧を表示できます。&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;mysqlshow &lt;span class=&quot;nt&quot;&gt;-uroot&lt;/span&gt; hoge_development
Database: hoge_development
+----------------------------+
|           Tables           |
+----------------------------+
| active_admin_comments      |
| active_storage_attachments |
| active_storage_blobs       |
| ar_internal_metadata       |
| schema_migrations          |
| hoges                      |
| tokens                     |
| &lt;span class=&quot;nb&quot;&gt;users&lt;/span&gt;                      |
+----------------------------+
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;ただし、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SHOW TABLES&lt;/code&gt; のように&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;LIKE&lt;/code&gt;や&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WHERE&lt;/code&gt;句は使えません。&lt;/p&gt;</content><author><name></name></author><category term="db" /><category term="mysql" /><summary type="html">MySQLのテーブル一覧を表示するには、SHOW TABLESステートメントを使います。 SHOW TABLESステートメントは特定データベース内のTEMPORARY以外のテーブルを一覧表示します。 また、ビューも一覧表示します。</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://blog.mothule.com/assets/images/2021-01-22-db-mysql-show-tables/eyecatch.png" /><media:content medium="image" url="https://blog.mothule.com/assets/images/2021-01-22-db-mysql-show-tables/eyecatch.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">MySQLでテーブルのカラムを表示して確認する</title><link href="https://blog.mothule.com/db/mysql/db-mysql-show-columns" rel="alternate" type="text/html" title="MySQLでテーブルのカラムを表示して確認する" /><published>2021-01-22T00:00:00+09:00</published><updated>2021-01-23T04:17:01+09:00</updated><id>https://blog.mothule.com/db/mysql/db-mysql-show-columns</id><content type="html" xml:base="https://blog.mothule.com/db/mysql/db-mysql-show-columns">&lt;p&gt;MySQLでテーブルのカラム一覧を表示するには、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SHOW COLUMNS&lt;/code&gt;ステートメントを使います。&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SHOW COLUMNS&lt;/code&gt;構文は指定したテーブル内のカラム情報を表示します。&lt;br /&gt;
これはビューのカラムも表示します。&lt;/p&gt;

&lt;h2 id=&quot;mysqlのshow-columnsステートメントの構文&quot;&gt;MySQLのSHOW COLUMNSステートメントの構文&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SHOW [FULL] COLUMNS {FROM | IN} tbl_name [{FROM | IN} db_name] [LIKE 'pattern | WHERE expr]&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[]&lt;/code&gt;は任意で、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;{|}&lt;/code&gt;はどちらかを選択になります。&lt;/p&gt;

&lt;h2 id=&quot;mysqlのshow-columnsの実行例&quot;&gt;MySQLのSHOW COLUMNSの実行例&lt;/h2&gt;
&lt;p&gt;次の例は、USEステートメントでDB&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;hoge_development&lt;/code&gt;を選択したのちに&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SHOW COLUMNS&lt;/code&gt;を実行してます。&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mysql&amp;gt; show columns from &lt;span class=&quot;nb&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
+-----------------+--------------+------+-----+---------+----------------+
| Field           | Type         | Null | Key | Default | Extra          |
+-----------------+--------------+------+-----+---------+----------------+
| &lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;              | bigint&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;20&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;   | NO   | PRI | NULL    | auto_increment |
| email           | varchar&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;255&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; | YES  |     | NULL    |                |
| password_digest | varchar&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;255&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; | YES  |     | NULL    |                |
| created_at      | datetime&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;6&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;  | NO   |     | NULL    |                |
| updated_at      | datetime&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;6&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;  | NO   |     | NULL    |                |
+-----------------+--------------+------+-----+---------+----------------+
5 rows &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.00 sec&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;db名とテーブル名のfrom句を結合する&quot;&gt;DB名とテーブル名のFROM句を結合する&lt;/h3&gt;
&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;db_name&lt;/code&gt;と&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tbl_name&lt;/code&gt;を&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.&lt;/code&gt;で繋ぐことができます。次の2つは同等です。&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mysql&amp;gt; show full columns from &lt;span class=&quot;nb&quot;&gt;users &lt;/span&gt;from hoge_development&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
mysql&amp;gt; show full columns from hoge_development.users&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;show-columnsのlike句で表示カラムを絞る&quot;&gt;SHOW COLUMNSのLIKE句で表示カラムを絞る&lt;/h2&gt;
&lt;p&gt;構文内にある&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;LIKE&lt;/code&gt;句を使うことで表示カラムを選択できます。&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;LIKE&lt;/code&gt;句はカラム名と照合します。&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mysql&amp;gt; show columns from &lt;span class=&quot;nb&quot;&gt;users &lt;/span&gt;like &lt;span class=&quot;s1&quot;&gt;'%_at'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
+------------+-------------+------+-----+---------+-------+
| Field      | Type        | Null | Key | Default | Extra |
+------------+-------------+------+-----+---------+-------+
| created_at | datetime&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;6&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; | NO   |     | NULL    |       |
| updated_at | datetime&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;6&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; | NO   |     | NULL    |       |
+------------+-------------+------+-----+---------+-------+
2 rows &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.01 sec&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;show-columnsのfull修飾子でcollation照合順序とprivileges権限とcommentコメントを追加表示する&quot;&gt;SHOW COLUMNSのFULL修飾子でCollation(照合順序)とPrivileges(権限)とComment(コメント)を追加表示する&lt;/h2&gt;
&lt;p&gt;構文内にあるFULL装飾子がついた&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SHOW FULL COLUMNS&lt;/code&gt;を使うことで出力カラムにCollation(照合順序)とPrivileges(権限)とComment(コメント)を表示します。&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mysql&amp;gt; show full columns from &lt;span class=&quot;nb&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
+-----------------+--------------+--------------------+------+-----+---------+----------------+---------------------------------+---------+
| Field           | Type         | Collation          | Null | Key | Default | Extra          | Privileges                      | Comment |
+-----------------+--------------+--------------------+------+-----+---------+----------------+---------------------------------+---------+
| &lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;              | bigint&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;20&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;   | NULL               | NO   | PRI | NULL    | auto_increment | &lt;span class=&quot;k&quot;&gt;select&lt;/span&gt;,insert,update,references |         |
| email           | varchar&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;255&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; | utf8mb4_general_ci | YES  |     | NULL    |                | &lt;span class=&quot;k&quot;&gt;select&lt;/span&gt;,insert,update,references |         |
| password_digest | varchar&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;255&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; | utf8mb4_general_ci | YES  |     | NULL    |                | &lt;span class=&quot;k&quot;&gt;select&lt;/span&gt;,insert,update,references |         |
| created_at      | datetime&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;6&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;  | NULL               | NO   |     | NULL    |                | &lt;span class=&quot;k&quot;&gt;select&lt;/span&gt;,insert,update,references |         |
| updated_at      | datetime&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;6&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;  | NULL               | NO   |     | NULL    |                | &lt;span class=&quot;k&quot;&gt;select&lt;/span&gt;,insert,update,references |         |
+-----------------+--------------+--------------------+------+-----+---------+----------------+---------------------------------+---------+
5 rows &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.00 sec&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;show-columnsが表示する値の説明&quot;&gt;SHOW COLUMNSが表示する値の説明&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SHOW COLUMNS&lt;/code&gt;や&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SHOW FULL COLUMNS&lt;/code&gt;が表示する値について説明します。&lt;/p&gt;

&lt;h3 id=&quot;fieldフィールド&quot;&gt;Field(フィールド)&lt;/h3&gt;
&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Field&lt;/code&gt;フィールドはテーブルのカラム名です。&lt;/p&gt;

&lt;h3 id=&quot;typeカラムデータ型&quot;&gt;Type(カラムデータ型)&lt;/h3&gt;
&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Type&lt;/code&gt;フィールドはカラムデータの型です。&lt;/p&gt;

&lt;h3 id=&quot;collation照合順序&quot;&gt;Collation(照合順序)&lt;/h3&gt;
&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Collation&lt;/code&gt;フィールドは文字列カラムの照合順序です。文字列でもバイナリは除きます。&lt;br /&gt;
その他の型の場合はNULLになります。&lt;/p&gt;

&lt;p&gt;この値は&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;FULL&lt;/code&gt;装飾子を使ったときだけ表示されます。&lt;/p&gt;

&lt;h3 id=&quot;null&quot;&gt;Null&lt;/h3&gt;
&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Null&lt;/code&gt;フィールドはNULLを格納できるかどうかを示します。&lt;br /&gt;
NULLを設定できる場合は&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;YES&lt;/code&gt;、できない場合は&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NO&lt;/code&gt;が表示されます。&lt;/p&gt;

&lt;h3 id=&quot;key&quot;&gt;Key&lt;/h3&gt;
&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Key&lt;/code&gt;フィールドはこのカラムのインデックス設定を&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;(空)/PRI/UNI/MUL&lt;/code&gt;のいずれかで示します。&lt;/p&gt;

&lt;h4 id=&quot;keyが空の場合&quot;&gt;Keyが空の場合&lt;/h4&gt;
&lt;p&gt;インデックス未設定か、&lt;/p&gt;
&lt;h4 id=&quot;keyがpriの場合&quot;&gt;KeyがPRIの場合&lt;/h4&gt;
&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PRIMARY KEY&lt;/code&gt;か、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;マルチカラムPRIMARY KEY&lt;/code&gt;の一つです。&lt;/p&gt;

&lt;h4 id=&quot;keyがuniの場合&quot;&gt;KeyがUNIの場合&lt;/h4&gt;
&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;UNIQUE&lt;/code&gt;インデックスです。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NULL&lt;/code&gt;は複数の存在を許してしまいます。&lt;br /&gt;
もし困る場合は、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Null&lt;/code&gt;が&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NO&lt;/code&gt;にして&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NULL&lt;/code&gt;自体を拒否してください。&lt;/p&gt;
&lt;h4 id=&quot;keyがmulの場合&quot;&gt;KeyがMULの場合&lt;/h4&gt;
&lt;p&gt;特定の値が複数存在することを許可した一意(ユニーク)ではないインデックスの最初のカラムです。&lt;/p&gt;

&lt;h3 id=&quot;default&quot;&gt;Default&lt;/h3&gt;
&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Default&lt;/code&gt;フィールドはカラムのデフォルト値です。&lt;br /&gt;
デフォルト値がNULLだったり、カラム定義に&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DEFAULT&lt;/code&gt;句がない場合は&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NULL&lt;/code&gt;が表示されます。&lt;/p&gt;

&lt;h3 id=&quot;extra&quot;&gt;Extra&lt;/h3&gt;
&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Extra&lt;/code&gt;フィールドは追加情報が含まれます。&lt;br /&gt;
この値が空以外になるのは、次のケースです。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AUTO_INCREMENT&lt;/code&gt;属性を持つカラムだと&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;auto_increment&lt;/code&gt;が表示されます。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ON UPDATE CURRENT_TIMESTAMP&lt;/code&gt;属性を持つ&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TIMESTAMP&lt;/code&gt;または&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DATETIME&lt;/code&gt;カラムだと&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;on update CURRENT_TIMESTAMP&lt;/code&gt;が表示されます。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;privileges権限&quot;&gt;Privileges(権限)&lt;/h3&gt;
&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Privileges&lt;/code&gt;フィールドはユーザーがカラムに持っている権限を示します。&lt;br /&gt;
この値は&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;FULL&lt;/code&gt;装飾子を使ったときだけ表示されます。&lt;/p&gt;

&lt;h3 id=&quot;commentコメント&quot;&gt;Comment(コメント)&lt;/h3&gt;
&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Comment&lt;/code&gt;フィールドは任意のコメントを示します。&lt;br /&gt;
この値は&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;FULL&lt;/code&gt;装飾子を使ったときだけ表示されます。&lt;/p&gt;

&lt;h2 id=&quot;show-columnsをwhere句で表示カラムを絞る&quot;&gt;SHOW COLUMNSをWHERE句で表示カラムを絞る&lt;/h2&gt;
&lt;p&gt;構文内にある&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WHERE&lt;/code&gt;句を使うことで表示カラムを選択できます。&lt;br /&gt;
テーブル&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;users&lt;/code&gt;から&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Type&lt;/code&gt;カラムに対して照合すると次のようになります。&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mysql&amp;gt; show columns from &lt;span class=&quot;nb&quot;&gt;users &lt;/span&gt;where Type like &lt;span class=&quot;s1&quot;&gt;'%char%'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
+-----------------+--------------+------+-----+---------+-------+
| Field           | Type         | Null | Key | Default | Extra |
+-----------------+--------------+------+-----+---------+-------+
| email           | varchar&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;255&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; | YES  |     | NULL    |       |
| password_digest | varchar&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;255&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; | YES  |     | NULL    |       |
+-----------------+--------------+------+-----+---------+-------+
2 rows &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.00 sec&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;注意-show-columnsは権限がないカラムは表示されない&quot;&gt;注意: SHOW COLUMNSは権限がないカラムは表示されない&lt;/h2&gt;
&lt;p&gt;カラムに対する権限を持っていない場合は、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SHOW COLUMNS&lt;/code&gt;の結果に表示されません。&lt;/p&gt;

&lt;h2 id=&quot;その他同様のステートメント&quot;&gt;その他同様のステートメント&lt;/h2&gt;
&lt;p&gt;構文にもあるように&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SHOW COLUMNS&lt;/code&gt;と&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SHOW FIELDS&lt;/code&gt;は同じ処理を行います。&lt;/p&gt;

&lt;p&gt;また&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DESCRIBE&lt;/code&gt;ステートメントも&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SHOW COLUMNS&lt;/code&gt;と同じ情報を提供できます。&lt;br /&gt;
さらに、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DESCRIBE&lt;/code&gt;と&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;EXPLAIN&lt;/code&gt;と&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DESC&lt;/code&gt;はシノニム(代替名)です。&lt;br /&gt;
つまり、次の行は全て同じ結果を返します。&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mysql&amp;gt; show columns from &lt;span class=&quot;nb&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
mysql&amp;gt; show fields from &lt;span class=&quot;nb&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
mysql&amp;gt; describe &lt;span class=&quot;nb&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
mysql&amp;gt; explain &lt;span class=&quot;nb&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
mysql&amp;gt; desc &lt;span class=&quot;nb&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;ただし、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SHOW FULL COLUMNS&lt;/code&gt;で追加表示されるカラムは、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DESCRIBE&lt;/code&gt;ステートメントには表示されません。&lt;/p&gt;

&lt;h2 id=&quot;mysqlのmysqlshowコマンドでも取得可能&quot;&gt;MySQLのmysqlshowコマンドでも取得可能&lt;/h2&gt;
&lt;p&gt;ターミナル上で&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mysqlshow&lt;/code&gt;コマンドを実行することで、同様にMySQLのカラム一覧を表示できます。&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;mysqlshow &lt;span class=&quot;nt&quot;&gt;-uroot&lt;/span&gt; hoge_development &lt;span class=&quot;nb&quot;&gt;users
&lt;/span&gt;Database: hoge_development  Table: &lt;span class=&quot;nb&quot;&gt;users&lt;/span&gt;
+-----------------+--------------+--------------------+------+-----+---------+----------------+---------------------------------+---------+
| Field           | Type         | Collation          | Null | Key | Default | Extra          | Privileges                      | Comment |
+-----------------+--------------+--------------------+------+-----+---------+----------------+---------------------------------+---------+
| &lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;              | bigint&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;20&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;   |                    | NO   | PRI |         | auto_increment | &lt;span class=&quot;k&quot;&gt;select&lt;/span&gt;,insert,update,references |         |
| email           | varchar&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;255&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; | utf8mb4_general_ci | YES  |     |         |                | &lt;span class=&quot;k&quot;&gt;select&lt;/span&gt;,insert,update,references |         |
| password_digest | varchar&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;255&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; | utf8mb4_general_ci | YES  |     |         |                | &lt;span class=&quot;k&quot;&gt;select&lt;/span&gt;,insert,update,references |         |
| created_at      | datetime&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;6&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;  |                    | NO   |     |         |                | &lt;span class=&quot;k&quot;&gt;select&lt;/span&gt;,insert,update,references |         |
| updated_at      | datetime&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;6&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;  |                    | NO   |     |         |                | &lt;span class=&quot;k&quot;&gt;select&lt;/span&gt;,insert,update,references |         |
+-----------------+--------------+--------------------+------+-----+---------+----------------+---------------------------------+---------+
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;ただし、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SHOW COLUMNS&lt;/code&gt; のように&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;LIKE&lt;/code&gt;や&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WHERE&lt;/code&gt;句は使えません。&lt;/p&gt;

&lt;h2 id=&quot;最も手軽にテーブル構造を確認するのはdescステートメント&quot;&gt;最も手軽にテーブル構造を確認するのはDESCステートメント&lt;/h2&gt;
&lt;p&gt;前述された情報から考えて、最もタイプ数が少なくて、手軽にテーブル構造を確認する方法は&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DESC&lt;/code&gt;ステートメントを使うことです。&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mysql&amp;gt; desc &lt;span class=&quot;nb&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name></name></author><category term="db" /><category term="mysql" /><summary type="html">MySQLでテーブルのカラム一覧を表示するには、SHOW COLUMNSステートメントを使います。 SHOW COLUMNS構文は指定したテーブル内のカラム情報を表示します。 これはビューのカラムも表示します。</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://blog.mothule.com/assets/images/2021-01-22-db-mysql-show-columns/eyecatch.png" /><media:content medium="image" url="https://blog.mothule.com/assets/images/2021-01-22-db-mysql-show-columns/eyecatch.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">5年近くリモートワークで培ったテキストコミュニケーションを一人で改善する方法</title><link href="https://blog.mothule.com/notebook/remote-work/notebook-remote-work-cool-text-communication" rel="alternate" type="text/html" title="5年近くリモートワークで培ったテキストコミュニケーションを一人で改善する方法" /><published>2021-01-21T00:00:00+09:00</published><updated>2021-01-21T12:15:41+09:00</updated><id>https://blog.mothule.com/notebook/remote-work/notebook-remote-work-cool-text-communication</id><content type="html" xml:base="https://blog.mothule.com/notebook/remote-work/notebook-remote-work-cool-text-communication">&lt;p&gt;5年近くフルリモートワークを経験して分かったことは、テキストコミュニケーションの改善は組織を大きく改善します。&lt;br /&gt;
リモートワークはテキストコミュニケーションが要です。&lt;/p&gt;

&lt;p&gt;この記事では、そんな私がテキストコミュニケーションとは何か？どうやったら上手になれるか？一人から始められる改善についてまとめました。&lt;/p&gt;

&lt;h2 id=&quot;テキストコミュニケーションは重要&quot;&gt;テキストコミュニケーションは重要&lt;/h2&gt;
&lt;p&gt;対面でのコミュニケーションが多い企業では、メールやSlackなどの文章による意思疎通の重要性は低いです。&lt;br /&gt;
なぜなら、人が目の前にいて、口で話したほうが楽だからです。&lt;/p&gt;

&lt;h2 id=&quot;隠されたテキストコミュニケーションと音声コミュニケーションの違い&quot;&gt;隠されたテキストコミュニケーションと音声コミュニケーションの違い&lt;/h2&gt;
&lt;p&gt;インタラクティブか否かです。&lt;/p&gt;

&lt;p&gt;口頭や音声コミュニケーションでは、テキストコミュニケーションと比べ圧倒的にやり取り量が異なります。&lt;br /&gt;
文章として完成していなくても相手側の相槌や質問を繰り返して少しずつ情報を伝達します。&lt;br /&gt;
やりとり量が多くても速度でカバーされています。&lt;/p&gt;

&lt;p&gt;テキストコミュニケーションは逆です。速度が遅いのでやりとり量の多さは無駄の要因になります。&lt;br /&gt;
一回で伝える情報を品質良いものにしなければ対話量が増えます。&lt;/p&gt;

&lt;p&gt;音声コミュニケーション慣れしてる人はここを面倒くさがります。&lt;/p&gt;

&lt;h2 id=&quot;良いテキストコミュニケーションの定義&quot;&gt;良いテキストコミュニケーションの定義&lt;/h2&gt;
&lt;p&gt;テキストコミュニケーションとは、伝達手段が「口頭からテキストに変わっただけ」と考える人は多いと思います。&lt;br /&gt;
確かに手段が変わっただけですが、手段が持つ特性も変わったことに気づいていない人は大変多いです。&lt;br /&gt;
では、良いコミュニケーションを取るために必要なものは何でしょうか？&lt;/p&gt;

&lt;h3 id=&quot;文章力&quot;&gt;文章力&lt;/h3&gt;
&lt;p&gt;何が言いたいか分からない人の文章で共通してるのは、当人のコンテキストが伝わりきれていない点です。&lt;br /&gt;
状況や環境により知識差があるはずなのに、そこの差に気づけず説明不足が発生します。&lt;/p&gt;

&lt;p&gt;求められるのは、&lt;strong&gt;簡潔で齟齬なく読みやすい文章で伝える力です。&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&quot;解読力&quot;&gt;解読力&lt;/h3&gt;
&lt;p&gt;伝える側に全責任があるのは間違いです。これは口頭であっても同じ話です。&lt;/p&gt;

&lt;p&gt;相手の立場にたって知識差を埋めるために&lt;strong&gt;背景&lt;/strong&gt;を伝えると、長文を面倒くさがって読まない人がいます。&lt;br /&gt;
逆に背景を伝えず要件に伝えると、齟齬が生まれたり、質問が多くてやり取りが増えたりします。&lt;/p&gt;

&lt;p&gt;求められるのは、&lt;strong&gt;複数の条件が絡んだ文章を読み解く力です。&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;全員ができて当たり前ではない&quot;&gt;全員ができて当たり前ではない&lt;/h2&gt;
&lt;p&gt;日本語を喋れるからと言って、音声コミュニケーションが得意とは限りません。&lt;br /&gt;
同様に&lt;strong&gt;ひらカナ漢字が読めても文章を読み解くとは限りませんし、齟齬ない文章を作れるとは限りません&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;全ての人が文章力と解読力が及第点を満たしてるとは限りません。苦手な人も当然います。&lt;br /&gt;
そのため良いテキストコミュニケーションは、上記に挙げた２つだけでは現実的に不可能になります。&lt;/p&gt;

&lt;h2 id=&quot;テキストコミュニケーションの隠れた重要特性&quot;&gt;テキストコミュニケーションの隠れた重要特性&lt;/h2&gt;
&lt;p&gt;実はテキストコミュニケーションには音声コミュニケーションにはない重要な特性があります。&lt;/p&gt;

&lt;h3 id=&quot;ノンバーバルコミュニケーションできない&quot;&gt;ノンバーバルコミュニケーションできない&lt;/h3&gt;
&lt;p&gt;ノンバーバルコミュニケーションとは非言語コミュニケーションです。&lt;br /&gt;
顔の表情や相槌、姿勢など文章にはされないボディランゲージです。&lt;/p&gt;

&lt;p&gt;テキストコミュニケーションでは、文章のみになるためこの部分が欠落します。&lt;br /&gt;
相手への疎通確認が意識しないと取れなかったり、感情が読み取れないといった問題がでてきます。&lt;/p&gt;

&lt;h3 id=&quot;読み手が書き手の感情を作る&quot;&gt;読み手が書き手の感情を作る&lt;/h3&gt;
&lt;p&gt;音声では感情を乗せて聞き手に伝わります。&lt;br /&gt;
しかしテキストでは文字に感情は入りません。文字が持つ意味しか伝わりません。
そしてそのテキストを読むのは読み手になります。&lt;/p&gt;

&lt;p&gt;このときに起きるのが、読んでいる文章に無いはずの感情を読み手自身が作り上げてしまいます。&lt;br /&gt;
例えばPRレビューコメントで次のようなコメントを受け取るとします。&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;A「ここの実装を○○にしてる理由は何ですか？例えば△△にしたほうが良いのでは？」
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;一見普通の指摘コメントに思います。&lt;br /&gt;
しかし、この文章を受け取る前に少し叱られた場合はどうでしょうか？&lt;br /&gt;
叱られた後にこのコメントを読むと、読み手は継続して、この文章から怒り感情が作り上げてしまいます。&lt;/p&gt;

&lt;p&gt;もちろん書き手はそんなつもりが全くないです。&lt;br /&gt;
しかしながら、読み手が無感情に読まない限りは、その前のコンテキストから感情を無意識に付与してしまいます。&lt;/p&gt;

&lt;h3 id=&quot;最も円滑なのは蓄積された善意&quot;&gt;最も円滑なのは蓄積された善意&lt;/h3&gt;
&lt;p&gt;上記の話にも関連しますが、普段から優しい人が送るメッセージは、読み手は負の感情を付与しなくなります。&lt;br /&gt;
同様に普段から助けてくれる人が送るメッセージは、読み手は感謝や尊敬が無意識に感じます。&lt;br /&gt;
&lt;strong&gt;この感情が文章の解読モチベーションに大きく作用します。&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;今日から誰でもできるテキストコミュニケーションの意識改善&quot;&gt;今日から誰でもできるテキストコミュニケーションの意識改善&lt;/h2&gt;
&lt;p&gt;テキストコミュニケーションの特性や良い定義が分かったら、我々は次のアクションを考えないといけません。&lt;br /&gt;
私が常に意識して忘れないようにしてることがあります。&lt;/p&gt;

&lt;h3 id=&quot;リアクション絵文字の力を侮るなかれ&quot;&gt;リアクション・絵文字の力を侮るなかれ&lt;/h3&gt;
&lt;p&gt;Slackにはメッセージに絵文字をつけれるリアクション機能があります。&lt;br /&gt;
またテキストに絵文字をつけれます。&lt;/p&gt;

&lt;p&gt;この2つは簡単にできますが、効果は絶大です。&lt;br /&gt;
&lt;strong&gt;何故なら感情を付与できるため、読み手が勝手に作り上げる感情をケチらせます。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;これは見比べると一目瞭然です。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;「了解です」&lt;/li&gt;
  &lt;li&gt;「了解です🙆‍♀️」&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;無感情だったテキストに感情が読み取れるようになります。&lt;/p&gt;

&lt;h3 id=&quot;親切尊重尊敬を忘れない&quot;&gt;親切・尊重・尊敬を忘れない&lt;/h3&gt;
&lt;p&gt;テキストでも、本質は人と人のやりとりです。&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;相手に親切に接する&lt;/li&gt;
  &lt;li&gt;相手の立場を尊重する&lt;/li&gt;
  &lt;li&gt;相手を尊敬する&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;この3つは忘れてはいけません。&lt;br /&gt;
&lt;strong&gt;この3つを意識して接した文章や行動をするだけで相手も伝搬して返してくれます。&lt;/strong&gt;&lt;br /&gt;
結果的に互いに想いやり円滑なコミュニケーションができるようになります。&lt;/p&gt;

&lt;h3 id=&quot;文章構造は面倒くさがらず考える&quot;&gt;文章構造は面倒くさがらず考える&lt;/h3&gt;
&lt;p&gt;タイピングが遅い人や文章構造を構築が苦手な人、音声対話に依存してる人は、文章構造を考慮せずに送りつけます。&lt;br /&gt;
読み手は散らばった文章を拾い上げ、自身で文章構造を構築して意味を取り出す必要が生まれます。&lt;/p&gt;

&lt;p&gt;これは書き手の責任放棄で、読み手に丸投げです。&lt;br /&gt;
上司が部下に「こないだのあの案件をいい感じになる早で完了させて。なんかあれば言って」と伝えてるのと変わりません。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;苦手な人でもタイピングが遅くても情報にノイズや棘がないように面倒くさがらず向かい合いましょう。&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&quot;すぐ送る前に下書きする&quot;&gt;すぐ送る前に下書きする&lt;/h3&gt;
&lt;p&gt;書いた文章が良い文章となっているとは限りません。不慣れな人ならなおさらです。&lt;br /&gt;
急いでるときもありますが、テキストを送る前に下書きしてから整形して送りましょう。&lt;/p&gt;

&lt;p&gt;下書きの段階で伝えたいことが曖昧ではなく明確に含まれているか？誤字脱字はないか？&lt;br /&gt;
相手が何を返信すればいいか明確か？など書き手の責任は果たしましょう。&lt;/p&gt;

&lt;h3 id=&quot;自分で自分の文章を読み解く&quot;&gt;自分で自分の文章を読み解く&lt;/h3&gt;
&lt;p&gt;下書きの話に繋がりますが、送る前にまず出来上がった文章を自身で読んで読み解きやすいか確認しましょう。&lt;br /&gt;
情報が頭に入っている自分が読みにくいと感じたら、相手はほぼ読み解けません。&lt;/p&gt;

&lt;h2 id=&quot;文章改善小手先テクニック&quot;&gt;文章改善小手先テクニック&lt;/h2&gt;
&lt;p&gt;前項で伝えた内容は抽象レベルや意識レベルの話です。&lt;br /&gt;
もう少し具体的に落とした今日から役に立つ文章を改善する方法をまとめます。&lt;br /&gt;
Slackで円滑するために、悪い文章から良い文章になる添削一覧です。&lt;/p&gt;

&lt;h3 id=&quot;装飾は統一する&quot;&gt;装飾は統一する&lt;/h3&gt;
&lt;p&gt;Slackでは太字、斜字、コード、引用、プレコードの装飾を付与できます。&lt;br /&gt;
装飾なしのテキストで長文だと読みにくさが生まれます。&lt;/p&gt;

&lt;p&gt;テキストに付与する装飾にはルールを設けましょう。&lt;br /&gt;
1メッセージ毎でも構わないし、自身の中だけでもいいです。&lt;/p&gt;

&lt;h3 id=&quot;改行と段落で目の動きを狭める&quot;&gt;改行と段落で目の動きを狭める&lt;/h3&gt;
&lt;p&gt;横に長い文章は読みにくいです。行の移動時にどこまで読んだのか見落とすリスクも上がります。&lt;br /&gt;
目に負荷のかかる文章は読みにくいと思いましょう。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;文章の段落毎に改行を入れて、話題が見た目で分かるようにしましょう。&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&quot;内容は結論から&quot;&gt;内容は結論から&lt;/h3&gt;
&lt;p&gt;日本語は意識しないと重要な結論が最後に来ます。&lt;br /&gt;
読み手は意図が分からないまま読むのは苦痛です。&lt;/p&gt;

&lt;p&gt;なぜなら観点が分からないまま文章を読みますし、モヤモヤが晴れないためです。&lt;/p&gt;

&lt;p&gt;例えば次のような文章であれば、&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;最近導入したPRリマインダーですが、想定通り動かないケースがあります。
調査した結果リマインダーの仕組み上レビュワーがアサインされていないと通知されないようです。
レビュー後もレビュワー横の「Re-request review」ボタンも押す必要があります。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;最初の行に結論、依頼したいことを書きましょう&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;【周知】PRレビュワーはアサイン・再アサインしてください。
PRレビュワーは必ずアサインしてください。
レビュー後もレビュワー横の「Re-request review」ボタンで再アサインしてください。

理由↓
最近導入したPRリマインダーですが、想定通り動かないケースがあり、
調査した結果リマインダーの仕組み上レビュワーがアサインされていないと通知されないようです。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;絵文字やテキストで感情を入れる&quot;&gt;絵文字やテキストで感情を入れる&lt;/h3&gt;
&lt;p&gt;慣れないなら絵文字を入れましょう。&lt;br /&gt;
例えば指摘や依頼など、相手に負の感情を汲み取ってしまいそうな文章は、&lt;br /&gt;
絵文字を入れることで相手への感情齟齬を回避しましょう、&lt;/p&gt;

&lt;p&gt;絵文字でなくとも、テキストでも感情は入れられます。&lt;br /&gt;
例えば次のように、フランクな文章にするだけで怒られてる感を緩和できます。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;「○○をしてください」&lt;/li&gt;
  &lt;li&gt;「すみませんが、○○をしてくださいー」&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;テキストコミュニケーションは必須スキルと言える&quot;&gt;テキストコミュニケーションは必須スキルと言える&lt;/h2&gt;
&lt;p&gt;エンジニアだから技術スキルだけを磨けばよいものではありません。&lt;br /&gt;
エンジニアであれどチームとして動く限りコミュニケーションは発生します。&lt;br /&gt;
コミュニケーションが下手な人とは周りの人はやりにくさを感じます。&lt;/p&gt;

&lt;p&gt;この辛い経験が次回採用時はコミュニケーションが下手な人は採用を見送ろうと必須スキルが増えていくでしょう。&lt;br /&gt;
今はまだなんとかなっていてもリモートワークが増えていく限り、近い将来は避けては通れないスキルになると思います。&lt;/p&gt;</content><author><name></name></author><category term="notebook" /><category term="remote-work" /><summary type="html">5年近くフルリモートワークを経験して分かったことは、テキストコミュニケーションの改善は組織を大きく改善します。 リモートワークはテキストコミュニケーションが要です。</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://blog.mothule.com/assets/images/2021-01-21-notebook-remote-work-cool-text-communication/eyecatch.png" /><media:content medium="image" url="https://blog.mothule.com/assets/images/2021-01-21-notebook-remote-work-cool-text-communication/eyecatch.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Webアプリの自動テストのcapybaraやSeleniumなど用語を整理した</title><link href="https://blog.mothule.com/tools/selenium/tools-selenium-glossary" rel="alternate" type="text/html" title="Webアプリの自動テストのcapybaraやSeleniumなど用語を整理した" /><published>2021-01-14T00:00:00+09:00</published><updated>2021-01-15T02:53:19+09:00</updated><id>https://blog.mothule.com/tools/selenium/tools-selenium-glossary</id><content type="html" xml:base="https://blog.mothule.com/tools/selenium/tools-selenium-glossary">&lt;p&gt;SeleniumやWebDriverは、Webアプリのシステムテストの自動化に関する用語です。&lt;br /&gt;
これら用語は名前が似てたり関係性が曖昧で、ネット記事を見てもいまいちに腹落ちしません。&lt;br /&gt;
それゆえ、これらの用語の意味や関係性を整理しました。&lt;/p&gt;

&lt;h2 id=&quot;整理した用語一覧&quot;&gt;整理した用語一覧&lt;/h2&gt;
&lt;p&gt;今回整理した用語はSeleniumを使う上で、混乱の中心となる用語に絞ります。&lt;br /&gt;
選定基準は、私が調べながら分かりにくいと感じた用語です。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;capybara&lt;/li&gt;
  &lt;li&gt;WebKit&lt;/li&gt;
  &lt;li&gt;Selenium&lt;/li&gt;
  &lt;li&gt;WebDriver&lt;/li&gt;
  &lt;li&gt;ChromeDriver&lt;/li&gt;
  &lt;li&gt;Chrome用WebDriver&lt;/li&gt;
  &lt;li&gt;selenium_chrome&lt;/li&gt;
  &lt;li&gt;capybara-webkit&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;capybaraとはライブラリ名&quot;&gt;capybaraとはライブラリ名&lt;/h2&gt;
&lt;p&gt;capybaraはRubyのライブラリ(gem)の1つで、RackベースのWebアプリ用統合テストツールです。&lt;br /&gt;
Webサイト上のユーザー操作をシミュレートします。
&lt;a href=&quot;https://rubygems.org/gems/capybara&quot;&gt;capybara&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;webkitとはレンダリングエンジン&quot;&gt;WebKitとはレンダリングエンジン&lt;/h2&gt;
&lt;p&gt;WebKitはHTMLレンダリングエンジンの1つで、Safariのレンダリングエンジンとして使われてます。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;WebKitは、元々アップルのmacOSに搭載されるSafariのレンダリングエンジンとして、LinuxやBSDといった、Unix系用のレンダリングエンジンであるKHTMLをフォークして開発された。現在はその他の多くのプラットフォームに移植されている。Wikipediaより抜粋&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;seleniumとはテストプロジェクト&quot;&gt;Seleniumとはテストプロジェクト&lt;/h2&gt;
&lt;p&gt;SeleniumはWebアプリを自動テストするためのフレームワークまたはプロジェクトです。
「フレームワークまたはプロジェクト」と曖昧なのは、Seleniumの歴史によって用語の意味が変わってるためです。&lt;/p&gt;

&lt;p&gt;現在であれば、プロジェクトです。&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Selenium is an umbrella project encapsulating a variety of tools and libraries enabling web browser automation.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;SeleniumはWebブラウザの自動化に関する様々なツールやライブラリで構成されたプロジェクトです。&lt;br /&gt;
Selenium WebDriver, Selenium Grid, Selenium IDEなど複数ツールがある。&lt;/p&gt;

&lt;h2 id=&quot;webdriverとはコンポーネント&quot;&gt;WebDriverとはコンポーネント&lt;/h2&gt;
&lt;p&gt;WebDriverはSeleniumコンポーネントの1つで、ブラウザ操作用のAPI群とプロトコルです。&lt;br /&gt;
このプロトコルをブラウザで準拠させたものをDriverと呼ばれ、Seleniumとブラウザ間の通信を仲介します。&lt;br /&gt;
つまり、実行ブラウザ(Driver)が変わっても操作は変えずに実行できます。&lt;/p&gt;

&lt;p&gt;各ブラウザは特定のWebDriverの実装を持ってます。&lt;br /&gt;
例えば、ChromeならChrome用WebDriver（ChromeDriver）がそれにあたります。&lt;/p&gt;

&lt;h2 id=&quot;chromedriverとはwebdriverの1つ&quot;&gt;ChromeDriverとはWebDriverの1つ&lt;/h2&gt;
&lt;p&gt;ChromeDirverはWebDriverをChrome用に実装したDriverであり、ツール名です。&lt;/p&gt;

&lt;p&gt;ChromeDriverはPC向けChromeとAndroid向けChromeで利用できます。&lt;br /&gt;
OSもMac, Linux, Windows, ChromeOSに対応してます。&lt;/p&gt;

&lt;h2 id=&quot;selenium_chromeとは識別用の文字列&quot;&gt;selenium_chromeとは識別用の文字列&lt;/h2&gt;
&lt;p&gt;Capybaraのドライバー指定で、Chrome用WebDriver(ChromeDriver)を指定する文字列です。
下記コードのように使います。&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;no&quot;&gt;Capybara&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;configure&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;capybara_config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;capybara_config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;default_driver&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:selenium_chrome&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;capybara_config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;default_max_wait_time&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;capybara-webkitとはライブラリ名&quot;&gt;capybara-webkitとはライブラリ名&lt;/h2&gt;
&lt;p&gt;capybara-webkitはRubyのライブラリ(gem)の1つで、CapybaraのためのヘッドレスWebKit用WebDriverです。
&lt;a href=&quot;https://github.com/thoughtbot/capybara-webkit&quot;&gt;capybara-webkit&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;現在はQtWebKitが非推奨となってことで、アーカイブ状態となってます。&lt;br /&gt;
公式では、代わりにSeleniumかApparitionという別のドライバーを推薦してます。&lt;/p&gt;

&lt;h2 id=&quot;safari用のwebdriverは&quot;&gt;Safari用のWebDriverは？&lt;/h2&gt;
&lt;p&gt;あるようですが、ヘッドレスモードはないようです。&lt;a href=&quot;https://github.com/SeleniumHQ/selenium/issues/5985&quot;&gt;GitHub/selenium&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;またiOS13からiOS版Safariでも、WebDriverを正式サポートされました。&lt;a href=&quot;https://www.publickey1.jp/blog/19/ios_13safariwebdriverseleniumui.html&quot;&gt;URL&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;最も重要な用語の関係性を表す&quot;&gt;最も重要な用語の関係性を表す&lt;/h2&gt;
&lt;p&gt;Seleniumを知る上で重要な用語が、SeleniumとWebDriverそして、ChromeDriverです。&lt;br /&gt;
これらの関係性を文章にすると、&lt;br /&gt;
&lt;strong&gt;「SeleniumプロジェクトのWebDriverコンポーネントのプロトコルを採用したChromeウェブブラウザ用WebDriverは、ChromeDriverです」&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;ツリー構造だと次の構造になります。&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Selenium
    &lt;ul&gt;
      &lt;li&gt;WebDriver
        &lt;ul&gt;
          &lt;li&gt;ChromeDriver(=Chrome用WebDriver)&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="tools" /><category term="selenium" /><category term="capybara" /><category term="webkit" /><category term="web_driver" /><category term="chrome_driver" /><summary type="html">SeleniumやWebDriverは、Webアプリのシステムテストの自動化に関する用語です。 これら用語は名前が似てたり関係性が曖昧で、ネット記事を見てもいまいちに腹落ちしません。 それゆえ、これらの用語の意味や関係性を整理しました。</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://blog.mothule.com/assets/images/2021-01-14-tools-selenium-glossary/eyecatch.png" /><media:content medium="image" url="https://blog.mothule.com/assets/images/2021-01-14-tools-selenium-glossary/eyecatch.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Railsのアセットパイプラインの使い方を最短理解する</title><link href="https://blog.mothule.com/ruby/rails/ruby-rails-assets-pipeline-use" rel="alternate" type="text/html" title="Railsのアセットパイプラインの使い方を最短理解する" /><published>2021-01-06T00:00:00+09:00</published><updated>2021-01-20T19:53:23+09:00</updated><id>https://blog.mothule.com/ruby/rails/ruby-rails-assets-pipeline-use</id><content type="html" xml:base="https://blog.mothule.com/ruby/rails/ruby-rails-assets-pipeline-use">&lt;p&gt;Railsのアセットパイプラインの理解に時間を費やしたくないけど、理解しないといけないケースが多いです。&lt;br /&gt;
アセットパイプラインの使い方をなるべく端的にまとめました。&lt;/p&gt;

&lt;h2 id=&quot;アセットパイプラインasset-pipelineの概要&quot;&gt;アセットパイプライン(Asset Pipeline)の概要&lt;/h2&gt;
&lt;p&gt;アセットパイプラインの概要は「&lt;span&gt;&lt;a href=&quot;/ruby/rails/ruby-rails-assets-pipeline-brief&quot;&gt;Railsのアセットパイプラインの概要を最短理解する&lt;/a&gt;&lt;/span&gt;
」にまとめてあります。&lt;/p&gt;

&lt;h2 id=&quot;アセットパイプラインasset-pipelineとは&quot;&gt;アセットパイプライン(Asset Pipeline)とは&lt;/h2&gt;
&lt;p&gt;アセットパイプラインを後述する用語を使って説明します。&lt;/p&gt;

&lt;p&gt;アセットパイプラインとは、マニフェスト毎に集めたアセット群から1つのマスターファイルを作成するフレームワークです。&lt;br /&gt;
マニフェストファイルにはアセットの一覧となるマニフェストが書かれており、マニフェストの表現にディレクティブ（命令）を使います。&lt;br /&gt;
マニフェストファイルが2個あれば、マスターファイルは2つ作成されます。&lt;/p&gt;

&lt;h3 id=&quot;アセットとは&quot;&gt;アセットとは&lt;/h3&gt;
&lt;p&gt;アセットとはスタイルシートやJavaScriptなどのリソースの指します。&lt;/p&gt;

&lt;h3 id=&quot;パイプラインとは&quot;&gt;パイプラインとは&lt;/h3&gt;
&lt;p&gt;アセットを次々に一連の処理が施される仕組みです。&lt;/p&gt;

&lt;h3 id=&quot;マニフェストファイルとは&quot;&gt;マニフェストファイルとは&lt;/h3&gt;
&lt;p&gt;マニフェストとはロードするアセットの集まりであり、&lt;br /&gt;
マニフェストファイルとはそのマニフェストが書かれたファイルです。&lt;/p&gt;

&lt;h3 id=&quot;ディレクティブとは&quot;&gt;ディレクティブとは&lt;/h3&gt;
&lt;p&gt;マニフェストを実現するためのファイルロードに関する命令です。&lt;br /&gt;
ディレクティブを駆使してマニフェスト（アセットのリスト）を表現します。&lt;/p&gt;

&lt;h2 id=&quot;アセットパイプラインの全体フローを知る&quot;&gt;アセットパイプラインの全体フローを知る&lt;/h2&gt;
&lt;p&gt;例えば、アセットパイプラインを使って複数のスタイルシートから1つのスタイルシートがロードされるまでの流れです。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;application.scss&lt;/code&gt;内のディレクティブに沿ってファイルをロード
    &lt;ul&gt;
      &lt;li&gt;ロード対象の検索先は&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;app/assets/stylesheets&lt;/code&gt;です。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;ロードしたファイルをコンパイル&lt;/li&gt;
  &lt;li&gt;マスターファイルとなる&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;application.css&lt;/code&gt;にコンパイル済みファイルを結合&lt;/li&gt;
  &lt;li&gt;マスターファイルを&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;application.html.haml&lt;/code&gt;からロードする&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;本番環境の場合はコンパイル処理は事前に実施(プリコンパイル)され、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;public/assets&lt;/code&gt;フォルダに配置されます。&lt;/p&gt;

&lt;h3 id=&quot;アセットパイプライン処理の対象フォルダ&quot;&gt;アセットパイプライン処理の対象フォルダ&lt;/h3&gt;
&lt;p&gt;前述したロード対象の検索先の他にもいくつか検索候補があります。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;app/assets&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lib/assets&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;vendor/assets&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;このなかの&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;app/assets&lt;/code&gt;は、Railsアプリを作成時に自動で作成されます。&lt;/p&gt;

&lt;h2 id=&quot;アセットパイプラインasset-pipelineを使う&quot;&gt;アセットパイプライン(Asset Pipeline)を使う&lt;/h2&gt;

&lt;p&gt;では実際にアセットパイプラインを使ってみます。&lt;br /&gt;
なお、説明に使うコードはerbではなくhamlを使います。&lt;/p&gt;

&lt;h3 id=&quot;仕組みはデフォルトで用意されている&quot;&gt;仕組みはデフォルトで用意されている&lt;/h3&gt;
&lt;p&gt;実はRailsアプリを作成すれば、既にアセットパイプラインを利用できる環境は整っています。&lt;br /&gt;
そのため、各Controllerのスタイルシートを編集してるだけで、それらのスタイルシートはパイプラインの処理を施されマスターファイルが作成されます。&lt;/p&gt;

&lt;p&gt;なぜなら、デフォルトファイル&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;application.scss&lt;/code&gt;は自身の位置するフォルダ配下のアセットを対象としたマニフェストが書かれてるからです。&lt;/p&gt;

&lt;p&gt;そのため、Controllerを作成すればスタイルシートは&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;app/assets/stylesheets&lt;/code&gt;フォルダ配下に作成されますが、マニフェストの対象となっているため、自動でマスターファイル(&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;application.css&lt;/code&gt;)に結合されます。&lt;/p&gt;

&lt;h3 id=&quot;マスターファイルをロードする&quot;&gt;マスターファイルをロードする&lt;/h3&gt;
&lt;p&gt;作成されたマスターファイルのロードは、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;stylesheet_link_tag&lt;/code&gt;を使用します。&lt;/p&gt;

&lt;p&gt;なお、マスターファイル&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;application.css&lt;/code&gt;は、デフォルトのレイアウトファイル&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;application.html.haml&lt;/code&gt;でロードされています。
次のコードは&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;application.html.haml&lt;/code&gt;を一部抜粋したものです。&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;!!!
%html
  %head
    %meta{:content =&amp;gt; &quot;text/html; charset=UTF-8&quot;, &quot;http-equiv&quot; =&amp;gt; &quot;Content-Type&quot;}/
    %meta{name: 'viewport', content: 'width=device-width,initial-scale=1'}
    %title AnyTitle
    = csrf_meta_tags
    = csp_meta_tag
    = stylesheet_link_tag 'application', media: 'all', 'data-turbolinks-track': 'reload'
    = javascript_pack_tag 'application', 'data-turbolinks-track': 'reload'
    = stylesheet_pack_tag 'application', 'data-turbolinks-track': 'reload'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;'data-turbolinks-track': 'reload'&lt;/code&gt;はページ遷移時にリソースを必要に応じてリロードします。&lt;/p&gt;

&lt;h2 id=&quot;ディレクティブについて&quot;&gt;ディレクティブについて&lt;/h2&gt;
&lt;p&gt;マニフェストファイル(&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;application.scss&lt;/code&gt;)にはマニフェスト表現のためにディレクティブが書かれてます。
具体的には、次のようなコメント上で特殊な構文が使われます。&lt;/p&gt;

&lt;div class=&quot;language-scss highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;*=&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;require_tree&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;*=&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;require_self&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;require_tree&quot;&gt;require_tree&lt;/h3&gt;
&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;require_tree&lt;/code&gt;ディレクティブは指定した相対パスのディレクトリ以下全てのアセットを対象にします。
子ディレクトリにも再帰的に動きます。&lt;/p&gt;

&lt;p&gt;特定のディレクトリだけ指定したい場合は、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;require_directory&lt;/code&gt;ディレクティブを使います。&lt;/p&gt;

&lt;h3 id=&quot;require_self&quot;&gt;require_self&lt;/h3&gt;
&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;require_self&lt;/code&gt;は自身のCSSを使います。&lt;/p&gt;

&lt;h3 id=&quot;ディレクティブ順番が結合順&quot;&gt;ディレクティブ順番が結合順&lt;/h3&gt;
&lt;p&gt;ディレクティブの順番によってマスターファイルに結合される順番が変わります。
順番によってはcssの設定が上書きされたりするので、注意が必要です。&lt;/p&gt;

&lt;h2 id=&quot;アセットのコンパイルは環境依存&quot;&gt;アセットのコンパイルは環境依存&lt;/h2&gt;
&lt;p&gt;アセットパイプラインの処理には、ミニファイや結合などのファイル操作があります。&lt;br /&gt;
このファイル操作は開発環境では、ファイルのロード時に動的でコンパイルされます。&lt;br /&gt;
これは開発中にアセットが変更されても、自動でコンパイルするので開発しやすいです。&lt;/p&gt;

&lt;h3 id=&quot;本番では自動コンパイル無効&quot;&gt;本番では自動コンパイル無効&lt;/h3&gt;
&lt;p&gt;しかし、本番環境ではアセットは頻繁に変わることはないので、サーバーが動的にコンパイルするのは無駄です。&lt;br /&gt;
そのため、本番環境ではコンパイルはOFFにされており、事前にアセットのコンパイル(プリコンパイル)が必要です。&lt;/p&gt;

&lt;h3 id=&quot;自動コンパイルの設定確認&quot;&gt;自動コンパイルの設定確認&lt;/h3&gt;
&lt;p&gt;なお、アセットの動的コンパイルは次のコードで設定します。&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;assets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;compile&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;本番環境ではこの値がfalseになっています。&lt;/p&gt;

&lt;h2 id=&quot;本番用にプリコンパイルする&quot;&gt;本番用にプリコンパイルする&lt;/h2&gt;
&lt;p&gt;本番環境用にマスターファイルを作成するには、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rails assets:precompile&lt;/code&gt;タスクを使います。&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ RAILS_ENV&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;production bin/rails assets:precompile
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;プリコンパイルされたファイルは&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;public/assets&lt;/code&gt;に展開され、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;public&lt;/code&gt;ディレクトリ同様に静的ファイルとして扱われます。&lt;/p&gt;

&lt;h3 id=&quot;ファイルが見つからないとエラーが起きる&quot;&gt;ファイルが見つからないとエラーが起きる&lt;/h3&gt;
&lt;p&gt;本番環境でプリコンパイル済みファイルが見つからないと、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Sprockets::Helpers::RailsHelper::AssetPaths::AssetNotPrecompiledError&lt;/code&gt;が発生します。&lt;/p&gt;

&lt;h3 id=&quot;フィンガープリントでキャッシュ制御&quot;&gt;フィンガープリントでキャッシュ制御&lt;/h3&gt;
&lt;p&gt;キャッシュが有効な場合、マスターファイルにはフィンガープリントでキャッシュ制御が必要です。&lt;br /&gt;
なぜなら、キャッシュはパスで管理されます。&lt;br /&gt;
アセットに変更が加わってもマスターファイルのパスは変わらないので、キャッシュ有効と判断されます。&lt;/p&gt;

&lt;p&gt;そのため、プリコンパイルするたびにファイル名にフィンガープリントが付与されます。&lt;/p&gt;

&lt;h2 id=&quot;マニフェストを増やす&quot;&gt;マニフェストを増やす&lt;/h2&gt;
&lt;p&gt;デフォルトではマニフェストファイルは&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;application.scss&lt;/code&gt;や&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;application.js&lt;/code&gt;です。&lt;/p&gt;

&lt;p&gt;例えばRailsアプリに管理画面を追加したく、管理画面用Bootstrapフレームワークを使いたいなど、レイアウトが大きく変えたい場合などはマニフェストを分けたほうが使いもしないコードの混在を回避できます。&lt;/p&gt;

&lt;p&gt;別のマニフェストを追加したい場合は、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;config/initializers/assets.rb&lt;/code&gt;内で&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Rails.application.config.assets.precompile&lt;/code&gt;を使用します。&lt;br /&gt;
管理画面用のマニフェストを&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;admin&lt;/code&gt;にしたい場合は、コードは次のようになります。&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;no&quot;&gt;Rails&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;application&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;assets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;precompile&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;%w( admin.js admin.css )&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;アセットパイプラインは未だに健在する&quot;&gt;アセットパイプラインは未だに健在する&lt;/h2&gt;
&lt;p&gt;アセットパイプラインはモダンな環境では使われないかもしれません。&lt;br /&gt;
しかし、世の中で動いているサービスの比率で言うとまだまだアセットパイプラインは負債扱い・現役問わず、まだまだ使用されています。&lt;br /&gt;
アセットパイプラインを使った環境で開発したり、使わない環境へリニューアルするにしてもアセットパイプラインの知識がまだまだ必要なはずです。&lt;/p&gt;</content><author><name></name></author><category term="ruby" /><category term="rails" /><category term="asset-pipeline" /><summary type="html">Railsのアセットパイプラインの理解に時間を費やしたくないけど、理解しないといけないケースが多いです。 アセットパイプラインの使い方をなるべく端的にまとめました。</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://blog.mothule.com/assets/images/2021-01-06-ruby-rails-assets-pipeline-use/eyecatch.png" /><media:content medium="image" url="https://blog.mothule.com/assets/images/2021-01-06-ruby-rails-assets-pipeline-use/eyecatch.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Railsのアセットパイプラインの概要を最短理解する</title><link href="https://blog.mothule.com/ruby/rails/ruby-rails-assets-pipeline-brief" rel="alternate" type="text/html" title="Railsのアセットパイプラインの概要を最短理解する" /><published>2021-01-05T00:00:00+09:00</published><updated>2021-01-20T19:53:23+09:00</updated><id>https://blog.mothule.com/ruby/rails/ruby-rails-assets-pipeline-brief</id><content type="html" xml:base="https://blog.mothule.com/ruby/rails/ruby-rails-assets-pipeline-brief">&lt;p&gt;Railsのアセットパイプラインは、最先端ではないですが、現状の開発において必要な仕組みです。&lt;br /&gt;
最近ではフロントエンドと分離する傾向がありますが、それでもアセットパイプラインを使ったサービスはたくさんあります。&lt;br /&gt;
今回、手っ取り早く全体像を理解するためにまとめました。&lt;/p&gt;

&lt;h2 id=&quot;アセットパイプラインasset-pipelineとは&quot;&gt;アセットパイプライン(Asset Pipeline)とは&lt;/h2&gt;
&lt;p&gt;JavaScriptやCSSを最小化や圧縮して連結するフレームワークです。&lt;br /&gt;
CofeeScriptやSass(SCSS)の変換もサポートします。&lt;br /&gt;
アセットパイプラインの実体はSprocketsミドルウェアです。&lt;/p&gt;

&lt;p&gt;特徴としては下記です。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;ファイルのミニファイ&lt;/li&gt;
  &lt;li&gt;ファイルの結合&lt;/li&gt;
  &lt;li&gt;ファイルの変換&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;これらをデプロイ前に事前に処理（プリコンパイル）します。&lt;/p&gt;

&lt;h2 id=&quot;特徴1-ファイルの最小化ミニファイ&quot;&gt;特徴1. ファイルの最小化(ミニファイ)&lt;/h2&gt;
&lt;p&gt;最小化とは、スペースや改行を詰めてサイズを減らすことです。&lt;br /&gt;
最小化はミニファイ(minify)とも呼びます。&lt;/p&gt;

&lt;p&gt;ファイルを最小化することで、3つメリットがあります。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;通信量の節約&lt;/li&gt;
  &lt;li&gt;難読化によるセキュリティ向上&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;通信量を節約できる&quot;&gt;通信量を節約できる&lt;/h3&gt;
&lt;p&gt;ファイルにはスペースや改行などが含まれます。&lt;br /&gt;
これらは人には可読性のために必要です。&lt;br /&gt;
でもWebブラウザのファイル解析には、ほとんどが不要です。&lt;br /&gt;
不要なスペースや改行を無くすことで、ファイルサイズが減らせます。&lt;/p&gt;

&lt;p&gt;ファイルの縮小は通信量削減に繋がります。&lt;br /&gt;
その分Webページ表示に必要なファイル取得を短縮できます。&lt;br /&gt;
結果Webページの高速化に繋がります。&lt;/p&gt;

&lt;h3 id=&quot;難読化によるセキュリティ向上&quot;&gt;難読化によるセキュリティ向上&lt;/h3&gt;
&lt;p&gt;前項でも説明しましたが、スペースや改行などは可読性にとって重要です。&lt;br /&gt;
またJavaScript難読化ツールによっては、変数名を短くします。&lt;br /&gt;
短くなることはファイルサイズ削減にもなります。&lt;br /&gt;
そして変数が持つ意味も取り除けます。&lt;/p&gt;

&lt;p&gt;これらがなくなることで、人はコードを非常に読み解きにくくなります。&lt;br /&gt;
読み解きにくくなれば悪意な行動ができなくなります。&lt;br /&gt;
要はセキュリティが向上します。&lt;/p&gt;

&lt;h2 id=&quot;特徴2-複数ファイルの結合&quot;&gt;特徴2. 複数ファイルの結合&lt;/h2&gt;
&lt;p&gt;例えば、あるページに5ファイル必要であれば、&lt;br /&gt;
そのままの場合は、5回に渡りファイルを取得します。&lt;br /&gt;
当然5回分はサーバに負担はかかり、通信帯域も埋めます。&lt;/p&gt;

&lt;p&gt;これを5ファイルを1つに結合してしまえば、その分パフォーマンスは向上します。&lt;/p&gt;

&lt;h2 id=&quot;特徴3-coffeescriptやsassのトランスパイル&quot;&gt;特徴3. CoffeeScriptやSassのトランスパイル&lt;/h2&gt;
&lt;p&gt;トランスパイルとは、ある開発言語から別の開発言語を生成するコンパイル処理です。&lt;/p&gt;

&lt;p&gt;例えば、&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;CoffeeScriptからJavaScriptへ変換&lt;/li&gt;
  &lt;li&gt;Sass(SCSS)からCSSへ変換&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;などです。&lt;/p&gt;

&lt;p&gt;WebブラウザがサポートしてるJavaScriptやCSSなどを直接記述するよりも、&lt;br /&gt;
TypeScriptやSCSSを使ったほうが生産的です。&lt;br /&gt;
アセットパイプラインはその変換作業をサポートします。&lt;/p&gt;

&lt;p&gt;例えばSass(SCSS)であれば、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sass-rails gem&lt;/code&gt;が使われます。&lt;/p&gt;

&lt;h2 id=&quot;アセットパイプラインの使い方&quot;&gt;アセットパイプラインの使い方&lt;/h2&gt;

&lt;p&gt;アセットパイプラインは、パフォーマンス目的のためにファイル(アセット)をミニファイやファイル結合、トランスパイルするフレームワークです。&lt;/p&gt;

&lt;p&gt;実際の使い方は、&lt;span&gt;&lt;a href=&quot;/ruby/rails/ruby-rails-assets-pipeline-use&quot;&gt;Railsのアセットパイプラインの使い方を最短理解する&lt;/a&gt;&lt;/span&gt;
にまとめてあります。&lt;/p&gt;</content><author><name></name></author><category term="ruby" /><category term="rails" /><category term="asset-pipeline" /><summary type="html">Railsのアセットパイプラインは、最先端ではないですが、現状の開発において必要な仕組みです。 最近ではフロントエンドと分離する傾向がありますが、それでもアセットパイプラインを使ったサービスはたくさんあります。 今回、手っ取り早く全体像を理解するためにまとめました。</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://blog.mothule.com/assets/images/2021-01-05-ruby-rails-assets-pipeline-brief/eyecatch.png" /><media:content medium="image" url="https://blog.mothule.com/assets/images/2021-01-05-ruby-rails-assets-pipeline-brief/eyecatch.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">公開鍵認証によるSSHで使う鍵管理をssh-agentで楽する</title><link href="https://blog.mothule.com/tools/ssh/tools-ssh-ssh-agent-usage" rel="alternate" type="text/html" title="公開鍵認証によるSSHで使う鍵管理をssh-agentで楽する" /><published>2020-08-18T00:00:00+09:00</published><updated>2020-08-21T00:09:15+09:00</updated><id>https://blog.mothule.com/tools/ssh/tools-ssh-ssh-agent-usage</id><content type="html" xml:base="https://blog.mothule.com/tools/ssh/tools-ssh-ssh-agent-usage">&lt;p&gt;ssh接続で使う公開鍵のパスフレーズ入力は面倒ですが、ssh-agentでパスフレーズ入力を代理してくれます。&lt;br /&gt;
また、複数サーバを横断する場合に鍵の管理に困りますが、ssh-agentで秘密鍵をサーバに配置せずに済みます。&lt;/p&gt;

&lt;h2 id=&quot;ssh-agentとは&quot;&gt;ssh-agentとは？&lt;/h2&gt;
&lt;p&gt;ssh-agentは認証代理プログラムです。&lt;br /&gt;
RSAやDSA、ECDSAなど公開鍵認証に使う秘密鍵をメモリ上に保持します。&lt;br /&gt;
エージェントプロセスが生きている間は、sshログイン時のパスフレーズ入力を代理します。&lt;/p&gt;

&lt;h2 id=&quot;ssh-agentの最大のメリット&quot;&gt;ssh-agentの最大のメリット&lt;/h2&gt;
&lt;p&gt;ssh-agentはパスフレーズを代理してくれることですが、最もその効果を発揮するのは、&lt;br /&gt;
複数サーバーを跨いだ認証で、サーバ毎に秘密鍵の配置が不要になります。&lt;br /&gt;
インターネット上に秘密鍵を配置するリスクを負わずに、ローカル上で秘密鍵を保持しててもエージェントが認証を代理してくれます。&lt;br /&gt;
ssh-agentを使わない場合は、踏み台サーバにサーバBへの秘密鍵を置くなどリスクまたは手間が生じます。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/images/2020-08-18-tools-ssh-ssh-agent-usage/ssh-agent-multi-server.png&quot;&gt;&lt;img src=&quot;/assets/images/2020-08-18-tools-ssh-ssh-agent-usage/ssh-agent-multi-server.png&quot; width=&quot;100%&quot; alt=&quot;複数サーバでのssh-agent&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;ssh-agentを使うことで、認証データを他PCに保存不要で、パスフレーズがネットワークに乗りません。&lt;br /&gt;
秘密鍵を必要とする操作をエージェントによって実行されるため、&lt;br /&gt;
秘密鍵はエージェントを使うクライアントに公開されません。&lt;/p&gt;

&lt;h2 id=&quot;ssh-agentの起動&quot;&gt;ssh-agentの起動&lt;/h2&gt;

&lt;p&gt;ssh-agentを起動するには&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ssh-agent&lt;/code&gt;コマンドを使います。&lt;br /&gt;
実行するとシェルスクリプトが表示されます。&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ssh-agent
&lt;span class=&quot;nv&quot;&gt;SSH_AUTH_SOCK&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/var/folders/45/7f_wlrcs3xv6rmstcz2l5_000000gn/T//ssh-2tCfpXRm9s6R/agent.12199&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;SSH_AUTH_SOCK&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;SSH_AGENT_PID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;12200&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;SSH_AGENT_PID&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo &lt;/span&gt;Agent pid 12200&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;このスクリプトを実行して環境変数を登録する必要があります。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;SSH_AUTH_SOCK環境変数: unixドメインソケットの名前が入る&lt;/li&gt;
  &lt;li&gt;SSH_AGENT_PID環境変数: エージェントのプロセスIDが入る&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;なので、通常は起動には、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;eval&lt;/code&gt;コマンドを使い、出力をそのまま実行します。&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;eval&lt;/span&gt; &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;ssh-agent&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;
Agent pid 12200
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;ssh-agentの起動オプション一覧&quot;&gt;ssh-agentの起動オプション一覧&lt;/h3&gt;

&lt;p&gt;エージェントの起動には様々なオプションを渡せます。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ssh-agent [-c | -s] [-Dd] [-a bind_address] [-E fingerprint_hash] [-P pkcs11_whitelist] [-t life] [command [arg ...]]&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ssh-agent&lt;/code&gt;コマンドで使えるオプションを説明します。&lt;/p&gt;

&lt;h4 id=&quot;-a-bind_address-unixドメインソケットのパス指定&quot;&gt;-a bind_address: UNIXドメインソケットのパス指定&lt;/h4&gt;
&lt;p&gt;ssh-agentを指定したUNIXドメインソケットにバインドします。&lt;br /&gt;
デフォルトは&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$TMPDIR/ssh-XXXXXXXXXX/agent.&amp;lt;ppid&amp;gt;&lt;/code&gt;です。&lt;/p&gt;

&lt;h4 id=&quot;-c-cシェルでログイン&quot;&gt;-c: Cシェルでログイン&lt;/h4&gt;
&lt;p&gt;起動時に表示するシェルをCシェルコマンドで出力します。
SHELL環境変数の値がcsh互換性の場合は、この出力がデフォルトです。&lt;/p&gt;

&lt;h4 id=&quot;-s-bourneシェルでログイン&quot;&gt;-s: Bourneシェルでログイン&lt;/h4&gt;
&lt;p&gt;起動時に表示するシェルをBourneシェル(所謂sh)コマンドで出力します。
SHELL環境変数の値がsh互換性の場合は、この出力がデフォルトです。&lt;/p&gt;

&lt;h4 id=&quot;-d-フォアグラウンドで起動&quot;&gt;-D: フォアグラウンドで起動&lt;/h4&gt;
&lt;p&gt;フォアグラウンドモードで起動します。&lt;br /&gt;
このオプションを使うとssh-agentはforkを使わなくなります。&lt;/p&gt;

&lt;h4 id=&quot;-d-デバッグモードで起動&quot;&gt;-d: デバッグモードで起動&lt;/h4&gt;
&lt;p&gt;デバッグモードで起動します。&lt;br /&gt;
このオプションを使うとssh-agentはforkを使わず、デバッグ情報を標準エラーに出力します。&lt;/p&gt;

&lt;h4 id=&quot;-e-fingerprint_hash-フィンガープリントのハッシュ関数を指定&quot;&gt;-E fingerprint_hash: フィンガープリントのハッシュ関数を指定&lt;/h4&gt;
&lt;p&gt;キーのフィンガープリントを使うハッシュ関数を指定します。&lt;br /&gt;
オプションは、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;md5&lt;/code&gt;、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sha256&lt;/code&gt;で、デフォルトは&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sha256&lt;/code&gt;です。&lt;/p&gt;

&lt;h4 id=&quot;-p-pkcs11_whitelist-pkcs11共有ライブラリのパス指定&quot;&gt;-P pkcs11_whitelist: PKCS#11共有ライブラリのパス指定&lt;/h4&gt;
&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ss-add&lt;/code&gt;に&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-s&lt;/code&gt;オプションを使って追加できるPKCS#11共有ライブラリの受け入れ可能なパスパターンリストを指定する。&lt;br /&gt;
デフォルトは&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/usr/lib/*&lt;/code&gt;、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/usr/local/lib/*&lt;/code&gt;からPKCS#11ライブラリをロードします。&lt;/p&gt;

&lt;p&gt;渡されたホワイトリストに一致しないPKCS#11ライブラリは拒否します。&lt;/p&gt;

&lt;h4 id=&quot;-t-life-追加した鍵の保持寿命設定&quot;&gt;-t life: 追加した鍵の保持寿命設定&lt;/h4&gt;
&lt;p&gt;エージェントに追加されるIDの最大存続時間のデフォルト値を設定します。&lt;br /&gt;
存続時間は秒単位やsshd_configで指定された時間形式で指定します。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ssh-add&lt;/code&gt;でIDに指定された有効期限は、この値を上書きします。&lt;br /&gt;
このオプションがない場合の最大存続時間は無制限です。&lt;/p&gt;

&lt;p&gt;保持寿命を設定することで、プロセスが起動し続けてても寿命過ぎるとエージェントから削除されるので、セキュリティ制御ができるようになります。&lt;/p&gt;

&lt;h2 id=&quot;ssh-agentの終了&quot;&gt;ssh-agentの終了&lt;/h2&gt;

&lt;p&gt;エージェントを終了するには、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ssh-agent&lt;/code&gt;に&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-k&lt;/code&gt;オプションを渡します。&lt;br /&gt;
現在のエージェントを強制終了します。&lt;br /&gt;
終了する対象エージェントは環境変数&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SSH_AGENT_PID&lt;/code&gt;のPIDを終了します。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ssh-agent [-c | -s] -k&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-c&lt;/code&gt;と&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-s&lt;/code&gt;は起動時に渡したのであれば同じように渡します。&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ssh-agent &lt;span class=&quot;nt&quot;&gt;-k&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;unset &lt;/span&gt;SSH_AUTH_SOCK&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;unset &lt;/span&gt;SSH_AGENT_PID&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo &lt;/span&gt;Agent pid 12200 killed&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;終了処理も起動と同じでシェルスクリプトが表示されるので、終了時は&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;eval&lt;/code&gt;コマンドで囲います。&lt;/p&gt;

&lt;h3 id=&quot;指定のエージェントを終了&quot;&gt;指定のエージェントを終了&lt;/h3&gt;
&lt;p&gt;起動時に環境変数&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SSH_AGENT_PID&lt;/code&gt;がセットされてるので、&lt;br /&gt;
通常は問題になりませんが、起動時に環境変数が未登録だと、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SSH_AGENT_PID not set, cannot kill agent&lt;/code&gt;が表示されます。&lt;br /&gt;
つまり、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SSH_AGENT_PID&lt;/code&gt;に終了したいエージェントのPIDをセットすることで、指定エージェントを終了できます。&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ps aux | &lt;span class=&quot;nb&quot;&gt;grep &lt;/span&gt;ssh-agent
mothule          28671   0.0  0.0  4334652    612 s002  U+    4:33AM   0:00.00 &lt;span class=&quot;nb&quot;&gt;grep &lt;/span&gt;ssh-agent
mothule          27257   0.0  0.0  4300640    428   ??  Ss    4:33AM   0:00.00 ssh-agent
mothule          26972   0.0  0.0  4289376    428   ??  Ss    4:33AM   0:00.00 ssh-agent

&lt;span class=&quot;nv&quot;&gt;$ SSH_AGENT_PID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;27257 ssh-agent &lt;span class=&quot;nt&quot;&gt;-k&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;unset &lt;/span&gt;SSH_AUTH_SOCK&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;unset &lt;/span&gt;SSH_AGENT_PID&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo &lt;/span&gt;Agent pid 27257 killed&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ps aux | &lt;span class=&quot;nb&quot;&gt;grep &lt;/span&gt;ssh-agent
mothule          28703   0.0  0.0  4268300    704 s002  S+    4:35AM   0:00.00 &lt;span class=&quot;nb&quot;&gt;grep &lt;/span&gt;ssh-agent
mothule          26972   0.0  0.0  4289376    428   ??  Ss    4:33AM   0:00.00 ssh-agent
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;ssh-agentに鍵追加&quot;&gt;ssh-agentに鍵追加&lt;/h2&gt;
&lt;p&gt;当然ながらssh-agentの起動直後は秘密鍵がありません。&lt;br /&gt;
鍵の追加は、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.ssh/config&lt;/code&gt;の&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AddKeysToAgent&lt;/code&gt;か&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ssh-add&lt;/code&gt;で追加していきます。
ややこしいですが、削除や確認にも&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ssh-add&lt;/code&gt;を使います。&lt;/p&gt;

&lt;h3 id=&quot;addkeystoagentで登録する&quot;&gt;AddKeysToAgentで登録する&lt;/h3&gt;
&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AddKeysToAgent&lt;/code&gt;は&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.ssh/config&lt;/code&gt;で使うオプションです。&lt;br /&gt;
ホスト毎に指定できて、指定されてることで&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ssh-agent&lt;/code&gt;に秘密鍵の追加有無を設定できます。&lt;/p&gt;

&lt;h4 id=&quot;addkeystoagent未指定&quot;&gt;AddKeysToAgent未指定&lt;/h4&gt;
&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AddKeysToAgent&lt;/code&gt;未指定の&lt;em&gt;~/.ssh/config&lt;/em&gt;です。&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Host github
  HostName github.com
  IdentityFile ~/.ssh/github
  User git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AddKeysToAgent&lt;/code&gt;がないと、パスフレーズを求められます。&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ssh github
Enter passphrase &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;key &lt;span class=&quot;s1&quot;&gt;'/Users/mothule/.ssh/github'&lt;/span&gt;:
PTY allocation request failed on channel 0
Hi mothule! You have successfully authenticated, but GitHub does not provide shell access.
Connection to github.com closed.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;addkeystoagent指定&quot;&gt;AddKeysToAgent指定&lt;/h4&gt;
&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ssh-agent&lt;/code&gt;への鍵登録を許可するには、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AddKeysToAgent&lt;/code&gt;で&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;yes&lt;/code&gt;が指定します。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AddKeysToAgent&lt;/code&gt;が指定された&lt;em&gt;~/.ssh/config&lt;/em&gt;です。&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Host github
  HostName github.com
  IdentityFile ~/.ssh/github
  User git
  AddKeysToAgent yes
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AddKeysToAgent&lt;/code&gt;があると、パスフレーズは求められません。&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ssh github
PTY allocation request failed on channel 0
Hi mothule! You have successfully authenticated, but GitHub does not provide shell access.
Connection to github.com closed.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;もし指定鍵がssh-agentから見つからない場合は、パスフレーズをユーザーから求めた後に自動でssh-agentに登録します。&lt;/p&gt;

&lt;h3 id=&quot;ssh-addでキー追加する&quot;&gt;ssh-addでキー追加する&lt;/h3&gt;
&lt;p&gt;ssh-addは認証エージェント(ssh-agent)に秘密鍵IDを追加するプログラムです。&lt;br /&gt;
そのため、ssh-addを使うには、ssh-agentが実行されていて、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SSH_AUTH_SOCK&lt;/code&gt;環境変数にエージェントへのソケット名が含まれてる必要があります。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ssh-add 秘密鍵パス&lt;/code&gt;で秘密鍵を追加します。&lt;br /&gt;
引数なしで実行すると、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;~/.ssh/id_rsa&lt;/code&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;~/.ssh/id_dsa&lt;/code&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;~/.ssh/id_ecdsa&lt;/code&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;~/.ssh/id_ed25519&lt;/code&gt;の秘密鍵を追加します。&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ssh-add .ssh/github
Enter passphrase &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; .ssh/github:
Identity added: .ssh/github &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;mothule@mothule.local&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ssh-add &lt;span class=&quot;nt&quot;&gt;-l&lt;/span&gt;
3072 SHA256:Ik22naSN6JXh0HGRjifWkBDERYUy8Td2dvDYUt3wGpE mothule@mothule.local &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;RSA&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ssh github
PTY allocation request failed on channel 0
Hi mothule! You have successfully authenticated, but GitHub does not provide shell access.
Connection to github.com closed.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;ssh-agentの登録済み鍵の確認&quot;&gt;ssh-agentの登録済み鍵の確認&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ssh-add -l&lt;/code&gt;で登録済み鍵をフィンガープリントで一覧表示します。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ssh-add -L&lt;/code&gt;で登録済み鍵の公開鍵を一覧表示します。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;ssh-agentの登録済み鍵の削除&quot;&gt;ssh-agentの登録済み鍵の削除&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ssh-add -d&lt;/code&gt;で指定鍵の削除&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ssh-add -D&lt;/code&gt;で登録済み鍵の全削除&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;鍵の保持寿命を設定&quot;&gt;鍵の保持寿命を設定&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ssh-add -t life&lt;/code&gt;で追加する鍵をエージェントが保持する期間を設定できます。&lt;br /&gt;
未指定の場合は、エージェントのデフォルト値が期間として使われます。&lt;br /&gt;
エージェントのデフォルト値も未指定だと期間は無制限になります。&lt;/p&gt;

&lt;p&gt;無制限はセキュリティの観点からしてリスクがあるので、一定の期間を設けておくことを推奨します。&lt;/p&gt;

&lt;h2 id=&quot;ssh-agentを接続先ホストでも使うssh-agent-forwarding&quot;&gt;ssh-agentを接続先ホストでも使う(SSH Agent forwarding)&lt;/h2&gt;
&lt;p&gt;Agent forwardingで接続することで、接続先ホストでローカルのssh-agentを使うことができます。&lt;br /&gt;
つまり、接続先ホストに秘密鍵をおかずに、秘密鍵を使うことができるようになります。&lt;/p&gt;

&lt;h3 id=&quot;agent-forwardingの事前条件&quot;&gt;Agent forwardingの事前条件&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;SSHサーバが&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AllowAgentForwarding&lt;/code&gt;の許可が必要&lt;/li&gt;
  &lt;li&gt;SSHクライアント接続時に何れかの方法で指定する
    &lt;ul&gt;
      &lt;li&gt;sshコマンドに&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-A&lt;/code&gt;オプションを渡す(セッション毎)&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.ssh/config&lt;/code&gt;に全体またはホスト毎に&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ForwardAgent yes&lt;/code&gt;を記載する(ユーザー・ホスト毎)&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/ssh/ssh_config&lt;/code&gt;に&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ForwardAgent yes&lt;/code&gt;を記載する(システム全体)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;ssh-agentのリスク&quot;&gt;ssh-agentのリスク&lt;/h2&gt;

&lt;p&gt;便利なssh-agentですが、運用にはリスクが伴います。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;man ssh&lt;/code&gt;の&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-A&lt;/code&gt;でも記載されてますが、Agent forwardingには一定のセキュリティリスクが潜在します。&lt;br /&gt;
またssh-agentはパスフレーズを一度登録すればなしにしてしまうので、キーの保持寿命を設定するなど使用には注意が必要です。&lt;/p&gt;</content><author><name></name></author><category term="tools" /><category term="ssh" /><category term="ssh-agent" /><summary type="html">ssh接続で使う公開鍵のパスフレーズ入力は面倒ですが、ssh-agentでパスフレーズ入力を代理してくれます。 また、複数サーバを横断する場合に鍵の管理に困りますが、ssh-agentで秘密鍵をサーバに配置せずに済みます。</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://blog.mothule.com/assets/images/2020-08-18-tools-ssh-ssh-agent-usage/eyecatch.png" /><media:content medium="image" url="https://blog.mothule.com/assets/images/2020-08-18-tools-ssh-ssh-agent-usage/eyecatch.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry></feed>